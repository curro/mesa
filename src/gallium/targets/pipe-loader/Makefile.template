# src/gallium/targets/pipe-loader/Makefile.template
#
# Template makefile for building pipe driver shared libraries.
#
# Input variables: PIPE_INSTALL_DIR, PIPE_PREFIX (optional)
#
include $(TOP)/configs/current
CUR = $(TOP)/src/gallium/targets/pipe-loader

PIPE_PREFIX ?= pipe_

PIPE_DEFINES = -DPIPE_SEARCH_DIR=\"$(PIPE_INSTALL_DIR)\" \
	     -DPIPE_PREFIX=\"$(PIPE_PREFIX)\"

PIPE_INCLUDES = \
	-I$(TOP)/include \
	-I$(TOP)/src/gallium/auxiliary \
	-I$(TOP)/src/gallium/drivers \
	-I$(TOP)/src/gallium/include \
	-I$(TOP)/src/gallium/winsys

PIPE_LIBS = \
	$(TOP)/src/gallium/drivers/identity/libidentity.a \
	$(TOP)/src/gallium/drivers/galahad/libgalahad.a \
	$(TOP)/src/gallium/drivers/trace/libtrace.a \
	$(TOP)/src/gallium/drivers/rbug/librbug.a \
	$(GALLIUM_AUXILIARIES)

# as if we are DRI modules
PIPE_SYS = $(DRI_LIB_DEPS)

PIPE_CFLAGS = \
	-DGALLIUM_RBUG -DGALLIUM_TRACE -DGALLIUM_GALAHAD \
	$(LIBDRM_CFLAGS)

PIPE_LDFLAGS = -Wl,--no-undefined

# i915 pipe driver
i915_LIBS = \
	$(TOP)/src/gallium/winsys/i915/drm/libi915drm.a \
	$(TOP)/src/gallium/drivers/i915/libi915.a
i915_SYS = -ldrm_intel

# i965 pipe driver
i965_LIBS = \
	$(TOP)/src/gallium/winsys/i965/drm/libi965drm.a \
	$(TOP)/src/gallium/drivers/i965/libi965.a \
	$(TOP)/src/gallium/winsys/sw/wrapper/libwsw.a
i965_SYS = -ldrm_intel

# nouveau pipe driver
nouveau_LIBS = \
	$(TOP)/src/gallium/winsys/nouveau/drm/libnouveaudrm.a \
	$(TOP)/src/gallium/drivers/nvfx/libnvfx.a \
	$(TOP)/src/gallium/drivers/nv50/libnv50.a \
	$(TOP)/src/gallium/drivers/nvc0/libnvc0.a \
	$(TOP)/src/gallium/drivers/nouveau/libnouveau.a
nouveau_SYS = -ldrm_nouveau

# r300 pipe driver
r300_LIBS = \
	$(TOP)/src/gallium/winsys/radeon/drm/libradeonwinsys.a \
	$(TOP)/src/gallium/drivers/r300/libr300.a

# r600 pipe driver
r600_LIBS = \
	$(TOP)/src/gallium/winsys/radeon/drm/libradeonwinsys.a \
	$(TOP)/src/gallium/drivers/r600/libr600.a

# vmwgfx pipe driver
vmwgfx_LIBS = \
	$(TOP)/src/gallium/winsys/svga/drm/libsvgadrm.a \
	$(TOP)/src/gallium/drivers/svga/libsvga.a

ifneq ($(findstring llvmpipe,$(GALLIUM_DRIVERS_DIRS)),)
   swrast_LIBS = $(TOP)/src/gallium/drivers/llvmpipe/libllvmpipe.a
   PIPE_CFLAGS += -DGALLIUM_LLVMPIPE
else ifneq ($(findstring softpipe,$(GALLIUM_DRIVERS_DIRS)),)
   swrast_LIBS = $(TOP)/src/gallium/drivers/softpipe/libsoftpipe.a
   PIPE_CFLAGS += -DGALLIUM_SOFTPIPE
endif

# LLVM
ifeq ($(MESA_LLVM),1)
   PIPE_SYS += $(LLVM_LIBS)
   PIPE_LDFLAGS += $(LLVM_LDFLAGS)
endif

# determine the targets/sources
_PIPE_TARGETS_CC =
_PIPE_TARGETS_CXX =
PIPE_SOURCES =

ifneq ($(findstring i915/drm,$(GALLIUM_WINSYS_DIRS)),)
   _PIPE_TARGETS_CC += $(PIPE_PREFIX)i915.so
   PIPE_SOURCES += pipe_i915.c
endif

ifneq ($(findstring i965/drm,$(GALLIUM_WINSYS_DIRS)),)
   _PIPE_TARGETS_CC += $(PIPE_PREFIX)i965.so
   PIPE_SOURCES += pipe_i965.c
endif

ifneq ($(findstring nouveau/drm,$(GALLIUM_WINSYS_DIRS)),)
   _PIPE_TARGETS_CXX += $(PIPE_PREFIX)nouveau.so
   PIPE_SOURCES += pipe_nouveau.c
endif

ifneq ($(findstring radeon/drm,$(GALLIUM_WINSYS_DIRS)),)
ifneq ($(findstring r300,$(GALLIUM_DRIVERS_DIRS)),)
   _PIPE_TARGETS_CC += $(PIPE_PREFIX)r300.so
   PIPE_SOURCES += pipe_r300.c
endif
endif

ifneq ($(findstring radeon/drm,$(GALLIUM_WINSYS_DIRS)),)
ifneq ($(findstring r600,$(GALLIUM_DRIVERS_DIRS)),)
   _PIPE_TARGETS_CC += $(PIPE_PREFIX)r600.so
   PIPE_SOURCES += pipe_r600.c
endif
endif

ifneq ($(findstring svga/drm,$(GALLIUM_WINSYS_DIRS)),)
   _PIPE_TARGETS_CC += $(PIPE_PREFIX)vmwgfx.so
   PIPE_SOURCES += pipe_vmwgfx.c
endif

ifneq ($(filter llvmpipe softpipe,$(GALLIUM_DRIVERS_DIRS)),)
   _PIPE_TARGETS_CC += $(PIPE_PREFIX)swrast.so
   PIPE_SOURCES += pipe_swrast.c
endif

PIPE_OBJECTS := $(PIPE_SOURCES:.c=.o)
PIPE_SOURCES := $(addprefix $(CUR)/, $(PIPE_SOURCES))

ifeq ($(MESA_LLVM),1)
   PIPE_TARGETS_CXX = $(_PIPE_TARGETS_CXX) $(_PIPE_TARGETS_CC)
   PIPE_TARGETS_CC =
else
   PIPE_TARGETS_CXX = $(_PIPE_TARGETS_CXX)
   PIPE_TARGETS_CC = $(_PIPE_TARGETS_CC)
endif

PIPE_TARGETS = $(PIPE_TARGETS_CC) $(PIPE_TARGETS_CXX)

.SECONDEXPANSION:

$(PIPE_TARGETS_CC): $(PIPE_PREFIX)%.so: pipe_%.o $(PIPE_LIBS) $$(%_LIBS)
	$(MKLIB) -o $@ -noprefix -linker '$(CC)' \
		-ldflags '-L$(TOP)/$(LIB_DIR) $(PIPE_LDFLAGS) $(LDFLAGS)' \
		$(MKLIB_OPTIONS) $< \
		-Wl,--start-group $(PIPE_LIBS) $($*_LIBS) -Wl,--end-group \
		$(PIPE_SYS) $($*_SYS)

$(PIPE_TARGETS_CXX): $(PIPE_PREFIX)%.so: pipe_%.o $(PIPE_LIBS) $$(%_LIBS)
	$(MKLIB) -o $@ -noprefix -linker '$(CXX)' \
		-ldflags '-L$(TOP)/$(LIB_DIR) $(PIPE_LDFLAGS) $(LDFLAGS)' \
		$(MKLIB_OPTIONS) $< \
		-Wl,--start-group $(PIPE_LIBS) $($*_LIBS) -Wl,--end-group \
		$(PIPE_SYS) $($*_SYS)

$(PIPE_OBJECTS): %.o: $(CUR)/%.c
	$(CC) -c -o $@ $< $(PIPE_INCLUDES) $(PIPE_CFLAGS) $(CFLAGS)

install-pipes: $(PIPE_TARGETS)
	$(INSTALL) -d $(DESTDIR)$(PIPE_INSTALL_DIR)
	for tgt in $(GBM_EXTRA_TARGETS); do \
		$(MINSTALL) "$$tgt" $(DESTDIR)$(PIPE_INSTALL_DIR); \
	done

clean-pipes:
	rm -f $(PIPE_TARGETS)
	rm -f $(PIPE_OBJECTS)
