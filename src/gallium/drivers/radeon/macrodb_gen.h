// Copyright (c) 2011, Advanced Micro Devices, Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// Neither the name of the copyright holder nor the names of its contributors
// may be used to endorse or promote products derived from this software
// without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
// If you use the software (in whole or in part), you shall adhere to all
// applicable U.S., European, and other export laws, including but not limited
// to the U.S. Export Administration Regulations (“EAR”), (15 C.F.R. Sections
// 730 through 774), and E.U. Council Regulation (EC) No 1334/2000 of 22 June
// 2000.  Further, pursuant to Section 740.6 of the EAR, you hereby certify
// that, except pursuant to a license granted by the United States Department
// of Commerce Bureau of Industry and Security or as otherwise permitted
// pursuant to a License Exception under the U.S. Export Administration
// Regulations ("EAR"), you will not (1) export, re-export or release to a
// national of a country in Country Groups D:1, E:1 or E:2 any restricted
// technology, software, or source code you receive hereunder, or (2) export to
// Country Groups D:1, E:1 or E:2 the direct product of such technology or
// software, if such foreign produced direct product is subject to national
// security controls as identified on the Commerce Control List (currently
// found in Supplement 1 to Part 774 of EAR).  For the most current Country
// Group listings, or for additional information about the EAR or your
// obligations under those regulations, please refer to the U.S. Bureau of
// Industry and Security’s website at http://www.bis.doc.gov/.
//
//==-----------------------------------------------------------------------===//
#ifndef _macrodb_gen_HPP_
#define _macrodb_gen_HPP_
/*
The time is Mon Jul 18 18:22:11 2011
*/
const macrodata::SMacroEntry sMacroDB[] =
{
{ "barrier",
"mdef(0)_out(1)_in(1)\n"
"mov r0, in0\n"
"fence_threads_memory_lds\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "barrierGlobal",
"mdef(1)_out(1)_in(1)\n"
"mov r0, in0\n"
"fence_threads_memory\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "barrierLocal",
"mdef(2)_out(1)_in(1)\n"
"mov r0, in0\n"
"fence_threads_lds\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "read_mem_fence",
"mdef(3)_out(1)_in(1)\n"
"mov r0, in0\n"
"fence_lds_mem_read_only\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "write_mem_fence",
"mdef(4)_out(1)_in(1)\n"
"mov r0, in0\n"
"fence_lds_mem_write_only\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__acosh_f32",
"mdef(5)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r0._y__, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x007FFFFF\n"
"and r0.__zw, r1.x, l1\n"
"dcl_literal l2, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r1._yz_, r0.z, l2\n"
"mul_ieee r1.__z_, r1.z, r1.y\n"
"sqrt_vec r1.__z_, r1.z\n"
"add r0.x___, r1.y, r1.z\n"
"dcl_literal l3, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1._y__, r0.x, l3\n"
"dcl_literal l4, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.__z_, r1.y, l4\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1._y__, r1.y, l5\n"
"dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1.___w, l6, r1.z\n"
"dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.___w, r1.w, l7\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r1.w, l8\n"
"dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1.___w, r1.w, l9\n"
"dcl_literal l10, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1._y__, r1.y, l10\n"
"iadd r1._y__, r1.y, r2.x\n"
"itof r2._y__, r1.y\n"
"ior r1._y__, r1.z, r1.w\n"
"dcl_literal l11, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r2.x___, r1.y, l11\n"
"dcl_literal l12, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD\n"
"ge r1._y__, r0.x, l12\n"
"cmov_logical r0.xy__, r1.y, r2.xyxx, r0.xyxx\n"
"dcl_literal l13, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1._y__, r0.x, l13\n"
"div_zeroop(infinity) r1._y__, r0.x, r1.y\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"mul_ieee r1.___w, r1.z, r1.z\n"
"dcl_literal l14, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"dcl_literal l15, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.w, l14, l15\n"
"dcl_literal l16, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.w, r2.xyxx, l16\n"
"mul_ieee r2.x___, r1.w, r2.x\n"
"dcl_literal l17, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r1.___w, r1.w, r2.y, l17\n"
"mad_ieee r1.__z_, r1.z, r1.w, r2.x\n"
"mul_ieee r1.___w, r0.x, r0.x\n"
"dcl_literal l18, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.__z_, r1.w, l18, r1.z\n"
"dcl_literal l19, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r2.x___, r0.y, l19\n"
"mad_ieee r1._y__, r1.y, r1.z, r2.x\n"
"dcl_literal l20, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1._y__, r1.w, l20, r1.y_neg(xyzw)\n"
"add r0.x___, r0.x_neg(xyzw), r1.y\n"
"dcl_literal l21, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.x___, r0.y, l21, r0.x_neg(xyzw)\n"
"dcl_literal l22, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r0._y__, l22, r0.w\n"
"dcl_literal l23, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r0._y__, r0.y, l23\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1._y__, r0.y, l24\n"
"dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0._y__, r0.y, l25\n"
"ior r0.___w, r0.w, r1.y\n"
"dcl_literal l26, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r1._yz_, r0.w, l26\n"
"div_zeroop(infinity) r0.___w, r1.y, r1.z\n"
"mul_ieee r1.__z_, r0.w, r0.w\n"
"mul_ieee r1.___w, r1.z, r1.z\n"
"dcl_literal l27, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"dcl_literal l28, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.w, l27, l28\n"
"dcl_literal l29, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.w, r2.xyxx, l29\n"
"mul_ieee r2.x___, r1.w, r2.x\n"
"dcl_literal l30, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r1.___w, r1.w, r2.y, l30\n"
"mad_ieee r1.__z_, r1.z, r1.w, r2.x\n"
"mul_ieee r1.___w, r1.y, r1.y\n"
"dcl_literal l31, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.__z_, r1.w, l31, r1.z\n"
"dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r0.z, l32\n"
"dcl_literal l33, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l33\n"
"iadd r0._y__, r2.x, r0.y\n"
"itof r0._y__, r0.y\n"
"dcl_literal l34, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r2.x___, r0.y, l34\n"
"mad_ieee r0.___w, r0.w, r1.z, r2.x\n"
"dcl_literal l35, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r1.w, l35, r0.w_neg(xyzw)\n"
"add r0.___w, r1.y_neg(xyzw), r0.w\n"
"dcl_literal l36, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0._y__, r0.y, l36, r0.w_neg(xyzw)\n"
"dcl_literal l37, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"add r0._y__, r0.y, l37\n"
"dcl_literal l38, 0x46000000, 0x46000000, 0x46000000, 0x46000000\n"
"ult r0.___w, l38, r0.z\n"
"cmov_logical r0.x___, r0.w, r0.y, r0.x\n"
"dcl_literal l39, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0._y__, l39, r1.x\n"
"dcl_literal l40, 0x00000000, 0x3F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, r1.x, l40\n"
"dcl_literal l41, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.z, l41\n"
"dcl_literal l42, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l42, r0.z\n"
"and r0._y__, r0.y, r0.w\n"
"and r0.___w, r1.x, r0.w\n"
"dcl_literal l43, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.y, l43, r0.x\n"
"ior r0._y__, r0.z, r0.w\n"
"dcl_literal l44, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l44, r0.x\n"
"dcl_literal l45, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r1.y, l45, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__acospi_f32",
"mdef(6)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r1.x, l1\n"
"cmov_logical r0.x___, r0.w, r1.x_neg(xyzw), r1.x\n"
"inot r0.___w, r0.w\n"
"\n"
"dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1._y__, r0.x_neg(xyzw), l2\n"
"\n"
"dcl_literal l3, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.___w, r1.y, l3\n"
"sqrt_vec r1._yz_, r1.w\n"
"\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.x___, r1.x, l4\n"
"\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r2.x___, r2.x, l5\n"
"\n"
"dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l6\n"
"\n"
"dcl_literal l7, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"ige r2._y__, r2.x, l7\n"
"\n"
"dcl_literal l8, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6\n"
"ilt r2.x___, r2.x, l8\n"
"mul_ieee r0.__z_, r0.x, r0.x\n"
"cmov_logical r0.xyz_, r2.y, r1.yzwy, r0.xyzx\n"
"\n"
"dcl_literal l9, 0x00000000, 0x3B81CE6B, 0x3F561F0D, 0x00000000\n"
"\n"
"dcl_literal l10, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5, 0x00000000\n"
"mad_ieee r1._yz_, r0.z_neg(xyzw), l9, l10\n"
"\n"
"dcl_literal l11, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD\n"
"mad_ieee r1._y__, r1.y, r0.z, l11\n"
"\n"
"dcl_literal l12, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC\n"
"mad_ieee r1._y__, r1.y, r0.z, l12\n"
"mul_ieee r1._y__, r0.z, r1.y\n"
"div_zeroop(infinity) r1._y__, r1.y, r1.z\n"
"mul_ieee r1.__z_, r0.x, r1.y\n"
"add r1.__z_, r1.z, r1.z\n"
"\n"
"dcl_literal l13, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"and r1.___w, r0.y, l13\n"
"mad_ieee r0.__z_, r1.w_neg(xyzw), r1.w, r0.z\n"
"add r2.__z_, r0.y, r1.w\n"
"mad_ieee r0.x___, r0.x, r1.y, r0.y\n"
"\n"
"dcl_literal l14, 0x333BB645, 0x333BB645, 0x333BB645, 0x333BB645\n"
"mad_ieee r0._y__, r1.x_neg(xyzw), r1.y, l14\n"
"div_zeroop(infinity) r0.__z_, r0.z, r2.z\n"
"\n"
"dcl_literal l15, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r0.z, l15, r1.z\n"
"\n"
"dcl_literal l16, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r1.w, l16, r0.z\n"
"\n"
"dcl_literal l17, 0xB33BB645, 0xB33BB645, 0xB33BB645, 0xB33BB645\n"
"add r0.x___, r0.x, l17\n"
"\n"
"dcl_literal l18, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"\n"
"dcl_literal l19, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mad_ieee r0.x___, r0.x_neg(xyzw), l18, l19\n"
"and r0.___w, r0.w, r2.y\n"
"cmov_logical r0.x___, r0.w, r0.z, r0.x\n"
"add r0._y__, r1.x, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l20, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"add r0._y__, r0.y_neg(xyzw), l20\n"
"cmov_logical r0.x___, r2.y, r0.x, r0.y\n"
"mov r0._y__, r1.x_abs\n"
"\n"
"dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0._y__, l21, r0.y\n"
"\n"
"dcl_literal l22, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.__z_, r1.x, l22\n"
"\n"
"dcl_literal l23, 0x3F800000, 0xBF800000, 0x00000000, 0x00000000\n"
"eq r1.xy__, r1.x, l23\n"
"cmov_logical r0.x___, r0.y, r0.z, r0.x\n"
"\n"
"dcl_literal l24, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r0.x___, r2.x, l24, r0.x\n"
"\n"
"dcl_literal l25, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r1.x, l25, r0.x\n"
"\n"
"dcl_literal l26, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"cmov_logical r0.x___, r1.y, l26, r0.x\n"
"\n"
"dcl_literal l27, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983\n"
"mul_ieee r0.x___, r0.x, l27\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__acos_f32",
"mdef(7)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r0._y__, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r1.x, l1\n"
"cmov_logical r0.x___, r0.w, r1.x_neg(xyzw), r1.x\n"
"inot r0.___w, r0.w\n"
"dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1._y__, r0.x_neg(xyzw), l2\n"
"dcl_literal l3, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.___w, r1.y, l3\n"
"sqrt_vec r1._yz_, r1.w\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.x___, r1.x, l4\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r2.x___, r2.x, l5\n"
"dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l6\n"
"dcl_literal l7, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"ige r2._y__, r2.x, l7\n"
"dcl_literal l8, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6\n"
"ilt r2.x___, r2.x, l8\n"
"mul_ieee r0.__z_, r0.x, r0.x\n"
"cmov_logical r0.xyz_, r2.y, r1.yzwy, r0.xyzx\n"
"dcl_literal l9, 0x00000000, 0x3B81CE6B, 0x3F561F0D, 0x00000000\n"
"dcl_literal l10, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5, 0x00000000\n"
"mad_ieee r1._yz_, r0.z_neg(xyzw), l9, l10\n"
"dcl_literal l11, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD\n"
"mad_ieee r1._y__, r1.y, r0.z, l11\n"
"dcl_literal l12, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC\n"
"mad_ieee r1._y__, r1.y, r0.z, l12\n"
"mul_ieee r1._y__, r0.z, r1.y\n"
"div_zeroop(infinity) r1._y__, r1.y, r1.z\n"
"mul_ieee r1.__z_, r0.x, r1.y\n"
"add r1.__z_, r1.z, r1.z\n"
"dcl_literal l13, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"and r1.___w, r0.y, l13\n"
"mad_ieee r0.__z_, r1.w_neg(xyzw), r1.w, r0.z\n"
"add r2.__z_, r0.y, r1.w\n"
"mad_ieee r0.x___, r0.x, r1.y, r0.y\n"
"dcl_literal l14, 0x333BB645, 0x333BB645, 0x333BB645, 0x333BB645\n"
"mad_ieee r0._y__, r1.x_neg(xyzw), r1.y, l14\n"
"div_zeroop(infinity) r0.__z_, r0.z, r2.z\n"
"dcl_literal l15, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r0.z, l15, r1.z\n"
"dcl_literal l16, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r1.w, l16, r0.z\n"
"dcl_literal l17, 0xB33BB645, 0xB33BB645, 0xB33BB645, 0xB33BB645\n"
"add r0.x___, r0.x, l17\n"
"dcl_literal l18, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l19, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mad_ieee r0.x___, r0.x_neg(xyzw), l18, l19\n"
"and r0.___w, r0.w, r2.y\n"
"cmov_logical r0.x___, r0.w, r0.z, r0.x\n"
"add r0._y__, r1.x, r0.y_neg(xyzw)\n"
"dcl_literal l20, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"add r0._y__, r0.y_neg(xyzw), l20\n"
"cmov_logical r0.x___, r2.y, r0.x, r0.y\n"
"mov r0._y__, r1.x_abs\n"
"dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0._y__, l21, r0.y\n"
"dcl_literal l22, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.__z_, r1.x, l22\n"
"dcl_literal l23, 0x3F800000, 0xBF800000, 0x00000000, 0x00000000\n"
"eq r1.xy__, r1.x, l23\n"
"cmov_logical r0.x___, r0.y, r0.z, r0.x\n"
"dcl_literal l24, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r0.x___, r2.x, l24, r0.x\n"
"dcl_literal l25, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r1.x, l25, r0.x\n"
"dcl_literal l26, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"cmov_logical r0.x___, r1.y, l26, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_bitalign_1",
"mdef(8)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bitalign r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bitalign_2",
"mdef(9)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bitalign r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bitalign_3",
"mdef(10)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bitalign r0.xyz_, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bitalign_4",
"mdef(11)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bitalign r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bytealign_1",
"mdef(12)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bytealign r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bytealign_2",
"mdef(13)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bytealign r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bytealign_3",
"mdef(14)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bytealign r0.xyz_, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_bytealign_4",
"mdef(15)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"bytealign r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_cmovl_1",
"mdef(16)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"cmov_logical r0.x, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_cmovl_2",
"mdef(17)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"cmov_logical r0.xy, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_cmovl_3",
"mdef(18)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"cmov_logical r0.xyz, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_cmovl_4",
"mdef(19)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"cmov_logical r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_dfrexp",
"mdef(20)_out(1)_in(1)\n"
"mov r0, in0\n"
"dfrexp r0, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_dldexp",
"mdef(21)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dldexp r0.xy__, r0.xy, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_dmad",
"mdef(22)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"dmad r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_dmax",
"mdef(23)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dmax r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_dmin",
"mdef(24)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dmin r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_dp2_ieee",
"mdef(25)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dp2_ieee r0.x___, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_dp3_ieee",
"mdef(26)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dp3_ieee r0.x___, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_dp4_ieee",
"mdef(27)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dp4_ieee r0.x___, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_drcp",
"mdef(28)_out(1)_in(1)\n"
"mov r0, in0\n"
"drcp_zeroop(infinity) r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_drsq",
"mdef(29)_out(1)_in(1)\n"
"mov r0, in0\n"
"drsq_zeroop(infinity) r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_fabs_1",
"mdef(30)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, r0.x_abs\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_fabs_2",
"mdef(31)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xy, r0.xy_abs\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_fabs_3",
"mdef(32)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xyz, r0.xyz_abs\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_fabs_4",
"mdef(33)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, r0_abs\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_hi_1",
"mdef(34)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_hi r0.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_hi_2",
"mdef(35)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_hi r0.xy, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_hi_3",
"mdef(36)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_hi r0.xyz, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_hi_4",
"mdef(37)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_hi r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_lo_1",
"mdef(38)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_lo r0.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_lo_2",
"mdef(39)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_lo r0.xy, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_lo_3",
"mdef(40)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_lo r0.xyz, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_ffb_lo_4",
"mdef(41)_out(1)_in(1)\n"
"mov r0, in0\n"
"ffb_lo r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_near_f32",
"mdef(42)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"dcl_literal l19, 143, 143, 143, 143\n"
"iand r1.x, r0.x, l1.x\n"
"ushr r2.x, r0.x, l2.x\n"
"iand r2.x, r2.x, l3.x\n"
"iadd r2.x, r2.x, l4.x\n"
"iadd r3.x, l6.x, r2.x_neg(xyzw)\n"
"imin r3.x, r3.x, l5.x\n"
"imax r3.x, r3.x, l8.x\n"
"ilt r4.x, l4.x, r2.x\n"
"cmov_logical r4.x, r4.x, l7.x, l8.x\n"
"ior r4.x, r1.x, r4.x\n"
"iadd r13.x, l5.x, r3.x_neg(xyzw)\n"
"ishl r4.x, r4.x, r13.x\n"
"ushr r5.x, r0.x, l9.x\n"
"iand r5.x, r5.x, l10.x\n"
"ushr r6.x, r0.x, l11.x\n"
"iand r6.x, r6.x, l12.x\n"
"cmov_logical r7.x, r1.x, l14.x, l8.x\n"
"ior r7.x, r7.x, r6.x\n"
"ior r7.x, r7.x, l13.x\n"
"ishl r8.x, r2.x, l15.x\n"
"ior r8.x, r8.x, r6.x\n"
"ior r9.x, l16.x, r6.x\n"
"ushr r9.x, r9.x, r3.x\n"
"ilt r10.x, r2.x, l6.x\n"
"cmov_logical r10.x, r10.x, r9.x, r8.x\n"
"iand r11.x, r10.x, l6.x\n"
"ult r12.x, l17.x, r4.x\n"
"cmov_logical r12.x, r12.x, l6.x, l8.x\n"
"ieq r13.x, r4.x, l17.x\n"
"cmov_logical r12.x, r13.x, r11.x, r12.x\n"
"iadd r10.x, r10.x, r12.x\n"
"ilt r13.x, l18.x, r2.x\n"
"cmov_logical r10.x, r13.x, l13.x, r10.x\n"
"ieq r13.x, r2.x, l19.x\n"
"cmov_logical r10.x, r13.x, r7.x, r10.x\n"
"ior r0.x, r5.x, r10.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_near_v2f32",
"mdef(43)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"dcl_literal l19, 143, 143, 143, 143\n"
"iand r1.xy, r0.xy, l1.xy\n"
"ushr r2.xy, r0.xy, l2.xy\n"
"iand r2.xy, r2.xy, l3.xy\n"
"iadd r2.xy, r2.xy, l4.xy\n"
"iadd r3.xy, l6.xy, r2.xy_neg(xyzw)\n"
"imin r3.xy, r3.xy, l5.xy\n"
"imax r3.xy, r3.xy, l8.xy\n"
"ilt r4.xy, l4.xy, r2.xy\n"
"cmov_logical r4.xy, r4.xy, l7.xy, l8.xy\n"
"ior r4.xy, r1.xy, r4.xy\n"
"iadd r13.xy, l5.xy, r3.xy_neg(xyzw)\n"
"ishl r4.xy, r4.xy, r13.xy\n"
"ushr r5.xy, r0.xy, l9.xy\n"
"iand r5.xy, r5.xy, l10.xy\n"
"ushr r6.xy, r0.xy, l11.xy\n"
"iand r6.xy, r6.xy, l12.xy\n"
"cmov_logical r7.xy, r1.xy, l14.xy, l8.xy\n"
"ior r7.xy, r7.xy, r6.xy\n"
"ior r7.xy, r7.xy, l13.xy\n"
"ishl r8.xy, r2.xy, l15.xy\n"
"ior r8.xy, r8.xy, r6.xy\n"
"ior r9.xy, l16.xy, r6.xy\n"
"ushr r9.xy, r9.xy, r3.xy\n"
"ilt r10.xy, r2.xy, l6.xy\n"
"cmov_logical r10.xy, r10.xy, r9.xy, r8.xy\n"
"iand r11.xy, r10.xy, l6.xy\n"
"ult r12.xy, l17.xy, r4.xy\n"
"cmov_logical r12.xy, r12.xy, l6.xy, l8.xy\n"
"ieq r13.xy, r4.xy, l17.xy\n"
"cmov_logical r12.xy, r13.xy, r11.xy, r12.xy\n"
"iadd r10.xy, r10.xy, r12.xy\n"
"ilt r13.xy, l18.xy, r2.xy\n"
"cmov_logical r10.xy, r13.xy, l13.xy, r10.xy\n"
"ieq r13.xy, r2.xy, l19.xy\n"
"cmov_logical r10.xy, r13.xy, r7.xy, r10.xy\n"
"ior r0.xy, r5.xy, r10.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_near_v4f32",
"mdef(44)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"dcl_literal l19, 143, 143, 143, 143\n"
"iand r1, r0, l1\n"
"ushr r2, r0, l2\n"
"iand r2, r2, l3\n"
"iadd r2, r2, l4\n"
"iadd r3, l6, r2_neg(xyzw)\n"
"imin r3, r3, l5\n"
"imax r3, r3, l8\n"
"ilt r4, l4, r2\n"
"cmov_logical r4, r4, l7, l8\n"
"ior r4, r1, r4\n"
"iadd r13, l5, r3_neg(xyzw)\n"
"ishl r4, r4, r13\n"
"ushr r5, r0, l9\n"
"iand r5, r5, l10\n"
"ushr r6, r0, l11\n"
"iand r6, r6, l12\n"
"cmov_logical r7, r1, l14, l8\n"
"ior r7, r7, r6\n"
"ior r7, r7, l13\n"
"ishl r8, r2, l15\n"
"ior r8, r8, r6\n"
"ior r9, l16, r6\n"
"ushr r9, r9, r3\n"
"ilt r10, r2, l6\n"
"cmov_logical r10, r10, r9, r8\n"
"iand r11, r10, l6\n"
"ult r12, l17, r4\n"
"cmov_logical r12, r12, l6, l8\n"
"ieq r13, r4, l17\n"
"cmov_logical r12, r13, r11, r12\n"
"iadd r10, r10, r12\n"
"ilt r13, l18, r2\n"
"cmov_logical r10, r13, l13, r10\n"
"ieq r13, r2, l19\n"
"cmov_logical r10, r13, r7, r10\n"
"ior r0, r5, r10\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_neg_inf_f32",
"mdef(45)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 15, 15, 15, 15\n"
"dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff\n"
"dcl_literal l19, 30, 30, 30, 30\n"
"dcl_literal l20, 143, 143, 143, 143\n"
"iand r1.x, r0.x, l1.x\n"
"ushr r2.x, r0.x, l2.x\n"
"iand r2.x, r2.x, l3.x\n"
"iadd r2.x, r2.x, l4.x\n"
"iadd r3.x, l6.x, r2.x_neg(xyzw)\n"
"imin r3.x, r3.x, l5.x\n"
"imax r3.x, r3.x, l8.x\n"
"ilt r4.x, l4.x, r2.x\n"
"cmov_logical r4.x, r4.x, l7.x, l8.x\n"
"ior r4.x, r4.x, r1.x\n"
"iadd r13.x, l5.x, r3.x_neg(xyzw)\n"
"ishl r4.x, r4.x, r13.x\n"
"ushr r5.x, r0.x, l9.x\n"
"iand r5.x, r5.x, l10.x\n"
"ushr r6.x, r0.x, l11.x\n"
"iand r6.x, r6.x, l12.x\n"
"cmov_logical r7.x, r1.x, l14.x, l8.x\n"
"ior r7.x, r7.x, r6.x\n"
"ior r7.x, r7.x, l13.x\n"
"ishl r8.x, r2.x, l15.x\n"
"ior r8.x, r8.x, r6.x\n"
"ior r9.x, l16.x, r6.x\n"
"ushr r9.x, r9.x, r3.x\n"
"ilt r10.x, r2.x, l6.x\n"
"cmov_logical r10.x, r10.x, r9.x, r8.x\n"
"ushr r13.x, r5.x, l17.x\n"
"ult r14.x, l8.x, r4.x\n"
"iand r13.x, r13.x, r14.x\n"
"iadd r10.x, r10.x, r13.x\n"
"ushr r11.x, r5.x, l17.x\n"
"iadd r11.x, r11.x, l18.x\n"
"ilt r13.x, l19.x, r2.x\n"
"cmov_logical r10.x, r13.x, r11.x, r10.x\n"
"ieq r13.x, r2.x, l20.x\n"
"cmov_logical r10.x, r13.x, r7.x, r10.x\n"
"ior r0.x, r5.x, r10.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_neg_inf_v2f32",
"mdef(46)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 15, 15, 15, 15\n"
"dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff\n"
"dcl_literal l19, 30, 30, 30, 30\n"
"dcl_literal l20, 143, 143, 143, 143\n"
"iand r1.xy, r0.xy, l1.xy\n"
"ushr r2.xy, r0.xy, l2.xy\n"
"iand r2.xy, r2.xy, l3.xy\n"
"iadd r2.xy, r2.xy, l4.xy\n"
"iadd r3.xy, l6.xy, r2.xy_neg(xyzw)\n"
"imin r3.xy, r3.xy, l5.xy\n"
"imax r3.xy, r3.xy, l8.xy\n"
"ilt r4.xy, l4.xy, r2.xy\n"
"cmov_logical r4.xy, r4.xy, l7.xy, l8.xy\n"
"ior r4.xy, r4.xy, r1.xy\n"
"iadd r13.xy, l5.xy, r3.xy_neg(xyzw)\n"
"ishl r4.xy, r4.xy, r13.xy\n"
"ushr r5.xy, r0.xy, l9.xy\n"
"iand r5.xy, r5.xy, l10.xy\n"
"ushr r6.xy, r0.xy, l11.xy\n"
"iand r6.xy, r6.xy, l12.xy\n"
"cmov_logical r7.xy, r1.xy, l14.xy, l8.xy\n"
"ior r7.xy, r7.xy, r6.xy\n"
"ior r7.xy, r7.xy, l13.xy\n"
"ishl r8.xy, r2.xy, l15.xy\n"
"ior r8.xy, r8.xy, r6.xy\n"
"ior r9.xy, l16.xy, r6.xy\n"
"ushr r9.xy, r9.xy, r3.xy\n"
"ilt r10.xy, r2.xy, l6.xy\n"
"cmov_logical r10.xy, r10.xy, r9.xy, r8.xy\n"
"ushr r13.xy, r5.xy, l17.xy\n"
"ult r14.xy, l8.xy, r4.xy\n"
"iand r13.xy, r13.xy, r14.xy\n"
"iadd r10.xy, r10.xy, r13.xy\n"
"ushr r11.xy, r5.xy, l17.xy\n"
"iadd r11.xy, r11.xy, l18.xy\n"
"ilt r13.xy, l19.xy, r2.xy\n"
"cmov_logical r10.xy, r13.xy, r11.xy, r10.xy\n"
"ieq r13.xy, r2.xy, l20.xy\n"
"cmov_logical r10.xy, r13.xy, r7.xy, r10.xy\n"
"ior r0.xy, r5.xy, r10.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_neg_inf_v4f32",
"mdef(47)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 15, 15, 15, 15\n"
"dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff\n"
"dcl_literal l19, 30, 30, 30, 30\n"
"dcl_literal l20, 143, 143, 143, 143\n"
"iand r1, r0, l1\n"
"ushr r2, r0, l2\n"
"iand r2, r2, l3\n"
"iadd r2, r2, l4\n"
"iadd r3, l6, r2_neg(xyzw)\n"
"imin r3, r3, l5\n"
"imax r3, r3, l8\n"
"ilt r4, l4, r2\n"
"cmov_logical r4, r4, l7, l8\n"
"ior r4, r4, r1\n"
"iadd r13, l5, r3_neg(xyzw)\n"
"ishl r4, r4, r13\n"
"ushr r5, r0, l9\n"
"iand r5, r5, l10\n"
"ushr r6, r0, l11\n"
"iand r6, r6, l12\n"
"cmov_logical r7, r1, l14, l8\n"
"ior r7, r7, r6\n"
"ior r7, r7, l13\n"
"ishl r8, r2, l15\n"
"ior r8, r8, r6\n"
"ior r9, l16, r6\n"
"ushr r9, r9, r3\n"
"ilt r10, r2, l6\n"
"cmov_logical r10, r10, r9, r8\n"
"ushr r13, r5, l17\n"
"ult r14, l8, r4\n"
"iand r13, r13, r14\n"
"iadd r10, r10, r13\n"
"ushr r11, r5, l17\n"
"iadd r11, r11, l18\n"
"ilt r13, l19, r2\n"
"cmov_logical r10, r13, r11, r10\n"
"ieq r13, r2, l20\n"
"cmov_logical r10, r13, r7, r10\n"
"ior r0, r5, r10\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_plus_inf_f32",
"mdef(48)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 15, 15, 15, 15\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"dcl_literal l19, 143, 143, 143, 143\n"
"iand r1.x, r0.x, l1.x\n"
"ushr r2.x, r0.x, l2.x\n"
"iand r2.x, r2.x, l3.x\n"
"iadd r2.x, r2.x, l4.x\n"
"iadd r3.x, l6.x, r2.x_neg(xyzw)\n"
"imin r3.x, r3.x, l5.x\n"
"imax r3.x, r3.x, l8.x\n"
"ilt r4.x, l4.x, r2.x\n"
"cmov_logical r4.x, r4.x, l7.x, l8.x\n"
"ior r4.x, r1.x, r4.x\n"
"iadd r13.x, l5.x, r3.x_neg(xyzw)\n"
"ishl r4.x, r4.x, r13.x\n"
"ushr r5.x, r0.x, l9.x\n"
"iand r5.x, r5.x, l10.x\n"
"ushr r6.x, r0.x, l11.x\n"
"iand r6.x, r6.x, l12.x\n"
"cmov_logical r7.x, r1.x, l14.x, l8.x\n"
"ior r7.x, r7.x, r6.x\n"
"ior r7.x, r7.x, l13.x\n"
"ishl r8.x, r2.x, l15.x\n"
"ior r8.x, r8.x, r6.x\n"
"ior r9.x, l16.x, r6.x\n"
"ushr r9.x, r9.x, r3.x\n"
"ilt r10.x, r2.x, l6.x\n"
"cmov_logical r10.x, r10.x, r9.x, r8.x\n"
"ieq r13.x, l8.x, r5.x\n"
"ult r14.x, l8.x, r4.x\n"
"iand r13.x, r13.x, r14.x\n"
"iand r13.x, r13.x, l6.x\n"
"iadd r10.x, r10.x, r13.x\n"
"ushr r11.x, r5.x, l17.x\n"
"iadd r11.x, l13.x, r11.x_neg(xyzw)\n"
"ilt r13.x, l18.x, r2.x\n"
"cmov_logical r10.x, r13.x, r11.x, r10.x\n"
"ieq r13.x, r2.x, l19.x\n"
"cmov_logical r10.x, r13.x, r7.x, r10.x\n"
"ior r0.x, r5.x, r10.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_plus_inf_v2f32",
"mdef(49)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 15, 15, 15, 15\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"dcl_literal l19, 143, 143, 143, 143\n"
"iand r1.xy, r0.xy, l1.xy\n"
"ushr r2.xy, r0.xy, l2.xy\n"
"iand r2.xy, r2.xy, l3.xy\n"
"iadd r2.xy, r2.xy, l4.xy\n"
"iadd r3.xy, l6.xy, r2.xy_neg(xyzw)\n"
"imin r3.xy, r3.xy, l5.xy\n"
"imax r3.xy, r3.xy, l8.xy\n"
"ilt r4.xy, l4.xy, r2.xy\n"
"cmov_logical r4.xy, r4.xy, l7.xy, l8.xy\n"
"ior r4.xy, r1.xy, r4.xy\n"
"iadd r13.xy, l5.xy, r3.xy_neg(xyzw)\n"
"ishl r4.xy, r4.xy, r13.xy\n"
"ushr r5.xy, r0.xy, l9.xy\n"
"iand r5.xy, r5.xy, l10.xy\n"
"ushr r6.xy, r0.xy, l11.xy\n"
"iand r6.xy, r6.xy, l12.xy\n"
"cmov_logical r7.xy, r1.xy, l14.xy, l8.xy\n"
"ior r7.xy, r7.xy, r6.xy\n"
"ior r7.xy, r7.xy, l13.xy\n"
"ishl r8.xy, r2.xy, l15.xy\n"
"ior r8.xy, r8.xy, r6.xy\n"
"ior r9.xy, l16.xy, r6.xy\n"
"ushr r9.xy, r9.xy, r3.xy\n"
"ilt r10.xy, r2.xy, l6.xy\n"
"cmov_logical r10.xy, r10.xy, r9.xy, r8.xy\n"
"ieq r13.xy, l8.xy, r5.xy\n"
"ult r14.xy, l8.xy, r4.xy\n"
"iand r13.xy, r13.xy, r14.xy\n"
"iand r13.xy, r13.xy, l6.xy\n"
"iadd r10.xy, r10.xy, r13.xy\n"
"ushr r11.xy, r5.xy, l17.xy\n"
"iadd r11.xy, l13.xy, r11.xy_neg(xyzw)\n"
"ilt r13.xy, l18.xy, r2.xy\n"
"cmov_logical r10.xy, r13.xy, r11.xy, r10.xy\n"
"ieq r13.xy, r2.xy, l19.xy\n"
"cmov_logical r10.xy, r13.xy, r7.xy, r10.xy\n"
"ior r0.xy, r5.xy, r10.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_half_plus_inf_v4f32",
"mdef(50)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"dcl_literal l2, 23, 23, 23, 23\n"
"dcl_literal l3, 0xff, 0xff, 0xff, 0xff\n"
"dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90\n"
"dcl_literal l5, 19, 19, 19, 19\n"
"dcl_literal l6, 1, 1, 1, 1\n"
"dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000\n"
"dcl_literal l8, 0, 0, 0, 0\n"
"dcl_literal l9, 16, 16, 16, 16\n"
"dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000\n"
"dcl_literal l11, 13, 13, 13, 13\n"
"dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff\n"
"dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00\n"
"dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200\n"
"dcl_literal l15, 10, 10, 10, 10\n"
"dcl_literal l16, 0x400, 0x400, 0x400, 0x400\n"
"dcl_literal l17, 15, 15, 15, 15\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"dcl_literal l19, 143, 143, 143, 143\n"
"iand r1, r0, l1\n"
"ushr r2, r0, l2\n"
"iand r2, r2, l3\n"
"iadd r2, r2, l4\n"
"iadd r3, l6, r2_neg(xyzw)\n"
"imin r3, r3, l5\n"
"imax r3, r3, l8\n"
"ilt r4, l4, r2\n"
"cmov_logical r4, r4, l7, l8\n"
"ior r4, r1, r4\n"
"iadd r13, l5, r3_neg(xyzw)\n"
"ishl r4, r4, r13\n"
"ushr r5, r0, l9\n"
"iand r5, r5, l10\n"
"ushr r6, r0, l11\n"
"iand r6, r6, l12\n"
"cmov_logical r7, r1, l14, l8\n"
"ior r7, r7, r6\n"
"ior r7, r7, l13\n"
"ishl r8, r2, l15\n"
"ior r8, r8, r6\n"
"ior r9, l16, r6\n"
"ushr r9, r9, r3\n"
"ilt r10, r2, l6\n"
"cmov_logical r10, r10, r9, r8\n"
"ieq r13, l8, r5\n"
"ult r14, l8, r4\n"
"iand r13, r13, r14\n"
"iand r13, r13, l6\n"
"iadd r10, r10, r13\n"
"ushr r11, r5, l17\n"
"iadd r11, l13, r11_neg(xyzw)\n"
"ilt r13, l18, r2\n"
"cmov_logical r10, r13, r11, r10\n"
"ieq r13, r2, l19\n"
"cmov_logical r10, r13, r7, r10\n"
"ior r0, r5, r10\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_int_flr_f32",
"mdef(51)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0.x, r0.x\n"
"ftoi r0.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_int_flr_v2f32",
"mdef(52)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0.xy, r0.xy\n"
"ftoi r0.xy, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_float_to_int_flr_v4f32",
"mdef(53)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0, r0\n"
"ftoi r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_f_2_u4",
"mdef(54)_out(1)_in(1)\n"
"mov r0, in0\n"
"f_2_u4 r0.x___, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_global_id",
"mdef(55)_out(1)_in(0)\n"
"mov r0.xyz, vAbsTid.xyz\n"
"mov out0, r0\n"
"mend\n"
,0,1
},
{ "__amdil_global_id_flat",
"mdef(56)_out(1)_in(0)\n"
"mov r0.x, vAbsTidFlat.x\n"
"mov out0, r0\n"
"mend\n"
,0,1
},
{ "__amdil_group_id",
"mdef(57)_out(1)_in(0)\n"
"mov r0.xyz, vThreadGrpId.xyz\n"
"mov out0, r0\n"
"mend\n"
,0,1
},
{ "__amdil_group_id_flat",
"mdef(58)_out(1)_in(0)\n"
"mov r0.x, vThreadGrpIdFlat.x\n"
"mov out0, r0\n"
"mend\n"
,0,1
},
{ "__amdil_imad_1",
"mdef(59)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"imad r0.x, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_imad_2",
"mdef(60)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"imad r0.xy, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_imad_3",
"mdef(61)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"imad r0.xyz, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_imad_4",
"mdef(62)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"imad r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_imax_1",
"mdef(63)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imax r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imax_2",
"mdef(64)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imax r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imax_3",
"mdef(65)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imax r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imax_4",
"mdef(66)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imax r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imin_1",
"mdef(67)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imin r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imin_2",
"mdef(68)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imin r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imin_3",
"mdef(69)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imin r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imin_4",
"mdef(70)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imin r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_improved_div_f32",
"mdef(71)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000\n"
"div_zeroop(infinity) r2.x, l1.x, r1.x\n"
"mul_ieee r3.x, r0.x, r2.x\n"
"fma r4.x, r3.x, r1.x_neg(xyzw), r0.x\n"
"fma r0.x, r4.x, r2.x, r3.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_improved_div_v2f32",
"mdef(72)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000\n"
"div_zeroop(infinity) r2.xy, l1.xy, r1.xy\n"
"mul_ieee r3.xy, r0.xy, r2.xy\n"
"fma r4.xy, r3.xy, r1.xy_neg(xyzw), r0.xy\n"
"fma r0.xy, r4.xy, r2.xy, r3.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_improved_div_v4f32",
"mdef(73)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000\n"
"div_zeroop(infinity) r2, l1, r1\n"
"mul_ieee r3, r0, r2\n"
"fma r4, r3, r1_neg(xyzw), r0\n"
"fma r0, r4, r2, r3\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imul_high_1",
"mdef(74)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imul_high r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imul_high_2",
"mdef(75)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imul_high r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imul_high_3",
"mdef(76)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imul_high r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_imul_high_4",
"mdef(77)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"imul_high r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_local_id",
"mdef(78)_out(1)_in(0)\n"
"mov r0.xyz, vTidInGrp.xyz\n"
"mov out0, r0\n"
"mend\n"
,0,1
},
{ "__amdil_local_id_flat",
"mdef(79)_out(1)_in(0)\n"
"mov r0.x, vTidInGrpFlat.x\n"
"mov out0, r0\n"
"mend\n"
,0,1
},
{ "__amdil_lpr_3",
"mdef(80)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"lrp r0.xyz_, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_lrp_1",
"mdef(81)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"lrp r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_lrp_2",
"mdef(82)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"lrp r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_lrp_4",
"mdef(83)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"lrp r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_mad_ieee_1",
"mdef(84)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mad_ieee r0.x, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_mad_ieee_2",
"mdef(85)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mad_ieee r0.xy, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_mad_ieee_3",
"mdef(86)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mad_ieee r0.xyz, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_mad_ieee_4",
"mdef(87)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mad_ieee r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_max_ieee_1",
"mdef(88)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"max_ieee r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_max_ieee_2",
"mdef(89)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"max_ieee r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_max_ieee_3",
"mdef(90)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"max_ieee r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_max_ieee_4",
"mdef(91)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"max_ieee r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_min_ieee_1",
"mdef(92)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"min_ieee r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_min_ieee_2",
"mdef(93)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"min_ieee r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_min_ieee_3",
"mdef(94)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"min_ieee r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_min_ieee_4",
"mdef(95)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"min_ieee r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_rcp_1",
"mdef(96)_out(1)_in(1)\n"
"mov r0, in0\n"
"rcp_zeroop(infinity) r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rcp_2",
"mdef(97)_out(1)_in(1)\n"
"mov r0, in0\n"
"rcp_zeroop(infinity) r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rcp_3",
"mdef(98)_out(1)_in(1)\n"
"mov r0, in0\n"
"rcp_zeroop(infinity) r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rcp_4",
"mdef(99)_out(1)_in(1)\n"
"mov r0, in0\n"
"rcp_zeroop(infinity) r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_nearest_1",
"mdef(100)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_nearest r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_nearest_2",
"mdef(101)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_nearest r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_nearest_3",
"mdef(102)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_nearest r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_nearest_4",
"mdef(103)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_nearest r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_neginf_1",
"mdef(104)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_neginf_2",
"mdef(105)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_neginf_3",
"mdef(106)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_neginf_4",
"mdef(107)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_plusinf_1",
"mdef(108)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_plusinf r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_plusinf_2",
"mdef(109)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_plusinf r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_plusinf_3",
"mdef(110)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_plusinf r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_plusinf_4",
"mdef(111)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_plusinf r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_z_1",
"mdef(112)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_z r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_z_2",
"mdef(113)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_z r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_z_3",
"mdef(114)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_z r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_round_z_4",
"mdef(115)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_z r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rsq_vec_1",
"mdef(116)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rsq_vec_2",
"mdef(117)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rsq_vec_3",
"mdef(118)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_rsq_vec_4",
"mdef(119)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_sad4",
"mdef(120)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sad4 r0.x___, r0, r1, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sadhi_1",
"mdef(121)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sadhi r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sadhi_2",
"mdef(122)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sadhi r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sadhi_3",
"mdef(123)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sadhi r0.xyz_, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sadhi_4",
"mdef(124)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sadhi r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sad_1",
"mdef(125)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sad r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sad_2",
"mdef(126)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sad r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sad_3",
"mdef(127)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sad r0.xyz_, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sad_4",
"mdef(128)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"sad r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_sqrt_vec_1",
"mdef(129)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_sqrt_vec_2",
"mdef(130)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_sqrt_vec_3",
"mdef(131)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_sqrt_vec_4",
"mdef(132)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_u4lerp_1",
"mdef(133)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"u4lerp r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_u4lerp_2",
"mdef(134)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"u4lerp r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_u4lerp_3",
"mdef(135)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"u4lerp r0.xyz_, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_u4lerp_4",
"mdef(136)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"u4lerp r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad24_1",
"mdef(137)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad24 r0.x, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad24_2",
"mdef(138)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad24 r0.xy, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad24_3",
"mdef(139)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad24 r0.xyz, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad24_4",
"mdef(140)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad24 r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad_1",
"mdef(141)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad r0.x, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad_2",
"mdef(142)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad r0.xy, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad_3",
"mdef(143)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad r0.xyz, r0.xyz, r1.xyz, r2.xyz\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umad_4",
"mdef(144)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"umad r0, r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__amdil_umax_1",
"mdef(145)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umax r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umax_2",
"mdef(146)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umax r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umax_3",
"mdef(147)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umax r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umax_4",
"mdef(148)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umax r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umin_1",
"mdef(149)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umin r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umin_2",
"mdef(150)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umin r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umin_3",
"mdef(151)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umin r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umin_4",
"mdef(152)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umin r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul24_1",
"mdef(153)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul24 r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul24_2",
"mdef(154)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul24 r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul24_3",
"mdef(155)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul24 r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul24_4",
"mdef(156)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul24 r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul_high_1",
"mdef(157)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul_high r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul_high_2",
"mdef(158)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul_high r0.xy, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul_high_3",
"mdef(159)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul_high r0.xyz, r0.xyz, r1.xyz\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_umul_high_4",
"mdef(160)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul_high r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__amdil_unpack0_1",
"mdef(161)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack0 r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack0_2",
"mdef(162)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack0 r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack0_3",
"mdef(163)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack0 r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack0_4",
"mdef(164)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack0 r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack1_1",
"mdef(165)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack1 r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack1_2",
"mdef(166)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack1 r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack1_3",
"mdef(167)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack1 r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack1_4",
"mdef(168)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack1 r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack2_1",
"mdef(169)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack2 r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack2_2",
"mdef(170)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack2 r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack2_3",
"mdef(171)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack2 r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack2_4",
"mdef(172)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack2 r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack3_1",
"mdef(173)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack3 r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack3_2",
"mdef(174)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack3 r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack3_3",
"mdef(175)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack3 r0.xyz_, r0.xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amdil_unpack3_4",
"mdef(176)_out(1)_in(1)\n"
"mov r0, in0\n"
"unpack3 r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__amd_early_exit",
"mdef(177)_out(1)_in(1)\n"
"mov r0, in0\n"
"ret_logical_non_zero r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__asinh_f32",
"mdef(178)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l1\n"
"dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r0.__z_, r0.y, r0.y, l2\n"
"sqrt_vec r0.__z_, r0.z\n"
"add r0.__z_, r0.y, r0.z\n"
"dcl_literal l3, 0x40000000, 0x46000000, 0x403EBF80, 0x00000000\n"
"ige r1.xyz_, l3, r0.y\n"
"cmov_logical r0.__z_, r1.y, r0.z, r0.y\n"
"dcl_literal l4, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.___w, r0.z, l4\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l5\n"
"dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1._y__, l6, r0.w\n"
"dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1._y__, r1.y, l7\n"
"dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1.___w, r1.y, l8\n"
"dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1._y__, r1.y, l9\n"
"ior r0.___w, r0.w, r1.w\n"
"dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r2.xy__, r0.w, l10\n"
"div_zeroop(infinity) r0.___w, r2.x, r2.y\n"
"mul_ieee r1.___w, r0.w, r0.w\n"
"mul_ieee r2._y__, r1.w, r1.w\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x3E1CD04F, 0x3E178897\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x3E638E29, 0x3E3A3325\n"
"mad_ieee r2.__zw, r2.y, l11, l12\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x3ECCCCCD, 0x3E924925\n"
"mad_ieee r2.__zw, r2.y, r2.zzzw, l13\n"
"mul_ieee r2.__z_, r2.y, r2.z\n"
"dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r2._y__, r2.y, r2.w, l14\n"
"mad_ieee r1.___w, r1.w, r2.y, r2.z\n"
"mul_ieee r2._y__, r2.x, r2.x\n"
"dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.___w, r2.y, l15, r1.w\n"
"dcl_literal l16, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l16\n"
"iadd r0.__z_, r0.z, r1.y\n"
"itof r0.__z_, r0.z\n"
"dcl_literal l17, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r1._y__, r0.z, l17\n"
"mad_ieee r0.___w, r0.w, r1.w, r1.y\n"
"dcl_literal l18, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r2.y, l18, r0.w_neg(xyzw)\n"
"add r0.___w, r2.x_neg(xyzw), r0.w\n"
"dcl_literal l19, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.__z_, r0.z, l19, r0.w_neg(xyzw)\n"
"dcl_literal l20, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"add r0.___w, r0.z, l20\n"
"dcl_literal l21, 0x00000000, 0x46000000, 0x00000000, 0x7F800000\n"
"ilt r1._y_w, l21, r0.y\n"
"cmov_logical r0.__z_, r1.y, r0.w, r0.z\n"
"mul_ieee r0.___w, r0.y, r0.y\n"
"dcl_literal l22, 0x359E003F, 0x30CF9BA3, 0x00000000, 0x00000000\n"
"dcl_literal l23, 0xB9DA3F30, 0xB663DD90, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r0.w_neg(xyzw), l22, l23\n"
"dcl_literal l24, 0xBBA5E935, 0xB9151DC6, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r2.xyxx, r0.w, l24\n"
"dcl_literal l25, 0xBC728443, 0xBA94FE2C, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r2.xyxx, r0.w, l25\n"
"dcl_literal l26, 0xBC3CE6E4, 0xBAF316D1, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r2.xyxx, r0.w, l26\n"
"mul_ieee r1._y__, r0.y, r0.w\n"
"mul_ieee r2.xy__, r2.xyxx, r1.y\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x3A24BDC5, 0x3691AD45\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x3C4E7147, 0x39862A97\n"
"mad_ieee r2.__zw, r0.w, l27, l28\n"
"dcl_literal l29, 0x00000000, 0x00000000, 0x3D86CE89, 0x3B559594\n"
"mad_ieee r2.__zw, r2.zzzw, r0.w, l29\n"
"dcl_literal l30, 0x00000000, 0x00000000, 0x3DF5A451, 0x3C40F989\n"
"mad_ieee r2.__zw, r2.zzzw, r0.w, l30\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x3D8DAD2B, 0x3C36A8AF\n"
"mad_ieee r2.__zw, r2.zzzw, r0.w, l31\n"
"div_zeroop(infinity) r2.xy__, r2.xyxx, r2.zwzz\n"
"cmov_logical r0.___w, r1.x, r2.x, r2.y\n"
"add r0.___w, r0.y, r0.w\n"
"cmov_logical r0.__z_, r1.z, r0.w, r0.z\n"
"dcl_literal l32, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"lt r0.___w, r0.y, l32\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r1.x___, r0.y, l33\n"
"ior r0.___w, r0.w, r1.x\n"
"cmov_logical r0._y__, r0.w, r0.y, r0.z\n"
"cmov_logical r0.x___, r0.x, r0.y_neg(xyzw), r0.y\n"
"dcl_literal l34, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r1.w, l34, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__asinpi_f32",
"mdef(179)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x80000000, 0x7FFFFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l1, r1.y\n"
"\n"
"dcl_literal l2, 0x01490FDB, 0x01490FDB, 0x01490FDB, 0x01490FDB\n"
"ige r0.__z_, l2, r1.y\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.__z_, r0.x, l3\n"
"    if_logicalz r0.z\n"
"        \n"
"        dcl_literal l4, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r0.___w, r0.x, l4\n"
"        itof r0.___w, r0.w\n"
"        \n"
"        dcl_literal l5, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r2.xy__, r0.w, l5\n"
"        \n"
"        dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.___w, r2.x, l6\n"
"        \n"
"        dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        iadd r0.___w, r0.w, l7\n"
"        \n"
"        dcl_literal l8, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.x___, r2.y, l8\n"
"        \n"
"        dcl_literal l9, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r0.___w, l9, r0.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2._y__, l10, r0.w\n"
"        \n"
"        dcl_literal l11, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0.___w, r2.y, l11, r0.w\n"
"        \n"
"        dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2._y__, l12, r0.w\n"
"        ishr r2.__z_, r2.x, r0.w\n"
"        inegate r0.___w, r0.w\n"
"        \n"
"        dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r0.___w, r0.w, l13\n"
"        iadd r0.___w, r2.x, r0.w\n"
"        cmov_logical r0.___w, r2.y, r2.z, r0.w\n"
"    else\n"
"        \n"
"        dcl_literal l14, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r2.x___, r0.x, l14\n"
"        \n"
"        dcl_literal l15, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.__z_, r0.z, l15\n"
"        \n"
"        dcl_literal l16, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000\n"
"        iadd r2.x___, r2.x, l16\n"
"        \n"
"        dcl_literal l17, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99\n"
"        iadd r0.__z_, r0.z, l17\n"
"        \n"
"        dcl_literal l18, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r0.__z_, l18, r0.z\n"
"        \n"
"        dcl_literal l19, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r0.___w, r0.z, l19, r2.x\n"
"    endif\n"
"    \n"
"    dcl_literal l20, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983\n"
"    mul_ieee r0.__z_, r0.w, l20\n"
"    \n"
"    dcl_literal l21, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r2.xy__, r0.z, l21\n"
"    if_logicalz r2.x\n"
"        itof r0.___w, r2.y\n"
"        \n"
"        dcl_literal l22, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r2.__zw, r0.w, l22\n"
"        \n"
"        dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.___w, r2.z, l23\n"
"        \n"
"        dcl_literal l24, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r0.___w, r0.w, l24\n"
"        \n"
"        dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.__z_, r2.w, l25\n"
"        \n"
"        dcl_literal l26, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r0.___w, l26, r0.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.___w, l27, r0.w\n"
"        \n"
"        dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0.___w, r2.w, l28, r0.w\n"
"        \n"
"        dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2.___w, l29, r0.w\n"
"        ishr r3.x___, r2.z, r0.w\n"
"        inegate r0.___w, r0.w\n"
"        \n"
"        dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r0.___w, r0.w, l30\n"
"        iadd r0.___w, r2.z, r0.w\n"
"        cmov_logical r0.___w, r2.w, r3.x, r0.w\n"
"    else\n"
"        \n"
"        dcl_literal l31, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r0.__z_, r0.z, l31\n"
"        \n"
"        dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.x___, r2.x, l32\n"
"        \n"
"        dcl_literal l33, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000\n"
"        iadd r0.__z_, r0.z, l33\n"
"        \n"
"        dcl_literal l34, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69\n"
"        iadd r2.x___, r2.x, l34\n"
"        \n"
"        dcl_literal l35, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r2.x___, l35, r2.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l36, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2._y__, r2.y, l36\n"
"        \n"
"        dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000017\n"
"        ilt r2.__zw, l37, r2.x\n"
"        \n"
"        dcl_literal l38, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r2.x___, r2.w, l38, r2.x\n"
"        ishr r2.x___, r2.y, r2.x\n"
"        cmov_logical r0.___w, r2.z, r2.x, r0.z\n"
"    endif\n"
"else\n"
"    \n"
"    dcl_literal l39, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.__z_, r0.x, l39\n"
"    \n"
"    dcl_literal l40, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r0.z, l40\n"
"    \n"
"    dcl_literal l41, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0.__z_, r0.z, l41\n"
"    \n"
"    dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    ige r0.__z_, r0.z, l42\n"
"    \n"
"    dcl_literal l43, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r2.x___, r1.y_neg(xyzw), l43\n"
"    \n"
"    dcl_literal l44, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mul_ieee r2.__z_, r2.x, l44\n"
"    sqrt_vec r2.xy__, r2.z\n"
"    mul_ieee r1.__z_, r1.y, r1.y\n"
"    \n"
"    dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r1.___w, l45\n"
"    cmov_logical r2.xyz_, r0.z, r2.xyzx, r1.ywzy\n"
"    \n"
"    dcl_literal l46, 0x00000000, 0x00000000, 0x3B81CE6B, 0x3F561F0D\n"
"    \n"
"    dcl_literal l47, 0x00000000, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5\n"
"    mad_ieee r1.__zw, r2.z_neg(xyzw), l46, l47\n"
"    \n"
"    dcl_literal l48, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD\n"
"    mad_ieee r1.__z_, r1.z, r2.z, l48\n"
"    \n"
"    dcl_literal l49, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC\n"
"    mad_ieee r1.__z_, r1.z, r2.z, l49\n"
"    mul_ieee r1.__z_, r2.z, r1.z\n"
"    div_zeroop(infinity) r1.__z_, r1.z, r1.w\n"
"    \n"
"    dcl_literal l50, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"    and r1.___w, r2.y, l50\n"
"    mad_ieee r2.__z_, r1.w_neg(xyzw), r1.w, r2.z\n"
"    add r2.___w, r2.y, r1.w\n"
"    div_zeroop(infinity) r2.__z_, r2.z, r2.w\n"
"    dp2_ieee r2._y__, r1.z, r2.y\n"
"    \n"
"    dcl_literal l51, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    \n"
"    dcl_literal l52, 0x33A22168, 0x33A22168, 0x33A22168, 0x33A22168\n"
"    mad_ieee r2.__z_, r2.z_neg(xyzw), l51, l52\n"
"    add r2._y__, r2.y, r2.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l53, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    \n"
"    dcl_literal l54, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA\n"
"    mad_ieee r1.___w, r1.w_neg(xyzw), l53, l54\n"
"    add r1.___w, r2.y, r1.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l55, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA\n"
"    add r1.___w, r1.w_neg(xyzw), l55\n"
"    mad_ieee r1.__z_, r2.x, r1.z, r2.x\n"
"    cmov_logical r0.__z_, r0.z, r1.w, r1.z\n"
"    \n"
"    dcl_literal l56, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983\n"
"    mul_ieee r0.___w, r0.z, l56\n"
"endif\n"
"\n"
"dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r0.__z_, r1.y, l57\n"
"\n"
"dcl_literal l58, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r0.__z_, r0.z, l58, r0.w\n"
"ior r0.__z_, r1.x, r0.z\n"
"cmov_logical r0.__z_, r1.y, r0.z, r0.x\n"
"\n"
"dcl_literal l59, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l59\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"\n"
"dcl_literal l60, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"lt r0._y__, l60, r1.y\n"
"\n"
"dcl_literal l61, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r0.y, l61, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__asin_f32",
"mdef(180)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r0._y__, l0\n"
"dcl_literal l1, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x7F800000\n"
"and r1._yzw, r1.x, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.w, l2\n"
"dcl_literal l3, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l3\n"
"dcl_literal l4, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"ige r0.___w, r0.w, l4\n"
"dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.x___, r1.y_neg(xyzw), l5\n"
"dcl_literal l6, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r2.__z_, r2.x, l6\n"
"sqrt_vec r2.xy__, r2.z\n"
"mul_ieee r0.__z_, r1.y, r1.y\n"
"mov r0.x___, r1.y\n"
"cmov_logical r2.xyz_, r0.w, r2.xyzx, r0.xyzx\n"
"dcl_literal l7, 0x00000000, 0x3B81CE6B, 0x3F561F0D, 0x00000000\n"
"dcl_literal l8, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5, 0x00000000\n"
"mad_ieee r0._yz_, r2.z_neg(xyzw), l7, l8\n"
"dcl_literal l9, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD\n"
"mad_ieee r0._y__, r0.y, r2.z, l9\n"
"dcl_literal l10, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC\n"
"mad_ieee r0._y__, r0.y, r2.z, l10\n"
"mul_ieee r0._y__, r2.z, r0.y\n"
"div_zeroop(infinity) r0._y__, r0.y, r0.z\n"
"dp2_ieee r0.__z_, r0.y, r2.y\n"
"mad_ieee r0._y__, r2.x, r0.y, r2.x\n"
"dcl_literal l11, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"and r1._y__, r2.y, l11\n"
"mad_ieee r2.x___, r1.y_neg(xyzw), r1.y, r2.z\n"
"add r2._y__, r2.y, r1.y\n"
"dcl_literal l12, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l13, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA\n"
"mad_ieee r1._y__, r1.y_neg(xyzw), l12, l13\n"
"div_zeroop(infinity) r2.x___, r2.x, r2.y\n"
"dcl_literal l14, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l15, 0x33A22168, 0x33A22168, 0x33A22168, 0x33A22168\n"
"mad_ieee r2.x___, r2.x_neg(xyzw), l14, l15\n"
"add r0.__z_, r0.z, r2.x_neg(xyzw)\n"
"add r0.__z_, r1.y_neg(xyzw), r0.z\n"
"dcl_literal l16, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA\n"
"add r0.__z_, r0.z_neg(xyzw), l16\n"
"cmov_logical r0._y__, r0.w, r0.z, r0.y\n"
"dcl_literal l17, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r0.__z_, r1.x_abs, l17\n"
"dcl_literal l18, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r0._y__, r0.z, l18, r0.y\n"
"dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l19, r1.w\n"
"dcl_literal l20, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ilt r0.___w, r1.w, l20\n"
"and r0.__z_, r0.z, r0.w\n"
"dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.___w, r1.w, l21\n"
"dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1._y__, r0.x, l22\n"
"and r0.___w, r0.w, r1.y\n"
"ior r0.__z_, r0.z, r0.w\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"cmov_logical r0._y__, r1.z, r0.y_neg(xyzw), r0.y\n"
"dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0.x___, l23, r0.x\n"
"dcl_literal l24, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.__z_, r1.x, l24\n"
"dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"lt r0.___w, l25, r1.x_abs\n"
"cmov_logical r0.x___, r0.x, r0.z, r0.y\n"
"dcl_literal l26, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r0.w, l26, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__atan2pi_f32",
"mdef(181)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000\n"
"and r1, r0.xyxy, l0\n"
"ult r0.__z_, r1.y, r1.x\n"
"cmov_logical r2, r0.z, r1.yxyx, r1.xyxy\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000\n"
"and r3, r2.yzwx, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r4, r3.wzzw, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00000000\n"
"ilt r5.xyz_, r3.xxyx, l3\n"
"dcl_literal l4, 0xFFFFFF81, 0xFFFFFF9D, 0xFFFFFF9D, 0xFFFFFF81\n"
"iadd r4, r4.xzwy, l4\n"
"dcl_literal l5, 0x41E00000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r6.x_z_, l5\n"
"mov r6._y_w, r4.yyyw\n"
"cmov_logical r4._y_w, r5.yyyx, r6.yyyx, r6.wwwz\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x42280000, 0x41600000\n"
"dcl_literal l7, 0xC1E00000, 0x00000000, 0x41600000, 0xC1600000\n"
"cmov_logical r6.x_zw, r5.xxzy, l6, l7\n"
"mov r5.x___, r6.x\n"
"mov r5._y__, r4.z\n"
"dcl_literal l8, 0x41E00000, 0x41E00000, 0x41E00000, 0x41E00000\n"
"mov r5.___w, l8\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r4.__z_, l9\n"
"cmov_logical r5.xyz_, r5.z, r5.xywx, r4.wxzw\n"
"iadd r0.___w, r5.y, r4.y_neg(xyzw)\n"
"dcl_literal l10, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83\n"
"ilt r0.___w, r0.w, l10\n"
"dcl_literal l11, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2\n"
"iadd r6._y__, r4.y, l11\n"
"dcl_literal l12, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000\n"
"add r6.x___, r5.x, l12\n"
"mov r4.x_z_, r5.xxzx\n"
"cmov_logical r4, r0.w, r6, r4\n"
"dcl_literal l13, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r0.___w, l13, r4.y\n"
"dcl_literal l14, 0x00000000, 0xC1600000, 0xC1600000, 0x00000000\n"
"add r2._yz_, r4.wwxw, l14\n"
"cmov_logical r2._yz_, r0.w, r2.yyzy, r4.wwxw\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0.___w, r4.z, l15\n"
"if_logicalnz r0.w\n"
"    ftoi r0.___w, r4.z\n"
"   \n"
"    dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r4.x___, r2.x, l16\n"
"    itof r4.x___, r4.x\n"
"    cmov_logical r3._y__, r3.w, r3.y, r4.x\n"
"   \n"
"    dcl_literal l17, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r4.x___, r0.w, l17\n"
"    cmov_logical r0.___w, r3.w, r0.w, r4.x\n"
"   \n"
"    dcl_literal l18, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r3.y, l18\n"
"   \n"
"    dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.___w, r4.x, l19\n"
"    iadd r3.___w, r3.w, r0.w\n"
"   \n"
"    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l20\n"
"    iadd r0.___w, r3.y, r0.w\n"
"   \n"
"    dcl_literal l21, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3._y__, r3.w, l21\n"
"   \n"
"    dcl_literal l22, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.___w, l22, r3.y\n"
"   \n"
"    dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r3.w, l23, r0.w\n"
"   \n"
"    dcl_literal l24, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3._y__, l24, r3.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.___w, r4.y, l25\n"
"   \n"
"    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.x___, l26, r3.y\n"
"   \n"
"    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3._y__, r4.x, l27, r3.y\n"
"   \n"
"    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r3._y__, r3.y, l28\n"
"    ishr r3.___w, r3.w, r3.y\n"
"   \n"
"    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3._y__, l29, r3.y\n"
"    cmov_logical r2.x___, r3.y, r3.w, r0.w\n"
"endif\n"
"dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r3._y_w, r2.yyyz, l30\n"
"if_logicalnz r3.y\n"
"    ftoi r0.___w, r2.y\n"
"   \n"
"    dcl_literal l31, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r2._y__, r2.w, l31\n"
"    itof r2._y__, r2.y\n"
"    cmov_logical r2._y__, r3.z, r3.x, r2.y\n"
"   \n"
"    dcl_literal l32, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r3.x___, r0.w, l32\n"
"    cmov_logical r0.___w, r3.z, r0.w, r3.x\n"
"   \n"
"    dcl_literal l33, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r3.xy__, r2.y, l33\n"
"   \n"
"    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.x___, r3.x, l34\n"
"    iadd r3.x___, r3.x, r0.w\n"
"   \n"
"    dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l35\n"
"    iadd r0.___w, r2.y, r0.w\n"
"   \n"
"    dcl_literal l36, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2._y__, r3.x, l36\n"
"   \n"
"    dcl_literal l37, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.x___, l37, r2.y\n"
"   \n"
"    dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r3.x, l38, r0.w\n"
"   \n"
"    dcl_literal l39, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2._y__, l39, r2.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l40, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.x___, r3.y, l40\n"
"   \n"
"    dcl_literal l41, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3._y__, l41, r2.y\n"
"   \n"
"    dcl_literal l42, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2._y__, r3.y, l42, r2.y\n"
"   \n"
"    dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2._y__, r2.y, l43\n"
"    ishr r3.x___, r3.x, r2.y\n"
"   \n"
"    dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, l44, r2.y\n"
"    cmov_logical r2.___w, r2.y, r3.x, r0.w\n"
"endif\n"
"div_zeroop(infinity) r0.___w, r2.x, r2.w\n"
"ftoi r2.x___, r2.z\n"
"dcl_literal l45, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r0.w, l45\n"
"itof r2._y__, r4.w\n"
"cmov_logical r2._y__, r4.z, r4.x, r2.y\n"
"dcl_literal l46, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.__z_, r2.x, l46\n"
"cmov_logical r2.x___, r4.z, r2.x, r2.z\n"
"dcl_literal l47, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r2.__zw, r2.y, l47\n"
"dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.z, l48\n"
"iadd r2.__z_, r2.z, r2.x\n"
"dcl_literal l49, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r2.x, l49\n"
"iadd r2.x___, r2.y, r2.x\n"
"dcl_literal l50, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2._y__, r2.z, l50\n"
"dcl_literal l51, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r2.__z_, l51, r2.y\n"
"dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.x___, r2.z, l52, r2.x\n"
"dcl_literal l53, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2._y__, l53, r2.y_neg(xyzw)\n"
"dcl_literal l54, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r2.__z_, r2.w, l54\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r2.___w, l55, r2.y\n"
"dcl_literal l56, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2._y__, r2.w, l56, r2.y\n"
"dcl_literal l57, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r2._y__, r2.y, l57\n"
"ishr r2.__z_, r2.z, r2.y\n"
"dcl_literal l58, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2._y__, l58, r2.y\n"
"cmov_logical r2.x___, r2.y, r2.z, r2.x\n"
"ior r2.x___, r4.y, r2.x\n"
"cmov_logical r0.___w, r3.w, r2.x, r0.w\n"
"dcl_literal l59, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r2.x___, r0.w, l59\n"
"dcl_literal l60, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000\n"
"uge r3, r2.x, l60\n"
"dcl_literal l61, 0x00000000, 0x3F300000, 0x3F980000, 0x401C0000\n"
"ult r2._yzw, r2.x, l61\n"
"and r2._yzw, r3.xxyz, r2.yyzw\n"
"dcl_literal l62, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l63, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"mad_ieee r3.x___, r2.x, l62, l63\n"
"dcl_literal l64, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000\n"
"add r4, r2.x, l64\n"
"div_zeroop(infinity) r3.x___, r3.x, r4.x\n"
"cmov_logical r3.x___, r2.y, r3.x, r2.x\n"
"dcl_literal l65, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338\n"
"and r2._y__, r2.y, l65\n"
"div_zeroop(infinity) r3._y__, r4.y, r4.z\n"
"cmov_logical r3.x___, r2.z, r3.y, r3.x\n"
"dcl_literal l66, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"cmov_logical r2._y__, r2.z, l66, r2.y\n"
"dcl_literal l67, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000\n"
"dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r2.__z_, r2.x, l67, l68\n"
"div_zeroop(infinity) r2.__z_, r4.w, r2.z\n"
"cmov_logical r2.__z_, r2.w, r2.z, r3.x\n"
"dcl_literal l69, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F\n"
"cmov_logical r2._y__, r2.w, l69, r2.y\n"
"dcl_literal l70, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"div_zeroop(infinity) r2.x___, l70, r2.x\n"
"cmov_logical r2.x___, r3.w, r2.x, r2.z\n"
"dcl_literal l71, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r2._y__, r3.w, l71, r2.y\n"
"mul_ieee r2.__z_, r2.x, r2.x\n"
"mul_ieee r2.___w, r2.x, r2.z\n"
"dcl_literal l72, 0x3B9A3B54, 0x3E993F1F, 0x00000000, 0x00000000\n"
"dcl_literal l73, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r2.z, l72, l73\n"
"dcl_literal l74, 0x3E97D299, 0x3F63BBE5, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r3.xyxx, r2.z, l74\n"
"mul_ieee r2.__z_, r2.w, r3.x\n"
"div_zeroop(infinity) r2.__z_, r2.z, r3.y\n"
"add r2.x___, r2.x_neg(xyzw), r2.z\n"
"add r2.x___, r2.y, r2.x_neg(xyzw)\n"
"dcl_literal l75, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ilt r2._y__, r0.w, l75\n"
"cmov_logical r0.___w, r2.y, r0.w, r2.x\n"
"dcl_literal l76, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.x___, r0.w, l76\n"
"dcl_literal l77, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r2.x, l77\n"
"dcl_literal l78, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"ilt r2.x___, r2.x, l78\n"
"if_logicalnz r2.x\n"
"   \n"
"    dcl_literal l79, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r3, r0.w, l79\n"
"    itof r2._y__, r3.w\n"
"    cmov_logical r2._y__, r3.z, r3.x, r2.y\n"
"   \n"
"    dcl_literal l80, 0x00000000, 0x00000000, 0x0000001C, 0x0E000000\n"
"   \n"
"    dcl_literal l81, 0x00000000, 0x00000000, 0xFFFFFF87, 0xC3800000\n"
"    cmov_logical r2.__zw, r3.z, l80, l81\n"
"   \n"
"    dcl_literal l82, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r3.x_z_, r2.y, l82\n"
"   \n"
"    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.x___, r3.x, l83\n"
"    iadd r2.__z_, r3.x, r2.z\n"
"    iadd r2._y__, r2.y, r2.w\n"
"   \n"
"    dcl_literal l84, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.__z_, r2.z, l84\n"
"   \n"
"    dcl_literal l85, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.___w, l85, r2.z\n"
"   \n"
"    dcl_literal l86, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2._y__, r2.w, l86, r2.y\n"
"   \n"
"    dcl_literal l87, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.__z_, l87, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l88, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r3.z, l88\n"
"   \n"
"    dcl_literal l89, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.x___, l89, r2.z\n"
"   \n"
"    dcl_literal l90, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r3.x, l90, r2.z\n"
"   \n"
"    dcl_literal l91, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.__z_, r2.z, l91\n"
"    ishr r2.___w, r2.w, r2.z\n"
"   \n"
"    dcl_literal l92, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, l92, r2.z\n"
"    cmov_logical r2._y__, r2.z, r2.w, r2.y\n"
"    ior r0.___w, r3.y, r2.y\n"
"endif\n"
"dcl_literal l93, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983\n"
"mul_ieee r0.___w, r0.w, l93\n"
"if_logicalnz r2.x\n"
"   \n"
"    dcl_literal l94, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r2, r0.w, l94\n"
"    itof r2.___w, r2.w\n"
"    cmov_logical r2.x___, r2.z, r2.x, r2.w\n"
"   \n"
"    dcl_literal l95, 0x00000000, 0x00000000, 0xFFFFFFE4, 0xF2000000\n"
"   \n"
"    dcl_literal l96, 0x00000000, 0x00000000, 0xFFFFFF4F, 0xA7800000\n"
"    cmov_logical r2.__zw, r2.z, l95, l96\n"
"   \n"
"    dcl_literal l97, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r3.xy__, r2.x, l97\n"
"   \n"
"    dcl_literal l98, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.x___, r3.x, l98\n"
"    iadd r2.__z_, r3.x, r2.z\n"
"    iadd r2.x___, r2.x, r2.w\n"
"   \n"
"    dcl_literal l99, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.__z_, r2.z, l99\n"
"   \n"
"    dcl_literal l100, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.__z_, l100, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l101, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r3.y, l101\n"
"   \n"
"    dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.x___, l102, r2.z\n"
"   \n"
"    dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r3.x, l103, r2.z\n"
"   \n"
"    dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.__z_, r2.z, l104\n"
"    ishr r2.___w, r2.w, r2.z\n"
"   \n"
"    dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, l105, r2.z\n"
"    cmov_logical r2.x___, r2.z, r2.w, r2.x\n"
"    ior r0.___w, r2.y, r2.x\n"
"endif\n"
"dcl_literal l106, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"add r2.x___, r0.w_neg(xyzw), l106\n"
"cmov_logical r0.__z_, r0.z, r2.x, r0.w\n"
"dcl_literal l107, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ushr r2.x___, r1.z, l107\n"
"dcl_literal l108, 0x0000001E, 0x0000001E, 0x0000001E, 0x0000001E\n"
"ushr r2._y__, r1.w, l108\n"
"dcl_literal l109, 0x00000001, 0x00000002, 0x00000000, 0x00000000\n"
"and r2.xy__, r2.xyxx, l109\n"
"ior r0.___w, r2.y, r2.x\n"
"dcl_literal l110, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r2.xyz_, r0.w, l110\n"
"dcl_literal l111, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ixor r0.___w, r0.z, l111\n"
"cmov_logical r0.__z_, r2.x, r0.w, r0.z\n"
"dcl_literal l112, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.z_neg(xyzw), l112\n"
"cmov_logical r0.__z_, r2.y, r0.w, r0.z\n"
"dcl_literal l113, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.z, l113\n"
"cmov_logical r0.__z_, r2.z, r0.w, r0.z\n"
"dcl_literal l114, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ult r2.xy__, l114, r1.xyxx\n"
"dcl_literal l115, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ieq r2.__zw, r1.xxxy, l115\n"
"dcl_literal l116, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l117, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"cmov_logical r3, r1.xyyx, l116, l117\n"
"dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.xy__, r1.zwzz, l118\n"
"inot r1.__zw, r1.xxxy\n"
"and r0.___w, r3.x, r1.z\n"
"and r4.xy__, r3.yzyy, r0.w\n"
"and r4.__zw, r1.y, r4.xxxy\n"
"dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r4.z, l119, r0.z\n"
"and r0.___w, r3.x, r1.x\n"
"and r3.x_z_, r3.yyzy, r0.w\n"
"and r5.xy__, r1.y, r3.xzxx\n"
"dcl_literal l120, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.__z_, r5.x, l120, r0.z\n"
"and r4.xy__, r1.w, r4.xyxx\n"
"dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r4.x, l121, r0.z\n"
"and r3.x_z_, r1.w, r3.xxzx\n"
"dcl_literal l122, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.__z_, r3.x, l122, r0.z\n"
"dcl_literal l123, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r4.w, l123, r0.z\n"
"dcl_literal l124, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.__z_, r5.y, l124, r0.z\n"
"dcl_literal l125, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r4.y, l125, r0.z\n"
"dcl_literal l126, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.__z_, r3.z, l126, r0.z\n"
"inot r3.x_z_, r2.zzwz\n"
"and r0.___w, r1.z, r3.x\n"
"and r0.___w, r3.w, r0.w\n"
"and r0.___w, r3.y, r0.w\n"
"dcl_literal l127, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r0.__z_, r0.w, l127, r0.z\n"
"and r0.___w, r1.x, r3.x\n"
"and r0.___w, r3.w, r0.w\n"
"and r0.___w, r3.y, r0.w\n"
"dcl_literal l128, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"cmov_logical r0.__z_, r0.w, l128, r0.z\n"
"and r0.___w, r3.w, r3.x\n"
"and r3.x___, r1.z, r0.w\n"
"and r3.x___, r2.w, r3.x\n"
"and r3._y__, r1.y, r3.x\n"
"dcl_literal l129, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r3.y, l129, r0.z\n"
"and r0.___w, r1.x, r0.w\n"
"and r0.___w, r2.w, r0.w\n"
"and r3._y__, r1.y, r0.w\n"
"dcl_literal l130, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.__z_, r3.y, l130, r0.z\n"
"and r3.x___, r1.w, r3.x\n"
"dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r3.x, l131, r0.z\n"
"and r0.___w, r1.w, r0.w\n"
"dcl_literal l132, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.__z_, r0.w, l132, r0.z\n"
"and r0.___w, r2.z, r1.z\n"
"and r1.__z_, r3.z, r0.w\n"
"dcl_literal l133, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r0.__z_, r1.z, l133, r0.z\n"
"and r1.x___, r2.z, r1.x\n"
"and r1.__z_, r3.z, r1.x\n"
"dcl_literal l134, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"cmov_logical r0.__z_, r1.z, l134, r0.z\n"
"and r0.___w, r2.w, r0.w\n"
"and r1.__z_, r1.y, r0.w\n"
"dcl_literal l135, 0x3F400000, 0x3F400000, 0x3F400000, 0x3F400000\n"
"cmov_logical r0.__z_, r1.z, l135, r0.z\n"
"and r1.x___, r2.w, r1.x\n"
"and r1._y__, r1.y, r1.x\n"
"dcl_literal l136, 0xBF400000, 0xBF400000, 0xBF400000, 0xBF400000\n"
"cmov_logical r0.__z_, r1.y, l136, r0.z\n"
"and r0.___w, r1.w, r0.w\n"
"dcl_literal l137, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"cmov_logical r0.__z_, r0.w, l137, r0.z\n"
"and r0.___w, r1.w, r1.x\n"
"dcl_literal l138, 0xBE800000, 0xBE800000, 0xBE800000, 0xBE800000\n"
"cmov_logical r0.__z_, r0.w, l138, r0.z\n"
"cmov_logical r0.x___, r2.x, r0.x, r0.z\n"
"cmov_logical r0.x___, r2.y, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__atan2_f32",
"mdef(182)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000\n"
"and r1, r0.xyxy, l0\n"
"ult r0.__z_, r1.y, r1.x\n"
"cmov_logical r2, r0.z, r1.yxyx, r1.xyxy\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000\n"
"and r3, r2.yzwx, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r4, r3.wzzw, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00000000\n"
"ilt r5.xyz_, r3.xxyx, l3\n"
"dcl_literal l4, 0xFFFFFF81, 0xFFFFFF9D, 0xFFFFFF9D, 0xFFFFFF81\n"
"iadd r4, r4.xzwy, l4\n"
"dcl_literal l5, 0x41E00000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r6.x_z_, l5\n"
"mov r6._y_w, r4.yyyw\n"
"cmov_logical r4._y_w, r5.yyyx, r6.yyyx, r6.wwwz\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x42280000, 0x41600000\n"
"dcl_literal l7, 0xC1E00000, 0x00000000, 0x41600000, 0xC1600000\n"
"cmov_logical r6.x_zw, r5.xxzy, l6, l7\n"
"mov r5.x___, r6.x\n"
"mov r5._y__, r4.z\n"
"dcl_literal l8, 0x41E00000, 0x41E00000, 0x41E00000, 0x41E00000\n"
"mov r5.___w, l8\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r4.__z_, l9\n"
"cmov_logical r5.xyz_, r5.z, r5.xywx, r4.wxzw\n"
"iadd r0.___w, r5.y, r4.y_neg(xyzw)\n"
"dcl_literal l10, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83\n"
"ilt r0.___w, r0.w, l10\n"
"dcl_literal l11, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2\n"
"iadd r6._y__, r4.y, l11\n"
"dcl_literal l12, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000\n"
"add r6.x___, r5.x, l12\n"
"mov r4.x_z_, r5.xxzx\n"
"cmov_logical r4, r0.w, r6, r4\n"
"dcl_literal l13, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r0.___w, l13, r4.y\n"
"dcl_literal l14, 0x00000000, 0xC1600000, 0xC1600000, 0x00000000\n"
"add r2._yz_, r4.wwxw, l14\n"
"cmov_logical r2._yz_, r0.w, r2.yyzy, r4.wwxw\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0.___w, r4.z, l15\n"
"if_logicalnz r0.w\n"
"    ftoi r0.___w, r4.z\n"
"   \n"
"    dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r4.x___, r2.x, l16\n"
"    itof r4.x___, r4.x\n"
"    cmov_logical r3._y__, r3.w, r3.y, r4.x\n"
"   \n"
"    dcl_literal l17, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r4.x___, r0.w, l17\n"
"    cmov_logical r0.___w, r3.w, r0.w, r4.x\n"
"   \n"
"    dcl_literal l18, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r3.y, l18\n"
"   \n"
"    dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.___w, r4.x, l19\n"
"    iadd r3.___w, r3.w, r0.w\n"
"   \n"
"    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l20\n"
"    iadd r0.___w, r3.y, r0.w\n"
"   \n"
"    dcl_literal l21, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3._y__, r3.w, l21\n"
"   \n"
"    dcl_literal l22, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.___w, l22, r3.y\n"
"   \n"
"    dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r3.w, l23, r0.w\n"
"   \n"
"    dcl_literal l24, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3._y__, l24, r3.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.___w, r4.y, l25\n"
"   \n"
"    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.x___, l26, r3.y\n"
"   \n"
"    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3._y__, r4.x, l27, r3.y\n"
"   \n"
"    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r3._y__, r3.y, l28\n"
"    ishr r3.___w, r3.w, r3.y\n"
"   \n"
"    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3._y__, l29, r3.y\n"
"    cmov_logical r2.x___, r3.y, r3.w, r0.w\n"
"endif\n"
"dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r3._y_w, r2.yyyz, l30\n"
"if_logicalnz r3.y\n"
"    ftoi r0.___w, r2.y\n"
"   \n"
"    dcl_literal l31, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r2._y__, r2.w, l31\n"
"    itof r2._y__, r2.y\n"
"    cmov_logical r2._y__, r3.z, r3.x, r2.y\n"
"   \n"
"    dcl_literal l32, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r3.x___, r0.w, l32\n"
"    cmov_logical r0.___w, r3.z, r0.w, r3.x\n"
"   \n"
"    dcl_literal l33, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r3.xy__, r2.y, l33\n"
"   \n"
"    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.x___, r3.x, l34\n"
"    iadd r3.x___, r3.x, r0.w\n"
"   \n"
"    dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l35\n"
"    iadd r0.___w, r2.y, r0.w\n"
"   \n"
"    dcl_literal l36, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2._y__, r3.x, l36\n"
"   \n"
"    dcl_literal l37, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.x___, l37, r2.y\n"
"   \n"
"    dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r3.x, l38, r0.w\n"
"   \n"
"    dcl_literal l39, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2._y__, l39, r2.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l40, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.x___, r3.y, l40\n"
"   \n"
"    dcl_literal l41, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3._y__, l41, r2.y\n"
"   \n"
"    dcl_literal l42, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2._y__, r3.y, l42, r2.y\n"
"   \n"
"    dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2._y__, r2.y, l43\n"
"    ishr r3.x___, r3.x, r2.y\n"
"   \n"
"    dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, l44, r2.y\n"
"    cmov_logical r2.___w, r2.y, r3.x, r0.w\n"
"endif\n"
"div_zeroop(infinity) r0.___w, r2.x, r2.w\n"
"ftoi r2.x___, r2.z\n"
"dcl_literal l45, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r0.w, l45\n"
"itof r2._y__, r4.w\n"
"cmov_logical r2._y__, r4.z, r4.x, r2.y\n"
"dcl_literal l46, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.__z_, r2.x, l46\n"
"cmov_logical r2.x___, r4.z, r2.x, r2.z\n"
"dcl_literal l47, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r2.__zw, r2.y, l47\n"
"dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.z, l48\n"
"iadd r2.__z_, r2.z, r2.x\n"
"dcl_literal l49, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r2.x, l49\n"
"iadd r2.x___, r2.y, r2.x\n"
"dcl_literal l50, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2._y__, r2.z, l50\n"
"dcl_literal l51, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r2.__z_, l51, r2.y\n"
"dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.x___, r2.z, l52, r2.x\n"
"dcl_literal l53, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2._y__, l53, r2.y_neg(xyzw)\n"
"dcl_literal l54, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r2.__z_, r2.w, l54\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r2.___w, l55, r2.y\n"
"dcl_literal l56, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2._y__, r2.w, l56, r2.y\n"
"dcl_literal l57, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r2._y__, r2.y, l57\n"
"ishr r2.__z_, r2.z, r2.y\n"
"dcl_literal l58, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2._y__, l58, r2.y\n"
"cmov_logical r2.x___, r2.y, r2.z, r2.x\n"
"ior r2.x___, r4.y, r2.x\n"
"cmov_logical r0.___w, r3.w, r2.x, r0.w\n"
"dcl_literal l59, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r2.x___, r0.w, l59\n"
"dcl_literal l60, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000\n"
"uge r3, r2.x, l60\n"
"dcl_literal l61, 0x00000000, 0x3F300000, 0x3F980000, 0x401C0000\n"
"ult r2._yzw, r2.x, l61\n"
"and r2._yzw, r3.xxyz, r2.yyzw\n"
"dcl_literal l62, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l63, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"mad_ieee r3.x___, r2.x, l62, l63\n"
"dcl_literal l64, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000\n"
"add r4, r2.x, l64\n"
"div_zeroop(infinity) r3.x___, r3.x, r4.x\n"
"cmov_logical r3.x___, r2.y, r3.x, r2.x\n"
"dcl_literal l65, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338\n"
"and r2._y__, r2.y, l65\n"
"div_zeroop(infinity) r3._y__, r4.y, r4.z\n"
"cmov_logical r3.x___, r2.z, r3.y, r3.x\n"
"dcl_literal l66, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"cmov_logical r2._y__, r2.z, l66, r2.y\n"
"dcl_literal l67, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000\n"
"dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r2.__z_, r2.x, l67, l68\n"
"div_zeroop(infinity) r2.__z_, r4.w, r2.z\n"
"cmov_logical r2.__z_, r2.w, r2.z, r3.x\n"
"dcl_literal l69, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F\n"
"cmov_logical r2._y__, r2.w, l69, r2.y\n"
"dcl_literal l70, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"div_zeroop(infinity) r2.x___, l70, r2.x\n"
"cmov_logical r2.x___, r3.w, r2.x, r2.z\n"
"dcl_literal l71, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r2._y__, r3.w, l71, r2.y\n"
"mul_ieee r2.__z_, r2.x, r2.x\n"
"mul_ieee r2.___w, r2.x, r2.z\n"
"dcl_literal l72, 0x3B9A3B54, 0x3E993F1F, 0x00000000, 0x00000000\n"
"dcl_literal l73, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r2.z, l72, l73\n"
"dcl_literal l74, 0x3E97D299, 0x3F63BBE5, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r3.xyxx, r2.z, l74\n"
"mul_ieee r2.__z_, r2.w, r3.x\n"
"div_zeroop(infinity) r2.__z_, r2.z, r3.y\n"
"add r2.x___, r2.x_neg(xyzw), r2.z\n"
"add r2.x___, r2.y, r2.x_neg(xyzw)\n"
"dcl_literal l75, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ilt r2._y__, r0.w, l75\n"
"cmov_logical r0.___w, r2.y, r0.w, r2.x\n"
"dcl_literal l76, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"add r2.x___, r0.w_neg(xyzw), l76\n"
"cmov_logical r0.__z_, r0.z, r2.x, r0.w\n"
"dcl_literal l77, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ushr r2.x___, r1.z, l77\n"
"dcl_literal l78, 0x0000001E, 0x0000001E, 0x0000001E, 0x0000001E\n"
"ushr r2._y__, r1.w, l78\n"
"dcl_literal l79, 0x00000001, 0x00000002, 0x00000000, 0x00000000\n"
"and r2.xy__, r2.xyxx, l79\n"
"ior r0.___w, r2.y, r2.x\n"
"dcl_literal l80, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r2.xyz_, r0.w, l80\n"
"dcl_literal l81, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ixor r0.___w, r0.z, l81\n"
"cmov_logical r0.__z_, r2.x, r0.w, r0.z\n"
"dcl_literal l82, 0xA50D3132, 0xA50D3132, 0xA50D3132, 0xA50D3132\n"
"add r0.___w, r0.z, l82\n"
"dcl_literal l83, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"add r0.___w, r0.w_neg(xyzw), l83\n"
"cmov_logical r0.__z_, r2.y, r0.w, r0.z\n"
"dcl_literal l84, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB\n"
"add r0.___w, r0.z, l84\n"
"cmov_logical r0.__z_, r2.z, r0.w, r0.z\n"
"dcl_literal l85, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ult r2.xy__, l85, r1.xyxx\n"
"dcl_literal l86, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ieq r2.__zw, r1.xxxy, l86\n"
"dcl_literal l87, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"cmov_logical r3, r1.xyyx, l87, l88\n"
"dcl_literal l89, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.xy__, r1.zwzz, l89\n"
"inot r1.__zw, r1.xxxy\n"
"and r0.___w, r3.x, r1.z\n"
"and r4.xy__, r3.yzyy, r0.w\n"
"and r4.__zw, r1.y, r4.xxxy\n"
"dcl_literal l90, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"cmov_logical r0.__z_, r4.z, l90, r0.z\n"
"and r0.___w, r3.x, r1.x\n"
"and r3.x_z_, r3.yyzy, r0.w\n"
"and r5.xy__, r1.y, r3.xzxx\n"
"dcl_literal l91, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB\n"
"cmov_logical r0.__z_, r5.x, l91, r0.z\n"
"and r4.xy__, r1.w, r4.xyxx\n"
"dcl_literal l92, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r4.x, l92, r0.z\n"
"and r3.x_z_, r1.w, r3.xxzx\n"
"dcl_literal l93, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.__z_, r3.x, l93, r0.z\n"
"dcl_literal l94, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"cmov_logical r0.__z_, r4.w, l94, r0.z\n"
"dcl_literal l95, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB\n"
"cmov_logical r0.__z_, r5.y, l95, r0.z\n"
"dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r4.y, l96, r0.z\n"
"dcl_literal l97, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.__z_, r3.z, l97, r0.z\n"
"inot r3.x_z_, r2.zzwz\n"
"and r0.___w, r1.z, r3.x\n"
"and r0.___w, r3.w, r0.w\n"
"and r0.___w, r3.y, r0.w\n"
"dcl_literal l98, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r0.__z_, r0.w, l98, r0.z\n"
"and r0.___w, r1.x, r3.x\n"
"and r0.___w, r3.w, r0.w\n"
"and r0.___w, r3.y, r0.w\n"
"dcl_literal l99, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB\n"
"cmov_logical r0.__z_, r0.w, l99, r0.z\n"
"and r0.___w, r3.w, r3.x\n"
"and r3.x___, r1.z, r0.w\n"
"and r3.x___, r2.w, r3.x\n"
"and r3._y__, r1.y, r3.x\n"
"dcl_literal l100, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"cmov_logical r0.__z_, r3.y, l100, r0.z\n"
"and r0.___w, r1.x, r0.w\n"
"and r0.___w, r2.w, r0.w\n"
"and r3._y__, r1.y, r0.w\n"
"dcl_literal l101, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB\n"
"cmov_logical r0.__z_, r3.y, l101, r0.z\n"
"and r3.x___, r1.w, r3.x\n"
"dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r3.x, l102, r0.z\n"
"and r0.___w, r1.w, r0.w\n"
"dcl_literal l103, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.__z_, r0.w, l103, r0.z\n"
"and r0.___w, r2.z, r1.z\n"
"and r1.__z_, r3.z, r0.w\n"
"dcl_literal l104, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"cmov_logical r0.__z_, r1.z, l104, r0.z\n"
"and r1.x___, r2.z, r1.x\n"
"and r1.__z_, r3.z, r1.x\n"
"dcl_literal l105, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB\n"
"cmov_logical r0.__z_, r1.z, l105, r0.z\n"
"and r0.___w, r2.w, r0.w\n"
"and r1.__z_, r1.y, r0.w\n"
"dcl_literal l106, 0x4016CBE4, 0x4016CBE4, 0x4016CBE4, 0x4016CBE4\n"
"cmov_logical r0.__z_, r1.z, l106, r0.z\n"
"and r1.x___, r2.w, r1.x\n"
"and r1._y__, r1.y, r1.x\n"
"dcl_literal l107, 0xC016CBE4, 0xC016CBE4, 0xC016CBE4, 0xC016CBE4\n"
"cmov_logical r0.__z_, r1.y, l107, r0.z\n"
"and r0.___w, r1.w, r0.w\n"
"dcl_literal l108, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"cmov_logical r0.__z_, r0.w, l108, r0.z\n"
"and r0.___w, r1.w, r1.x\n"
"dcl_literal l109, 0xBF490FDB, 0xBF490FDB, 0xBF490FDB, 0xBF490FDB\n"
"cmov_logical r0.__z_, r0.w, l109, r0.z\n"
"cmov_logical r0.x___, r2.x, r0.x, r0.z\n"
"cmov_logical r0.x___, r2.y, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__atanh_f32",
"mdef(183)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x ___, r0.x\n"
"dcl_literal l0, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000\n"
"mov r0.x_z_, l0\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r1._y__, r1.x, l1\n"
"add r1.__z_, r1.y, r1.y\n"
"dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.___w, r1.y_neg(xyzw), l2\n"
"div_zeroop(infinity) r1.__z_, r1.z, r1.w\n"
"dcl_literal l3, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r1.z, l3\n"
"dcl_literal l4, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r1.__z_, r0.w, l4\n"
"dcl_literal l5, 0x4C000000, 0x4C000000, 0x4C000000, 0x4C000000\n"
"mul_ieee r0._y__, r0.w, l5\n"
"cmov_logical r0.xy__, r1.z, r0.xyxx, r0.zwzz\n"
"dcl_literal l6, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.__z_, r0.y, l6\n"
"dcl_literal l7, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r0.___w, l7, r0.z\n"
"dcl_literal l8, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r0.___w, r0.w, l8\n"
"dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1.__z_, r0.w, l9\n"
"dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r0.w, l10\n"
"ior r0.__z_, r0.z, r1.z\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0xBF800000, 0x3F800000\n"
"add r1.__zw, r0.z, l11\n"
"div_zeroop(infinity) r0.__z_, r1.z, r1.w\n"
"mul_ieee r1.___w, r0.z, r0.z\n"
"mul_ieee r2.x___, r1.w, r1.w\n"
"dcl_literal l12, 0x00000000, 0x3E1CD04F, 0x3E178897, 0x00000000\n"
"dcl_literal l13, 0x00000000, 0x3E638E29, 0x3E3A3325, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, l12, l13\n"
"dcl_literal l14, 0x00000000, 0x3ECCCCCD, 0x3E924925, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, r2.yyzy, l14\n"
"mul_ieee r2._y__, r2.x, r2.y\n"
"dcl_literal l15, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r2.x___, r2.x, r2.z, l15\n"
"mad_ieee r1.___w, r1.w, r2.x, r2.y\n"
"mul_ieee r2.x___, r1.z, r1.z\n"
"dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.___w, r2.x, l16, r1.w\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0._y__, r0.y, l17\n"
"iadd r0.x___, r0.y, r0.x\n"
"dcl_literal l18, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.x___, l18, r0.x\n"
"iadd r0.x___, r0.x, r0.w\n"
"itof r0.x___, r0.x\n"
"dcl_literal l19, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r0._y__, r0.x, l19\n"
"mad_ieee r0._y__, r0.z, r1.w, r0.y\n"
"dcl_literal l20, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0._y__, r2.x, l20, r0.y_neg(xyzw)\n"
"add r0._y__, r1.z_neg(xyzw), r0.y\n"
"dcl_literal l21, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.x___, r0.x, l21, r0.y_neg(xyzw)\n"
"dcl_literal l22, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r0.x___, r0.x, l22\n"
"mul_ieee r0._y__, r1.y, r1.y\n"
"dcl_literal l23, 0x00000000, 0x00000000, 0x3C18197E, 0x3EE7D7E1\n"
"dcl_literal l24, 0x00000000, 0x00000000, 0xBE8FF9E7, 0xBFC6E215\n"
"mad_ieee r0.__zw, r0.y, l23, l24\n"
"dcl_literal l25, 0x00000000, 0x00000000, 0x3ECA00A9, 0x3F97807F\n"
"mad_ieee r0.__zw, r0.zzzw, r0.y, l25\n"
"mul_ieee r0._y__, r1.y, r0.y\n"
"div_zeroop(infinity) r0.__z_, r0.z, r0.w\n"
"mad_ieee r0._y__, r0.y, r0.z, r1.y\n"
"dcl_literal l26, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"lt r0.__z_, r1.y, l26\n"
"cmov_logical r0.x___, r0.z, r0.y, r0.x\n"
"dcl_literal l27, 0x31800000, 0x31800000, 0x31800000, 0x31800000\n"
"ige r0._y__, l27, r1.y\n"
"cmov_logical r0.x___, r0.y, r1.y, r0.x\n"
"dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ieq r0._y__, r1.y, l28\n"
"dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.y, l29, r0.x\n"
"dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0._y__, r1.x, l30\n"
"dcl_literal l31, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.__z_, r1.x, l31\n"
"dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r1.y, l32\n"
"and r0._y__, r0.y, r0.w\n"
"cmov_logical r0.x___, r0.y, r0.x_neg(xyzw), r0.x\n"
"dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ilt r0._y__, l33, r1.y\n"
"dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, r1.y, l34\n"
"dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r1.x___, r1.y, l35\n"
"and r0._y__, r0.y, r0.w\n"
"dcl_literal l36, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l36, r0.x\n"
"cmov_logical r0.x___, r1.x, r0.z, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__atanpi_f32",
"mdef(184)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x01490FDB, 0x01490FDB, 0x01490FDB, 0x01490FDB\n"
"ige r0.___w, l1, r0.y\n"
"if_logicalnz r0.w\n"
"    \n"
"    dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.___w, r0.x, l2\n"
"    if_logicalz r0.w\n"
"        \n"
"        dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1.x___, r0.x, l3\n"
"        itof r1.x___, r1.x\n"
"        \n"
"        dcl_literal l4, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r1.xy__, r1.x, l4\n"
"        \n"
"        dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.x___, r1.x, l5\n"
"        \n"
"        dcl_literal l6, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        iadd r1.x___, r1.x, l6\n"
"        \n"
"        dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1._y__, r1.y, l7\n"
"        \n"
"        dcl_literal l8, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1.x___, l8, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r1.__z_, l9, r1.x\n"
"        \n"
"        dcl_literal l10, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.x___, r1.z, l10, r1.x\n"
"        \n"
"        dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r1.__z_, l11, r1.x\n"
"        ishr r1.___w, r1.y, r1.x\n"
"        inegate r1.x___, r1.x\n"
"        \n"
"        dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.x___, r1.x, l12\n"
"        iadd r1.x___, r1.y, r1.x\n"
"        cmov_logical r1.x___, r1.z, r1.w, r1.x\n"
"    else\n"
"        \n"
"        dcl_literal l13, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r1._y__, r0.x, l13\n"
"        \n"
"        dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.___w, r0.w, l14\n"
"        \n"
"        dcl_literal l15, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000\n"
"        iadd r1._y__, r1.y, l15\n"
"        \n"
"        dcl_literal l16, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99\n"
"        iadd r0.___w, r0.w, l16\n"
"        \n"
"        dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r0.___w, l17, r0.w\n"
"        \n"
"        dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r1.x___, r0.w, l18, r1.y\n"
"    endif\n"
"    \n"
"    dcl_literal l19, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983\n"
"    mul_ieee r0.___w, r1.x, l19\n"
"    \n"
"    dcl_literal l20, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r1.xy__, r0.w, l20\n"
"    if_logicalz r1.x\n"
"        itof r1.__z_, r1.y\n"
"        \n"
"        dcl_literal l21, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r1.__zw, r1.z, l21\n"
"        \n"
"        dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.__z_, r1.z, l22\n"
"        \n"
"        dcl_literal l23, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r1.__z_, r1.z, l23\n"
"        \n"
"        dcl_literal l24, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l24\n"
"        \n"
"        dcl_literal l25, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1.__z_, l25, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.x___, l26, r1.z\n"
"        \n"
"        dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.__z_, r2.x, l27, r1.z\n"
"        \n"
"        dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2.x___, l28, r1.z\n"
"        ishr r2._y__, r1.w, r1.z\n"
"        inegate r1.__z_, r1.z\n"
"        \n"
"        dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.__z_, r1.z, l29\n"
"        iadd r1.__z_, r1.w, r1.z\n"
"        cmov_logical r1.__z_, r2.x, r2.y, r1.z\n"
"    else\n"
"        \n"
"        dcl_literal l30, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r0.___w, r0.w, l30\n"
"        \n"
"        dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.x___, r1.x, l31\n"
"        \n"
"        dcl_literal l32, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000\n"
"        iadd r0.___w, r0.w, l32\n"
"        \n"
"        dcl_literal l33, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69\n"
"        iadd r1.x___, r1.x, l33\n"
"        \n"
"        dcl_literal l34, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r1.x___, l34, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l35, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1._y__, r1.y, l35\n"
"        \n"
"        dcl_literal l36, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"        ilt r2.xy__, l36, r1.x\n"
"        \n"
"        dcl_literal l37, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.x___, r2.y, l37, r1.x\n"
"        ishr r1.x___, r1.y, r1.x\n"
"        cmov_logical r1.__z_, r2.x, r1.x, r0.w\n"
"    endif\n"
"else\n"
"    \n"
"    dcl_literal l38, 0x31800000, 0x31800000, 0x31800000, 0x31800000\n"
"    lt r0.___w, r0.y, l38\n"
"    if_logicalnz r0.w\n"
"        mov r0.___w, r0.y\n"
"    else\n"
"        \n"
"        dcl_literal l39, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000\n"
"        uge r2, r0.y, l39\n"
"        \n"
"        dcl_literal l40, 0x3F300000, 0x3F980000, 0x00000000, 0x401C0000\n"
"        ult r1.xy_w, r0.y, l40\n"
"        and r1.xy_w, r2.xyxz, r1.xyxw\n"
"        \n"
"        dcl_literal l41, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"        \n"
"        dcl_literal l42, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        mad_ieee r2.x___, r0.y, l41, l42\n"
"        \n"
"        dcl_literal l43, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000\n"
"        add r3, r0.y, l43\n"
"        div_zeroop(infinity) r2.x___, r2.x, r3.x\n"
"        cmov_logical r2.x___, r1.x, r2.x, r0.y\n"
"        \n"
"        dcl_literal l44, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338\n"
"        and r1.x___, r1.x, l44\n"
"        div_zeroop(infinity) r2._y__, r3.y, r3.z\n"
"        cmov_logical r2.x___, r1.y, r2.y, r2.x\n"
"        \n"
"        dcl_literal l45, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"        cmov_logical r1.x___, r1.y, l45, r1.x\n"
"        \n"
"        dcl_literal l46, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000\n"
"        \n"
"        dcl_literal l47, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        mad_ieee r1._y__, r0.y, l46, l47\n"
"        div_zeroop(infinity) r1._y__, r3.w, r1.y\n"
"        cmov_logical r1._y__, r1.w, r1.y, r2.x\n"
"        \n"
"        dcl_literal l48, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F\n"
"        cmov_logical r1.x___, r1.w, l48, r1.x\n"
"        \n"
"        dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        div_zeroop(infinity) r1.___w, l49, r0.y\n"
"        cmov_logical r1._y__, r2.w, r1.w, r1.y\n"
"        \n"
"        dcl_literal l50, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        cmov_logical r1.x___, r2.w, l50, r1.x\n"
"        mul_ieee r1.___w, r1.y, r1.y\n"
"        mul_ieee r2.x___, r1.y, r1.w\n"
"        \n"
"        dcl_literal l51, 0x00000000, 0x3B9A3B54, 0x3E993F1F, 0x00000000\n"
"        \n"
"        dcl_literal l52, 0x00000000, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000\n"
"        mad_ieee r2._yz_, r1.w, l51, l52\n"
"        \n"
"        dcl_literal l53, 0x00000000, 0x3E97D299, 0x3F63BBE5, 0x00000000\n"
"        mad_ieee r2._yz_, r2.yyzy, r1.w, l53\n"
"        mul_ieee r1.___w, r2.x, r2.y\n"
"        div_zeroop(infinity) r1.___w, r1.w, r2.z\n"
"        add r1._y__, r1.y_neg(xyzw), r1.w\n"
"        add r0.___w, r1.x, r1.y_neg(xyzw)\n"
"    endif\n"
"    \n"
"    dcl_literal l54, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983\n"
"    mul_ieee r1.__z_, r0.w, l54\n"
"endif\n"
"ior r0.__z_, r0.z, r1.z\n"
"\n"
"dcl_literal l55, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0._y__, l55, r0.y\n"
"\n"
"dcl_literal l56, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l56\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__atan_f32",
"mdef(185)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"lt r0.___w, r0.y, l1\n"
"if_logicalnz r0.w\n"
"    mov r0.___w, r0.y\n"
"else\n"
"    \n"
"    dcl_literal l2, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000\n"
"    uge r1, r0.y, l2\n"
"    \n"
"    dcl_literal l3, 0x3F300000, 0x3F980000, 0x401C0000, 0x00000000\n"
"    ult r2.xyz_, r0.y, l3\n"
"    and r1.xyz_, r1.xyzx, r2.xyzx\n"
"    \n"
"    dcl_literal l4, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    \n"
"    dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    mad_ieee r2.x___, r0.y, l4, l5\n"
"    \n"
"    dcl_literal l6, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000\n"
"    add r3, r0.y, l6\n"
"    div_zeroop(infinity) r2.x___, r2.x, r3.x\n"
"    cmov_logical r2.x___, r1.x, r2.x, r0.y\n"
"    \n"
"    dcl_literal l7, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338\n"
"    and r1.x___, r1.x, l7\n"
"    div_zeroop(infinity) r2._y__, r3.y, r3.z\n"
"    cmov_logical r2.x___, r1.y, r2.y, r2.x\n"
"    \n"
"    dcl_literal l8, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"    cmov_logical r1.x___, r1.y, l8, r1.x\n"
"    \n"
"    dcl_literal l9, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000\n"
"    \n"
"    dcl_literal l10, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    mad_ieee r1._y__, r0.y, l9, l10\n"
"    div_zeroop(infinity) r1._y__, r3.w, r1.y\n"
"    cmov_logical r1._y__, r1.z, r1.y, r2.x\n"
"    \n"
"    dcl_literal l11, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F\n"
"    cmov_logical r1.x___, r1.z, l11, r1.x\n"
"    \n"
"    dcl_literal l12, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    div_zeroop(infinity) r1.__z_, l12, r0.y\n"
"    cmov_logical r1._y__, r1.w, r1.z, r1.y\n"
"    \n"
"    dcl_literal l13, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"    cmov_logical r1.x___, r1.w, l13, r1.x\n"
"    mul_ieee r1.__z_, r1.y, r1.y\n"
"    mul_ieee r1.___w, r1.y, r1.z\n"
"    \n"
"    dcl_literal l14, 0x3B9A3B54, 0x3E993F1F, 0x00000000, 0x00000000\n"
"    \n"
"    dcl_literal l15, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, l14, l15\n"
"    \n"
"    dcl_literal l16, 0x3E97D299, 0x3F63BBE5, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r2.xyxx, r1.z, l16\n"
"    mul_ieee r1.__z_, r1.w, r2.x\n"
"    div_zeroop(infinity) r1.__z_, r1.z, r2.y\n"
"    add r1._y__, r1.y_neg(xyzw), r1.z\n"
"    add r0.___w, r1.x, r1.y_neg(xyzw)\n"
"endif\n"
"ior r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0._y__, l17, r0.y\n"
"\n"
"dcl_literal l18, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l18\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__cbrt_f32",
"mdef(186)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF\n"
"and r0._yzw, r0.x, l0\n"
"itof r0.___w, r0.w\n"
"dcl_literal l1, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.w, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.x, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.x___, r1.y, l3\n"
"dcl_literal l4, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"iadd r0.___w, r0.w, l4\n"
"dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.___w, l5, r0.w_neg(xyzw)\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1._y__, l6, r0.w\n"
"dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.___w, r1.y, l7, r0.w\n"
"inegate r1._y__, r0.w\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1._y__, r1.y, l8\n"
"iadd r1._y__, r1.x, r1.y\n"
"ishr r1.x___, r1.x, r0.w\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l9, r0.w\n"
"cmov_logical r0.___w, r0.w, r1.x, r1.y\n"
"cmov_logical r0._y__, r0.z, r0.y, r0.w\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l11, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0\n"
"cmov_logical r0.__z_, r0.z, l10, l11\n"
"dcl_literal l12, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.y, l12\n"
"dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.x, l13\n"
"dcl_literal l14, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l14\n"
"itof r0.___w, r0.w\n"
"dcl_literal l15, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"mul_ieee r1.x___, r0.w, l15\n"
"round_nearest r1.x___, r1.x\n"
"dcl_literal l16, 0x40400000, 0x40400000, 0x40400000, 0x40400000\n"
"mad_ieee r0.___w, r1.x_neg(xyzw), l16, r0.w\n"
"ftoi r1.x___, r1.x\n"
"ftoi r0.___w, r0.w\n"
"dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r0.___w, r0.w, l17\n"
"dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.___w, r0.w, l18\n"
"ior r0.___w, r1.y, r0.w\n"
"dcl_literal l19, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1._y__, r0.w, l19\n"
"dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r0.w, l20\n"
"dcl_literal l21, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1.__z_, l21, r1.y\n"
"dcl_literal l22, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.__z_, r1.z, l22\n"
"dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1.___w, r1.z, l23\n"
"dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r1.z, l24\n"
"ior r1._y__, r1.y, r1.w\n"
"dcl_literal l25, 0x00000000, 0xBF800000, 0x00000000, 0x3F800000\n"
"add r1._y_w, r1.y, l25\n"
"div_zeroop(infinity) r1.___w, r1.y, r1.w\n"
"mul_ieee r2.x___, r1.w, r1.w\n"
"mul_ieee r2._y__, r2.x, r2.x\n"
"dcl_literal l26, 0x00000000, 0x00000000, 0x3E1CD04F, 0x3E178897\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x3E638E29, 0x3E3A3325\n"
"mad_ieee r2.__zw, r2.y, l26, l27\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x3ECCCCCD, 0x3E924925\n"
"mad_ieee r2.__zw, r2.y, r2.zzzw, l28\n"
"mul_ieee r2.__z_, r2.y, r2.z\n"
"dcl_literal l29, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r2._y__, r2.y, r2.w, l29\n"
"mad_ieee r2.x___, r2.x, r2.y, r2.z\n"
"mul_ieee r2._y__, r1.y, r1.y\n"
"dcl_literal l30, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.x___, r2.y, l30, r2.x\n"
"dcl_literal l31, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r2._y__, r2.y, l31\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r2.y\n"
"add r1._y__, r1.y_neg(xyzw), r1.w\n"
"dcl_literal l32, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB\n"
"mul_ieee r1.___w, r1.y, l32\n"
"mul_ieee r2.x___, r1.w, r1.w\n"
"dcl_literal l33, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"dcl_literal l34, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r2._y__, r2.x, l33, l34\n"
"dcl_literal l35, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r2._y__, r2.x, r2.y, l35\n"
"dcl_literal l36, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r2._y__, r2.x, r2.y, l36\n"
"dcl_literal l37, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r2._y__, r2.x, r2.y, l37\n"
"mad_ieee r2.x___, r2.x_neg(xyzw), r2.y, r1.w\n"
"mul_ieee r1.___w, r1.w, r2.x\n"
"dcl_literal l38, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"add r2.x___, r2.x, l38\n"
"div_zeroop(infinity) r1.___w, r1.w, r2.x\n"
"dcl_literal l39, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB\n"
"mad_ieee r1._y__, r1.y_neg(xyzw), l39, r1.w\n"
"dcl_literal l40, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1._y__, r1.y_neg(xyzw), l40\n"
"dcl_literal l41, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l41\n"
"iadd r0.___w, r0.w, r1.z\n"
"itof r0.___w, r0.w\n"
"dcl_literal l42, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820\n"
"mul_ieee r1.__z_, r0.w, l42\n"
"mul_ieee r1.___w, r1.z, r1.z\n"
"dcl_literal l43, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"dcl_literal l44, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r2.x___, r1.w, l43, l44\n"
"dcl_literal l45, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r2.x___, r1.w, r2.x, l45\n"
"dcl_literal l46, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r2.x___, r1.w, r2.x, l46\n"
"dcl_literal l47, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r2.x___, r1.w, r2.x, l47\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r1.z\n"
"mul_ieee r1.__z_, r1.z, r1.w\n"
"dcl_literal l48, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"add r1.___w, r1.w, l48\n"
"div_zeroop(infinity) r1.__z_, r1.z, r1.w\n"
"dcl_literal l49, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820\n"
"mad_ieee r0.___w, r0.w_neg(xyzw), l49, r1.z\n"
"dcl_literal l50, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.w_neg(xyzw), l50\n"
"mul_ieee r0.___w, r1.y, r0.w\n"
"dcl_literal l51, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r2, r0.w, l51\n"
"iadd r0.__z_, r1.x, r0.z\n"
"dcl_literal l52, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r0.___w, r0.z, l52\n"
"cmov_logical r0.__z_, r2.z, r0.z, r0.w\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.___w, r0.z, l53\n"
"itof r1.x___, r2.w\n"
"cmov_logical r1.x___, r2.z, r2.x, r1.x\n"
"iadd r0.___w, r1.x, r0.w\n"
"dcl_literal l54, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r1.x, l54\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l55\n"
"dcl_literal l56, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1._y__, r1.y, l56\n"
"iadd r0.__z_, r1.x, r0.z\n"
"dcl_literal l57, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l57\n"
"dcl_literal l58, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.x___, l58, r0.z\n"
"dcl_literal l59, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.__z_, l59, r0.z_neg(xyzw)\n"
"dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r1.x, l60, r0.w\n"
"dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.x___, l61, r0.z\n"
"dcl_literal l62, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.__z_, r1.x, l62, r0.z\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.__z_, r0.z, l63\n"
"ishr r1.x___, r1.y, r0.z\n"
"dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l64, r0.z\n"
"cmov_logical r0.__z_, r0.z, r1.x, r0.w\n"
"ior r0.__z_, r2.y, r0.z\n"
"dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l65\n"
"cmov_logical r0.__z_, r0.w, r0.z_neg(xyzw), r0.z\n"
"dcl_literal l66, 0x7F800000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r1.xy__, r0.y, l66\n"
"dcl_literal l67, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0._y__, l67, r0.y\n"
"ior r0.___w, r1.y, r1.x\n"
"cmov_logical r0.__z_, r0.w, r0.x, r0.z\n"
"dcl_literal l68, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l68\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ceil_f32",
"mdef(187)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_plusinf r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__clamp_f32",
"mdef(188)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"max r0.___w, r1.x, r0.x\n"
"min r0.x___, r2.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__copysign_f32",
"mdef(189)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x00000000, 0x00000000\n"
"and r0.xy__, r0.xyxx, l0\n"
"ior r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__cosh_f32",
"mdef(190)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"\n"
"dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.__z_, r0.y, l1, l2\n"
"round_z r0.__z_, r0.z\n"
"\n"
"dcl_literal l3, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.___w, r0.z_neg(xyzw), l3, r0.y\n"
"\n"
"dcl_literal l4, 0x42000000, 0x42000000, 0x42000000, 0x42000000\n"
"ge r1.x___, r0.z, l4\n"
"\n"
"dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1._y__, r0.z, l5\n"
"cmov_logical r1.x___, r1.x, r1.y, r0.z\n"
"\n"
"dcl_literal l6, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1._y__, r0.z_neg(xyzw), l6, r0.w\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l7, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l8, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r1.___w, r1.z, l7, l8\n"
"\n"
"dcl_literal l9, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r1.___w, r1.z, r1.w, l9\n"
"\n"
"dcl_literal l10, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r1.___w, r1.z, r1.w, l10\n"
"\n"
"dcl_literal l11, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r1.___w, r1.z, r1.w, l11\n"
"mad_ieee r1.__z_, r1.z_neg(xyzw), r1.w, r1.y\n"
"mul_ieee r1._y__, r1.y, r1.z\n"
"\n"
"dcl_literal l12, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1.__z_, r1.z_neg(xyzw), l12\n"
"div_zeroop(infinity) r1._y__, r1.y, r1.z\n"
"\n"
"dcl_literal l13, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r0.__z_, r0.z, l13, r1.y_neg(xyzw)\n"
"add r0.__z_, r0.w_neg(xyzw), r0.z\n"
"\n"
"dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.__z_, r0.z_neg(xyzw), l14\n"
"ftoi r0.___w, r1.x\n"
"mov r1._y__, r0.z_abs\n"
"\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r1.__zw, r1.y, l15\n"
"if_logicalz r1.z\n"
"    itof r2.x___, r1.w\n"
"    \n"
"    dcl_literal l16, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r2.xy__, r2.x, l16\n"
"    \n"
"    dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.x___, r2.x, l17\n"
"    iadd r2.x___, r2.x, r0.w\n"
"    \n"
"    dcl_literal l18, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2._y__, r2.y, l18\n"
"    \n"
"    dcl_literal l19, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r2.x___, l19, r2.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.__z_, l20, r2.x\n"
"    \n"
"    dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.x___, r2.z, l21, r2.x\n"
"    \n"
"    dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, l22, r2.x\n"
"    ishr r2.___w, r2.y, r2.x\n"
"    inegate r2.x___, r2.x\n"
"    \n"
"    dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.x___, r2.x, l23\n"
"    iadd r2.x___, r2.y, r2.x\n"
"    cmov_logical r2.x___, r2.z, r2.w, r2.x\n"
"else\n"
"    \n"
"    dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.__z_, r1.z, l24\n"
"    iadd r1.__z_, r1.z, r0.w\n"
"    \n"
"    dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l25\n"
"    iadd r0.___w, r1.y, r0.w\n"
"    \n"
"    dcl_literal l26, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1._y__, r1.z, l26\n"
"    \n"
"    dcl_literal l27, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r1.__z_, l27, r1.y\n"
"    \n"
"    dcl_literal l28, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r1.z, l28, r0.w\n"
"    \n"
"    dcl_literal l29, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1._y__, l29, r1.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l30, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.__z_, r1.w, l30\n"
"    \n"
"    dcl_literal l31, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"    ilt r2._yz_, l31, r1.y\n"
"    \n"
"    dcl_literal l32, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1._y__, r2.z, l32, r1.y\n"
"    ishr r1._y__, r1.z, r1.y\n"
"    cmov_logical r2.x___, r2.y, r1.y, r0.w\n"
"endif\n"
"\n"
"dcl_literal l33, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r0.___w, l33, r1.x\n"
"\n"
"dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r0.w, l34, r2.x\n"
"\n"
"dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.__z_, r0.z, l35\n"
"cmov_logical r0.__z_, r0.z, r0.w_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l36, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50\n"
"lt r0.___w, r0.y, l36\n"
"\n"
"dcl_literal l37, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"div_zeroop(infinity) r1.x___, l37, r0.z\n"
"\n"
"dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.x___, r0.z, l38, r1.x\n"
"cmov_logical r0.__z_, r0.w, r1.x, r0.z\n"
"\n"
"dcl_literal l39, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"uge r0.___w, r0.y, l39\n"
"cmov_logical r0.__z_, r0.w, r0.x, r0.z\n"
"\n"
"dcl_literal l40, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD\n"
"ge r0.___w, r0.y, l40\n"
"\n"
"dcl_literal l41, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r0.w, l41, r0.z\n"
"\n"
"dcl_literal l42, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0.___w, l42, r0.y\n"
"\n"
"dcl_literal l43, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l43\n"
"cmov_logical r0.__z_, r0.w, r1.x, r0.z\n"
"\n"
"dcl_literal l44, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l44\n"
"cmov_logical r0.__z_, r0.w, r0.y, r0.z\n"
"\n"
"dcl_literal l45, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r0.y, r0.z, l45\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__cospi_f32",
"mdef(191)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"frc r0.__z_, r0.y\n"
"add r0.___w, r0.y, r0.z_neg(xyzw)\n"
"\n"
"dcl_literal l1, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r0.___w, r0.w, l1\n"
"frc r0.___w, r0.w\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r0.___w, r0.w, l2\n"
"\n"
"dcl_literal l3, 0x00000000, 0x3F000000, 0x00000000, 0x00000000\n"
"ne r1.xy__, r0.z, l3\n"
"and r1.x___, r1.y, r1.x\n"
"\n"
"dcl_literal l4, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ige r1._y__, r0.y, l4\n"
"and r1.x___, r1.x, r1.y\n"
"\n"
"dcl_literal l5, 0x00000000, 0x7F800000, 0x32000000, 0x00000000\n"
"ilt r1._yz_, r0.y, l5\n"
"and r1.x___, r1.x, r1.y\n"
"if_logicalnz r1.x\n"
"    add r1.x___, r0.x, r0.x\n"
"    round_nearest r1.x___, r1.x\n"
"    \n"
"    dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"    mul_ieee r1._y__, r1.x, l6\n"
"    frc r1._y__, r1.y\n"
"    \n"
"    dcl_literal l7, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"    mul_ieee r1._y__, r1.y, l7\n"
"    round_nearest r1._y__, r1.y\n"
"    \n"
"    dcl_literal l8, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    mad_ieee r1.x___, r0.x, l8, r1.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l9, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"    mul_ieee r1.x___, r1.x, l9\n"
"    mul_ieee r1.___w, r1.x, r1.x\n"
"    mul_ieee r2.x___, r1.x, r1.w\n"
"    \n"
"    dcl_literal l10, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000\n"
"    \n"
"    dcl_literal l11, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000\n"
"    mad_ieee r2._yz_, r1.w, l10, l11\n"
"    \n"
"    dcl_literal l12, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000\n"
"    mad_ieee r2._yz_, r1.w, r2.yyzy, l12\n"
"    \n"
"    dcl_literal l13, 0x00000000, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000\n"
"    mad_ieee r2._yz_, r1.w, r2.yyzy, l13\n"
"    mad_ieee r1.x___, r2.x, r2.y, r1.x\n"
"    \n"
"    dcl_literal l14, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    \n"
"    dcl_literal l15, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    mad_ieee r2.x___, r1.w_neg(xyzw), l14, l15\n"
"    mul_ieee r1.___w, r1.w, r1.w\n"
"    mad_ieee r1.___w, r1.w, r2.z, r2.x\n"
"    \n"
"    dcl_literal l16, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"    eq r2, r1.y, l16\n"
"    and r1._y__, r1.w, r2.x\n"
"    cmov_logical r1._y__, r2.y, r1.x_neg(xyzw), r1.y\n"
"    cmov_logical r1._y__, r2.z, r1.w_neg(xyzw), r1.y\n"
"    cmov_logical r1.x___, r2.w, r1.x, r1.y\n"
"else\n"
"    \n"
"    dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r1.x___, l17\n"
"endif\n"
"\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x3F000000\n"
"eq r1._y_w, r0.z, l18\n"
"ior r0.__z_, r1.z, r1.y\n"
"\n"
"dcl_literal l19, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"\n"
"dcl_literal l20, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.___w, r0.w, l19, l20\n"
"\n"
"dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.x___, r1.w, l21, r1.x\n"
"cmov_logical r0.__z_, r0.z, r0.w, r1.x\n"
"\n"
"dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l22\n"
"\n"
"dcl_literal l23, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.__z_, r0.w, l23, r0.z\n"
"\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l24, r0.y\n"
"\n"
"dcl_literal l25, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l25\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__cos_f32",
"mdef(192)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ilt r0.__z_, r0.y, l1\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    mov r0.__z_, l2\n"
"else\n"
"    \n"
"    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680\n"
"    lt r0.___w, r0.y, l3\n"
"    if_logicalnz r0.w\n"
"        \n"
"        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"        mul_ieee r0.___w, r0.y, l4\n"
"        round_nearest r0.___w, r0.w\n"
"        \n"
"        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"        and r1.x___, r0.w, l5\n"
"        add r1._y__, r0.w, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"        mul_ieee r1.__z_, r0.w, l6\n"
"        \n"
"        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"        mul_ieee r2.xyz_, r0.w, l7\n"
"        \n"
"        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)\n"
"        \n"
"        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l9, r3.xyxx\n"
"        \n"
"        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.y, l10, r3.xyxx\n"
"        \n"
"        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.y, l11, r3.xyxx\n"
"        add r0.___w, r0.y, r2.x_neg(xyzw)\n"
"        add r1.___w, r0.y, r0.w_neg(xyzw)\n"
"        add r1.___w, r2.x_neg(xyzw), r1.w\n"
"        add r1.___w, r3.x_neg(xyzw), r1.w\n"
"        add r0.___w, r0.w, r1.w\n"
"        add r1.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"        add r0.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r3.y_neg(xyzw), r0.w\n"
"        add r0.___w, r1.w, r0.w\n"
"        \n"
"        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.___w, r1.x, l12, r2.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1.x___, r1.x, l13, r1.w\n"
"        \n"
"        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.x___, r1.y, l14, r1.x\n"
"        \n"
"        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1._y__, r1.y, l15, r1.x\n"
"        add r1.___w, r2.z_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"        add r0.___w, r2.z_neg(xyzw), r0.w\n"
"        add r1.x___, r1.w, r0.w\n"
"        frc r0.___w, r1.z\n"
"        \n"
"        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"        mul_ieee r0.___w, r0.w, l16\n"
"        round_nearest r0.___w, r0.w\n"
"        mov r1._y__, r1.y_neg(xyzw)\n"
"    else\n"
"        \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r1.__z_, r0.y, l17\n"
"        \n"
"        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1.___w, r0.x, l18\n"
"        \n"
"        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l19\n"
"        \n"
"        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r1.w, l20\n"
"        \n"
"        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r1.___w, r1.w, l21\n"
"        \n"
"        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r3, l22, r1.w\n"
"        \n"
"        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r4, l23, r2.x\n"
"        \n"
"        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2._yz_, r4.yywy, l24\n"
"        \n"
"        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r5.xy__, r3.ywyy, l25\n"
"        iadd r2._yz_, r2.yyzy, r5.xxyx\n"
"        iadd r2._yz_, r4.xxzx, r2.yyzy\n"
"        \n"
"        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r4.x_z_, r2.yyzy, l26\n"
"        iadd r3.x_z_, r3.xxzx, r4.xxzx\n"
"        \n"
"        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l27\n"
"        \n"
"        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2._yz_, r2.yyzy, l28\n"
"        \n"
"        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r4.xy__, r4.ywyy, l29\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        ior r4.xy__, r2.yzyy, r4.xyxx\n"
"        iadd r5.__z_, r3.x, r4.y\n"
"        ult r2._y__, r5.z, r4.y\n"
"        \n"
"        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r3.y, l30\n"
"        cmov_logical r2._y__, r2.y, r2.z, r3.y\n"
"        \n"
"        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r3, l31, r1.w\n"
"        \n"
"        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r6, l32, r2.x\n"
"        \n"
"        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l33\n"
"        \n"
"        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l34\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"        \n"
"        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l35\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"        \n"
"        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l36\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        \n"
"        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l37\n"
"        \n"
"        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l38\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r5._y__, r2.y, r2.z\n"
"        ult r2._y__, r5.y, r2.z\n"
"        \n"
"        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001\n"
"        iadd r3.__zw, r3.xxxy, l39\n"
"        cmov_logical r2._y__, r2.y, r3.z, r3.x\n"
"        iadd r5.x___, r2.y, r2.w\n"
"        ult r2._y__, r5.x, r2.w\n"
"        cmov_logical r2._y__, r2.y, r3.w, r3.y\n"
"        \n"
"        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r3, l40, r1.w\n"
"        \n"
"        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r6, l41, r2.x\n"
"        \n"
"        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l42\n"
"        \n"
"        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l43\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"        \n"
"        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l44\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"        \n"
"        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l45\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        \n"
"        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l46\n"
"        \n"
"        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l47\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r3.___w, r2.y, r2.z\n"
"        ult r2._y__, r3.w, r2.z\n"
"        \n"
"        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000\n"
"        iadd r6.xy__, r3.xyxx, l48\n"
"        cmov_logical r2._y__, r2.y, r6.x, r3.x\n"
"        iadd r3.__z_, r2.y, r2.w\n"
"        ult r2._y__, r3.z, r2.w\n"
"        cmov_logical r2._y__, r2.y, r6.y, r3.y\n"
"        \n"
"        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E\n"
"        umul r2.__zw, l49, r1.w\n"
"        \n"
"        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000\n"
"        umul r3.xy__, l50, r2.x\n"
"        \n"
"        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r1.___w, r3.y, l51\n"
"        \n"
"        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r2.w, l52\n"
"        iadd r1.___w, r1.w, r2.x\n"
"        iadd r1.___w, r3.x, r1.w\n"
"        \n"
"        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.x___, r1.w, l53\n"
"        iadd r2.x___, r2.z, r2.x\n"
"        \n"
"        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__z_, r2.w, l54\n"
"        iadd r2.x___, r2.x, r2.z\n"
"        \n"
"        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r1.___w, r1.w, l55\n"
"        \n"
"        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.__z_, r3.y, l56\n"
"        ior r1.___w, r1.w, r2.z\n"
"        iadd r2._y__, r2.y, r1.w\n"
"        ult r1.___w, r2.y, r1.w\n"
"        \n"
"        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r2.x, l57\n"
"        cmov_logical r1.___w, r1.w, r2.z, r2.x\n"
"        \n"
"        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000\n"
"        iadd r2.x_z_, r1.z, l58\n"
"        \n"
"        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r6.x___, r2.x, l59\n"
"        \n"
"        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r1.__z_, r6.x, l60\n"
"        iadd r1.__z_, r2.x, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l61, r6.x\n"
"        \n"
"        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r7, r2.x, l62\n"
"        inegate r2.___w, r7.x\n"
"        \n"
"        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r8.x___, r7.y, l63\n"
"        \n"
"        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r8._y__, r7.z, l64\n"
"        \n"
"        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r8.__z_, r7.w, l65\n"
"        inegate r7.xyz_, r8.xyzx\n"
"        \n"
"        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r8, r2.x, l66\n"
"        \n"
"        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r9.x___, r8.x, l67\n"
"        \n"
"        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r9._yzw, r8.yyzw, l68\n"
"        inegate r8, r9\n"
"        and r2.x___, r1.w, r2.w\n"
"        and r3.xy__, r2.y, r7.xyxx\n"
"        ior r2.x___, r2.x, r3.x\n"
"        and r7._yzw, r3.zzzw, r7.yyzz\n"
"        ior r2.x___, r2.x, r7.y\n"
"        ior r2.x___, r7.w, r2.x\n"
"        and r9, r5.xxyy, r8.xyyz\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.z, r2.x\n"
"        and r7._y_w, r5.z, r8.zzzw\n"
"        ior r2.x___, r2.x, r7.y\n"
"        and r2.___w, r4.x, r8.w\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r2.___w, r1.w, r7.x\n"
"        ior r2.___w, r3.y, r2.w\n"
"        ior r2.___w, r7.z, r2.w\n"
"        and r3.x___, r3.w, r8.x\n"
"        ior r2.___w, r2.w, r3.x\n"
"        ior r2.___w, r9.y, r2.w\n"
"        ior r2.___w, r9.w, r2.w\n"
"        ior r2.___w, r7.w, r2.w\n"
"        \n"
"        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r3.x___, l69, r1.z\n"
"        and r3.x___, r2.x, r3.x\n"
"        inegate r3._y__, r1.z\n"
"        \n"
"        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"        iadd r6._y__, l70, r3.y\n"
"        \n"
"        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ult r4._y__, l71, r1.z\n"
"        \n"
"        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.__z_, r1.z, l72\n"
"        \n"
"        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r1.__z_, l73, r1.z\n"
"        and r1.__z_, r2.x, r1.z\n"
"        ior r1.__z_, r3.x, r1.z\n"
"        ushr r1.__z_, r1.z, r6.y\n"
"        ushr r2.x___, r3.x, r6.y\n"
"        \n"
"        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        and r2.___w, r2.w, l74\n"
"        \n"
"        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.___w, r2.w, l75\n"
"        ior r2.x___, r2.x, r2.w\n"
"        cmov_logical r7.__z_, r4.y, r1.z, r2.x\n"
"        \n"
"        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r8.x___, r6.x, l76\n"
"        \n"
"        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ishl r6.__z_, l77, r3.y\n"
"        \n"
"        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6.___w, r6.z, l78\n"
"        \n"
"        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF\n"
"        mov r8._yzw, l79\n"
"        cmov_logical r6, r6.y, r6, r8\n"
"        \n"
"        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.__z_, r6.y, l80\n"
"        \n"
"        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r1.__z_, l81, r1.z\n"
"        \n"
"        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r2.x___, r1.z, l82\n"
"        switch r6.x\n"
"        case  0\n"
"        and r3.x___, r1.w, r1.z\n"
"        \n"
"        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"        \n"
"        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l83, l84\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"            \n"
"            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l85\n"
"            \n"
"            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l86\n"
"            \n"
"            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.zzwz_neg(xyzw), l87\n"
"            \n"
"            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r11.x___, r2.y_neg(xyzw), l88\n"
"            and r3._y__, r1.w, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.x___, r2.y\n"
"            mov r11._yz_, r3.zzwz\n"
"            mov r3._y__, r1.w\n"
"        endif\n"
"        and r8.x___, r2.x, r3.y\n"
"        mov r8._yzw, r11.xxyz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  1\n"
"        and r3.x___, r2.y, r1.z\n"
"        \n"
"        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"        \n"
"        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l89, l90\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"            \n"
"            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l91\n"
"            \n"
"            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l92\n"
"            \n"
"            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.wwzw_neg(xyzw), l93\n"
"            and r3._y__, r2.y, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"            mov r11.xy__, r11.zyzz\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.xy__, r3.zwzz\n"
"            mov r3._y__, r2.y\n"
"        endif\n"
"        and r11.__z_, r2.x, r3.y\n"
"        \n"
"        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l94\n"
"        mov r8, r11.wzxy\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  2\n"
"        and r3.x___, r3.z, r1.z\n"
"        \n"
"        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l95, l96\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97\n"
"        \n"
"        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6._y__, r3.w_neg(xyzw), l98\n"
"        and r4._y__, r3.z, r6.w\n"
"        iadd r6.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r5.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r5\n"
"        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz\n"
"        and r11.x___, r2.x, r11.y\n"
"        \n"
"        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l99\n"
"        mov r8, r11.wwxz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  3\n"
"        and r3.x___, r3.w, r1.z\n"
"        \n"
"        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l100, l101\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102\n"
"        and r4._y__, r3.w, r6.w\n"
"        iadd r4._y__, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        cmov_logical r3.x___, r3.x, r4.y, r3.w\n"
"        and r11.___w, r2.x, r3.x\n"
"        \n"
"        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.xyz_, l103\n"
"        mov r8, r11\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  4\n"
"        and r3.x___, r5.x, r1.z\n"
"        \n"
"        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l104, l105\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10._yz_, r5.yyzy_neg(xyzw), l106\n"
"        and r4._y__, r5.x, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        and r3.x___, r2.x, r10.x\n"
"        \n"
"        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l107\n"
"        mov r9._yzw, r10.yyzw\n"
"        mov r9.x___, r3.x\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  5\n"
"        and r3.x___, r5.y, r1.z\n"
"        \n"
"        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l108, l109\n"
"        inegate r10.__z_, r4.x\n"
"        \n"
"        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r10._y__, r5.z_neg(xyzw), l110\n"
"        and r4._y__, r5.y, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r4.__zw, r5.yyyz\n"
"        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx\n"
"        and r10._y__, r2.x, r10.x\n"
"        \n"
"        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.x___, l111\n"
"        \n"
"        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l112\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  6\n"
"        and r3.x___, r5.z, r1.z\n"
"        \n"
"        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l113, l114\n"
"        inegate r4.__z_, r4.x\n"
"        and r4.___w, r5.z, r6.w\n"
"        iadd r4._y__, r6.w, r4.w_neg(xyzw)\n"
"        mov r6.x___, r5.z\n"
"        mov r6._y__, r4.x\n"
"        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx\n"
"        and r10.x___, r2.x, r10.y\n"
"        \n"
"        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.___w, l115\n"
"        \n"
"        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l116\n"
"        mov r9, r10.wwxz\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  7\n"
"        and r1.__z_, r4.x, r1.z\n"
"        \n"
"        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.x___, r1.z, l117, l118\n"
"        and r3._y__, r4.x, r6.w\n"
"        iadd r3._y__, r6.z, r3.y_neg(xyzw)\n"
"        cmov_logical r1.__z_, r1.z, r3.y, r4.x\n"
"        and r6.___w, r2.x, r1.z\n"
"        \n"
"        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r6.xyz_, l119\n"
"        \n"
"        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l120\n"
"        mov r9, r6\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        default\n"
"        mov r8.__zw, r3.zzzw\n"
"        mov r8._y__, r2.y\n"
"        mov r8.x___, r1.w\n"
"        mov r9.___w, r4.x\n"
"        mov r9.xyz_, r5.xyzx\n"
"        \n"
"        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r2.___w, l121\n"
"        break\n"
"        endswitch\n"
"        mov r3, r8\n"
"        mov r4, r9\n"
"        mov r1.__z_, r2.w\n"
"        \n"
"        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r5, r3, l122\n"
"        \n"
"        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r5, r5, l123\n"
"        \n"
"        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r6, r5, l124\n"
"        \n"
"        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r6, r6, l125\n"
"        \n"
"        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l126\n"
"        \n"
"        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r6, l127, r6_neg(xyzw)\n"
"        \n"
"        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l128\n"
"        \n"
"        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r6, r6, l129\n"
"        \n"
"        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r6, r6, l130\n"
"        \n"
"        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r5, r5, r6, l131\n"
"        \n"
"        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r3, l132\n"
"        \n"
"        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l133\n"
"        \n"
"        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l134\n"
"        \n"
"        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l135\n"
"        \n"
"        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l136, r8_neg(xyzw)\n"
"        \n"
"        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l137\n"
"        \n"
"        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l138\n"
"        \n"
"        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l139\n"
"        \n"
"        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l140\n"
"        \n"
"        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r8, r5, l141\n"
"        iadd r6, r5, r6\n"
"        cmov_logical r5, r8, r6, r5\n"
"        \n"
"        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6, r4, l142\n"
"        \n"
"        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r6, l143\n"
"        \n"
"        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l144\n"
"        \n"
"        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l145\n"
"        \n"
"        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l146\n"
"        \n"
"        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l147, r8_neg(xyzw)\n"
"        \n"
"        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l148\n"
"        \n"
"        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l149\n"
"        \n"
"        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l150\n"
"        \n"
"        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l151\n"
"        \n"
"        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r8, r4, l152\n"
"        \n"
"        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r9, r8, l153\n"
"        \n"
"        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r9, r9, l154\n"
"        \n"
"        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l155\n"
"        \n"
"        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r9, l156, r9_neg(xyzw)\n"
"        \n"
"        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l157\n"
"        \n"
"        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r9, r9, l158\n"
"        \n"
"        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r9, r9, l159\n"
"        \n"
"        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r8, r8, r9, l160\n"
"        \n"
"        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r9, r6, l161\n"
"        iadd r8, r6, r8\n"
"        cmov_logical r6, r9, r8, r6\n"
"        \n"
"        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"        ieq r1.___w, r5.x, l162\n"
"        \n"
"        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060\n"
"        iadd r2.xy_w, r5.yzyw, l163\n"
"        cmov_logical r1.___w, r1.w, r2.x, r5.x\n"
"        \n"
"        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"        ieq r2.x___, r1.w, l164\n"
"        cmov_logical r1.___w, r2.x, r2.y, r1.w\n"
"        \n"
"        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060\n"
"        ieq r2.x___, r1.w, l165\n"
"        cmov_logical r1.___w, r2.x, r2.w, r1.w\n"
"        \n"
"        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"        ieq r2.x___, r1.w, l166\n"
"        \n"
"        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0\n"
"        iadd r5, r6, l167\n"
"        cmov_logical r1.___w, r2.x, r5.x, r1.w\n"
"        \n"
"        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0\n"
"        ieq r2.x___, r1.w, l168\n"
"        cmov_logical r1.___w, r2.x, r5.y, r1.w\n"
"        \n"
"        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0\n"
"        ieq r2.x___, r1.w, l169\n"
"        cmov_logical r1.___w, r2.x, r5.z, r1.w\n"
"        \n"
"        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0\n"
"        ieq r2.x___, r1.w, l170\n"
"        cmov_logical r1.___w, r2.x, r5.w, r1.w\n"
"        \n"
"        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishr r2.x___, r1.w, l171\n"
"        \n"
"        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r2._y__, r2.x, l172\n"
"        iadd r2._y__, r1.w, r2.y_neg(xyzw)\n"
"        iadd r1.___w, r2.z, r1.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l173, r2.x\n"
"        \n"
"        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r5, r2.x, l174\n"
"        inegate r2.__z_, r5.x\n"
"        \n"
"        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r6.x__w, r5.y, l175\n"
"        \n"
"        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r6._y__, r5.z, l176\n"
"        \n"
"        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r6.__z_, r5.w, l177\n"
"        inegate r5, r6\n"
"        \n"
"        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r6, r2.x, l178\n"
"        \n"
"        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r8.x___, r6.x, l179\n"
"        \n"
"        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r8._y__, r6.y, l180\n"
"        \n"
"        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006\n"
"        ushr r8.__z_, r6.z, l181\n"
"        \n"
"        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007\n"
"        ushr r8.___w, r6.w, l182\n"
"        inegate r6, r8\n"
"        and r2.x__w, r3.xxxy, r2.z\n"
"        and r8, r3.yzwz, r5\n"
"        ior r2.x__w, r2.xxxw, r8.xxxw\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        and r8, r4, r6\n"
"        ior r2.x___, r2.x, r8.x\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        ior r8._y_w, r8.w, r2.x\n"
"        and r2.x___, r3.w, r5.y\n"
"        ior r2.x___, r2.w, r2.x\n"
"        and r2.___w, r4.x, r5.z\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r9.xyz_, r4.yzwy, r6.xyzx\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.y, r2.x\n"
"        ior r8.x___, r9.z, r2.x\n"
"        \n"
"        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r2.y, l183\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r8.y, r2.y\n"
"            ushr r2.x___, r2.x, r2.y\n"
"            \n"
"            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2.___w, l184, r2.y_neg(xyzw)\n"
"            ushr r8.___w, r2.x, r2.w\n"
"            \n"
"            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"            iadd r3._y__, r2.y, l185\n"
"            ishl r2.x___, r2.x, r3.y\n"
"            ushr r3.x___, r2.x, r3.y\n"
"        else\n"
"            and r2.x___, r3.z, r2.z\n"
"            and r2.__z_, r3.w, r5.w\n"
"            ior r2.x___, r2.x, r2.z\n"
"            and r2.__zw, r4.xxxy, r5.yyyz\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r2.x___, r2.w, r2.x\n"
"            and r2.__zw, r4.zzzw, r6.xxxy\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r4._y__, r2.w, r2.x\n"
"            \n"
"            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.x___, l186, r2.y\n"
"            \n"
"            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000\n"
"            iadd r4.x_z_, r2.y, l187\n"
"            ishl r2.__z_, r8.y, r4.x\n"
"            ishl r2.___w, r8.x, r4.z\n"
"            \n"
"            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r2._y__, l188, r2.y_neg(xyzw)\n"
"            ushr r2._y__, r8.x, r2.y\n"
"            ior r4.___w, r2.z, r2.y\n"
"            ushr r4.x___, r2.w, r4.z\n"
"            \n"
"            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"            mov r8.__z_, l189\n"
"            cmov_logical r8, r2.x, r4.yxzw, r8\n"
"            mov r3.xy__, r8.yzyy\n"
"        endif\n"
"        \n"
"        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r2.xy__, r8.w, l190\n"
"        \n"
"        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.___w, r8.w, l191\n"
"        \n"
"        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.___w, r2.w, l192\n"
"        \n"
"        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l193\n"
"        \n"
"        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.___w, l194, r2.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l195\n"
"        \n"
"        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.___w, r2.w, l196\n"
"        inegate r8._y__, r2.w\n"
"        \n"
"        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r2.__z_, l197\n"
"        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww\n"
"        iadd r2._y__, r1.w, r2.y\n"
"        \n"
"        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r2._y__, r2.y, l198\n"
"        \n"
"        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r2._y__, r2.y, l199\n"
"        ior r7.x___, r2.x, r2.y\n"
"        \n"
"        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r3.y, l200\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r3.x, r3.y\n"
"            ushr r2.x___, r2.x, r3.y\n"
"            \n"
"            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2._y__, l201, r3.y_neg(xyzw)\n"
"            ushr r2.x___, r2.x, r2.y\n"
"        else\n"
"            \n"
"            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.__z_, l202, r3.y\n"
"            \n"
"            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"            iadd r2.___w, r3.y, l203\n"
"            ishl r2.___w, r3.x, r2.w\n"
"            \n"
"            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r3._y__, l204, r3.y_neg(xyzw)\n"
"            ushr r3._y__, r8.x, r3.y\n"
"            ior r2.___w, r2.w, r3.y\n"
"            cmov_logical r2.x___, r2.z, r2.w, r3.x\n"
"        endif\n"
"        \n"
"        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r1.___w, r1.w, l205\n"
"        \n"
"        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r3.xy__, r2.x, l206\n"
"        \n"
"        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.__z_, r2.x, l207\n"
"        \n"
"        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.__z_, r2.z, l208\n"
"        \n"
"        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l209\n"
"        \n"
"        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.__z_, l210, r2.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l211\n"
"        \n"
"        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.__z_, r2.z, l212\n"
"        inegate r2._y__, r2.z\n"
"        \n"
"        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r3.__z_, l213\n"
"        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx\n"
"        iadd r1.___w, r1.w, r2.z\n"
"        \n"
"        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r1.___w, r1.w, l214\n"
"        \n"
"        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.___w, r1.w, l215\n"
"        ior r1.___w, r2.y, r1.w\n"
"        \n"
"        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r7._y__, r2.x, r1.w, l216\n"
"        \n"
"        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r7.z, l217\n"
"        mov r2.xy__, r7.xyxx_neg(xyzw)\n"
"        cmov_logical r2.xyz_, r1.z, r2.xyzx, r7.xyzx\n"
"        \n"
"        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003\n"
"        and r1.__zw, r2.xxxz, l218\n"
"        add r2.__z_, r2.x, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mul_ieee r1.x___, r2.x, l219\n"
"        \n"
"        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r2.x___, r1.z, l220, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.__z_, r1.z, l221, r2.x\n"
"        \n"
"        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r1.__z_, r2.z, l222, r1.z\n"
"        \n"
"        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.__z_, r2.z, l223, r1.z\n"
"        utof r0.___w, r1.w\n"
"        \n"
"        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mad_ieee r1._y__, r2.y, l224, r1.z\n"
"    endif\n"
"    mul_ieee r1.__zw, r1.xxxy, r1.x\n"
"    mul_ieee r2.x___, r1.x, r1.z\n"
"    \n"
"    dcl_literal l225, 0x00000000, 0x2F2EC9D3, 0xAD47D74E, 0x00000000\n"
"    \n"
"    dcl_literal l226, 0x00000000, 0xB2D72F34, 0x310F74F6, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, l225, l226\n"
"    \n"
"    dcl_literal l227, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, r2.yyzy, l227\n"
"    \n"
"    dcl_literal l228, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, r2.yyzy, l228\n"
"    \n"
"    dcl_literal l229, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, r2.yyzy, l229\n"
"    mul_ieee r2._y__, r2.x, r2.y\n"
"    \n"
"    dcl_literal l230, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r2._y__, r1.y, l230, r2.y_neg(xyzw)\n"
"    mad_ieee r1._y__, r1.z, r2.y, r1.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l231, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB\n"
"    mad_ieee r1._y__, r2.x_neg(xyzw), l231, r1.y\n"
"    add r1._y__, r1.x, r1.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l232, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB\n"
"    mad_ieee r2.x___, r1.z, r2.z, l232\n"
"    mul_ieee r2._y__, r1.z, r1.z\n"
"    \n"
"    dcl_literal l233, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r1.x___, r1.x, l233\n"
"    \n"
"    dcl_literal l234, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A\n"
"    ige r2.__z_, r1.x, l234\n"
"    \n"
"    dcl_literal l235, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ige r2.___w, l235, r1.x\n"
"    and r2.__z_, r2.z, r2.w\n"
"    \n"
"    dcl_literal l236, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000\n"
"    iadd r2.___w, r1.x, l236\n"
"    and r2.__z_, r2.z, r2.w\n"
"    \n"
"    dcl_literal l237, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ilt r1.x___, l237, r1.x\n"
"    \n"
"    dcl_literal l238, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000\n"
"    cmov_logical r1.x___, r1.x, l238, r2.z\n"
"    \n"
"    dcl_literal l239, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1.__z_, r1.z, l239, r1.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l240, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1.x___, r1.x_neg(xyzw), l240\n"
"    mad_ieee r1.___w, r2.x, r2.y, r1.w_neg(xyzw)\n"
"    add r1.__z_, r1.z, r1.w_neg(xyzw)\n"
"    add r1.x___, r1.x, r1.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l241, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"    eq r2, r0.w, l241\n"
"    and r0.___w, r1.x, r2.x\n"
"    cmov_logical r0.___w, r2.y, r1.y_neg(xyzw), r0.w\n"
"    cmov_logical r0.___w, r2.z, r1.x_neg(xyzw), r0.w\n"
"    cmov_logical r0.__z_, r2.w, r1.y, r0.w\n"
"endif\n"
"\n"
"dcl_literal l242, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l242\n"
"\n"
"dcl_literal l243, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.__z_, r0.w, l243, r0.z\n"
"\n"
"dcl_literal l244, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l244, r0.y\n"
"\n"
"dcl_literal l245, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l245\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__cross_4f32",
"mdef(193)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, r0\n"
"mov r0, r1\n"
"mov r1, r2\n"
"\n"
"dcl_literal l1, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0x00000000\n"
"and r2.xyz_, r1.yzxy, l1\n"
"mul_ieee r3.xyz_, r0.yzxy, r1.zxyz\n"
"\n"
"dcl_literal l2, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0x00000000\n"
"and r4.xyz_, r0.yzxy, l2\n"
"mad_ieee r5.xyz_, r4.xyzx, r2.yzxy, r3.xyzx_neg(xyzw)\n"
"add r6.xyz_, r1.yzxy, r2.xyzx_neg(xyzw)\n"
"mad_ieee r5.xyz_, r4.xyzx, r6.yzxy, r5.xyzx\n"
"add r4.xyz_, r0.yzxy, r4.xyzx_neg(xyzw)\n"
"mov r0.xyz_, r0.zxyz_neg(xyzw)\n"
"mad_ieee r5.xyz_, r4.xyzx, r2.yzxy, r5.xyzx\n"
"mad_ieee r4.xyz_, r4.xyzx, r6.yzxy, r5.xyzx\n"
"mul_ieee r1.xyz_, r0.xyzx, r1.yzxy\n"
"\n"
"dcl_literal l3, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0x00000000\n"
"and r5.xyz_, r0.xyzx, l3\n"
"add r0.xyz_, r0.xyzx, r5.xyzx_neg(xyzw)\n"
"mad_ieee r7.xyz_, r5.xyzx, r2.xyzx, r1.xyzx_neg(xyzw)\n"
"mad_ieee r5.xyz_, r5.xyzx, r6.xyzx, r7.xyzx\n"
"mad_ieee r2.xyz_, r0.xyzx, r2.xyzx, r5.xyzx\n"
"mad_ieee r0.xyz_, r0.xyzx, r6.xyzx, r2.xyzx\n"
"add r0.xyz_, r4.xyzx, r0.xyzx\n"
"add r2.xyz_, r3.xyzx, r1.xyzx\n"
"add r4.xyz_, r3.xyzx, r2.xyzx_neg(xyzw)\n"
"add r4.xyz_, r1.xyzx, r4.xyzx\n"
"add r5.xyz_, r1.xyzx, r2.xyzx_neg(xyzw)\n"
"lt r1.xyz_, r1.xyzx_abs, r3.xyzx_abs\n"
"add r3.xyz_, r3.xyzx, r5.xyzx\n"
"cmov_logical r1.xyz_, r1.xyzx, r4.xyzx, r3.xyzx\n"
"add r0.xyz_, r0.xyzx, r1.xyzx\n"
"add r0.xyz_, r2.xyzx, r0.xyzx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ddiv_f64",
"mdef(194)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l9, 12, 2, 0x7ff00000, 0x00100000\n"
"ixor r2.x, r0.y, r1.y\n"
"dadd r0.xy, r0.xy, r0.00\n"
"dadd r1.xy, r1.xy, r1.00\n"
"ige r3.x, r0.y_abs, l9.z\n"
"ige r3.y, r1.y_abs, l9.z\n"
"ilt r3.z, r0.y_abs, l9.w\n"
"ilt r3.w, r1.y_abs, l9.w\n"
"ixor r2.x, r2.x_abs, r2.x\n"
"dfrexp r20, r0\n"
"dfrexp r21, r1\n"
"ishl r0.z, r0.y, l9.x\n"
"ishl r1.z, r1.y, l9.x\n"
"ior r0.z, r0.z, r0.x\n"
"ior r1.z, r1.z, r1.x\n"
"ieq r0.z, r0.z, r0.0\n"
"ieq r1.z, r1.z, r0.0\n"
"mov r20.w, r20.wwww_abs\n"
"mov r21.w, r21.wwww_abs\n"
"dcl_literal l2, 0x16f0068e, 0x40075048, 0x00000000, 0xc0000000 \n"
"dmad r22.xy, l2.zw, r21.zw, l2.xy\n"
"dmad r23.xy, r21.zw, r22.xy, l2.zw\n"
"dmul r22.xy, r22.xy, r23.xy_neg(yw)\n"
"dmad r23.xy, r21.zw, r22.xy, l2.zw\n"
"dmul r22.xy, r22.xy, r23.xy_neg(yw)\n"
"dmad r23.xy, r21.zw, r22.xy, l2.zw\n"
"dmul r22.xy, r22.xy, r23.xy_neg(yw)\n"
"dmad r23.xy, r21.zw, r22.xy, l2.zw\n"
"dmul r22.xy, r22.xy, r23.xy_neg(yw)\n"
"dcl_literal l6, 0x80000000, 0x7fffffff, 0xf8000000, 0xffffffff \n"
"and r24.xy, r21.zw, l6.zwzw\n"
"dadd r25.xy, r21.zw, r24.xy_neg(yw)\n"
"dmul r26.xy, r22.xy, r20.zw\n"
"and r26.xy, r26.xy, l6.zwzw\n"
"dmad r20.zw, r26.xy, r24.xy_neg(yw), r20.zw\n"
"dmad r20.zw, r26.xy, r25.xy_neg(yw), r20.zw\n"
"dmul r27.xy, r22.xy, r20.zw\n"
"and r27.xy, r27.xy, l6.zwzw\n"
"dmad r20.zw, r27.xy, r24.xy_neg(yw), r20.zw\n"
"dmad r20.zw, r27.xy, r25.xy_neg(yw), r20.zw\n"
"dmul r28.xy, r22.xy, r20.zw\n"
"and r28.xy, r28.xy, l6.zwzw\n"
"dmad r20.zw, r28.xy, r24.xy_neg(yw), r20.zw\n"
"dmad r20.zw, r28.xy, r25.xy_neg(yw), r20.zw\n"
"dmul r29.xy, r22.xy, r20.zw\n"
"dadd r25.xy, r26.xy, r27.xy\n"
"dadd r26.xy, r25.xy, r26.xy_neg(yw)\n"
"dadd r27.xy, r27.xy, r26.xy_neg(yw)\n"
"dadd r26.xy, r27.xy, r28.xy\n"
"dadd r27.xy, r26.xy, r27.xy_neg(yw)\n"
"dadd r28.xy, r28.xy, r27.xy_neg(yw)\n"
"dadd r27.xy, r28.xy, r29.xy\n"
"dadd r28.xy, r27.xy, r28.xy_neg(yw)\n"
"dadd r28.xy, r29.xy, r28.xy_neg(yw)\n"
"dadd r24.xy, r25.xy, r26.xy\n"
"dadd r25.xy, r24.xy, r25.xy_neg(yw)\n"
"dadd r26.xy, r26.xy, r25.xy_neg(yw)\n"
"dadd r25.xy, r26.xy, r27.xy\n"
"dadd r26.xy, r25.xy, r26.xy_neg(yw)\n"
"dadd r27.xy, r27.xy, r26.xy_neg(yw)\n"
"dadd r26.xy, r27.xy, r28.xy\n"
"dadd r25.xy, r25.xy, r26.xy\n"
"ior r25.x, r25.x, l6.w\n"
"dadd r10.xy, r24.xy, r25.xy\n"
"imad r4.x, r3.x, l9.y, r3.z\n"
"imad r4.y, r3.y, l9.y, r3.w\n"
"imad r4.x, r4.x, l9.y, r0.z\n"
"imad r4.y, r4.y, l9.y, r1.z\n"
"ishl r4.x, r4.x, l9.y\n"
"ishl r4.y, r4.y, l9.y\n"
"dcl_literal l7, 0x80008000, 0x66ff66ff, 0x26f326f3, 52\n"
"dcl_literal l8, 0x0048c000, 0x00123000, 0x80000000, 31\n"
"ushr r4.z, l8.x, r4.x\n"
"ushr r4.w, l8.y, r4.y\n"
"ior r4.w, r4.w, r4.z\n"
"ishl r5.x, l7.x, r4.w\n"
"ishl r5.y, l7.y, r4.w\n"
"ishl r5.z, l7.z, r4.w\n"
"ishr r5.x, r5.x, l8.w\n"
"ishr r5.y, r5.y, l8.w\n"
"ishr r5.z, r5.z, l8.w\n"
"ishl r5.y, r5.y, l7.w\n"
"inegate r21.y, r21.y\n"
"iadd r20.y, r20.y, r21.y\n"
"dldexp r10.xy, r10.xy, r20.y\n"
"and r10.xy, r10.xy, r5.xx\n"
"ior r10.y, r10.y, r5.y_abs\n"
"ior r10.x, r10.x, r5.z\n"
"ixor r10.y, r10.y_abs, r2.x\n"
"mov r0.xy, r10.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ddiv_f64_fma",
"mdef(195)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l9, 12, 2, 0x7ff00000, 0x00100000\n"
"ixor r2.x, r0.y, r1.y\n"
"ige r3.x, r0.y_abs, l9.z\n"
"ige r3.y, r1.y_abs, l9.z\n"
"ilt r3.z, r0.y_abs, l9.w\n"
"ilt r3.w, r1.y_abs, l9.w\n"
"ixor r2.x, r2.x_abs, r2.x\n"
"dfrexp r20, r0\n"
"dfrexp r21, r1\n"
"ishl r0.z, r0.y, l9.x\n"
"ishl r1.z, r1.y, l9.x\n"
"ior r0.z, r0.z, r0.x\n"
"ior r1.z, r1.z, r1.x\n"
"ieq r0.z, r0.z, r0.0\n"
"ieq r1.z, r1.z, r0.0\n"
"mov r20.w, r20.wwww_abs\n"
"mov r21.w, r21.wwww_abs\n"
"dcl_literal l1, 0x00000000, 0x3ff00000, 0x00000001, 0 \n"
"dcl_literal l2, 0x16f0068e, 0x40075048, 0x00000000, 0xc0000000 \n"
"dcl_literal l3, 0x00040000, 0x00000300, 0, 0 \n"
"drcp_zeroop(zero) r22.xy, r21.zw\n"
"dmad r23.xy, r21.zw, r22.xy, l2.zw\n"
"dmul r22.xy, r22.xy, r23.xy_neg(yw)\n"
"dmad r23.xy, r21.zw, r22.xy, l2.zw\n"
"dmul r22.xy, r22.xy, r23.xy_neg(yw)\n"
"dcl_literal l6, 0x80000000, 0x7fffffff, 0xf8000000, 0xffffffff \n"
"dmul r10.xy, r22.xy, r20.zw\n"
"dmad r23.xy, r21.zw, r10.xy_neg(yw), r20.zw\n"
"dmad r10.xy, r22.xy, r23.xy, r10.xy\n"
"dmad r23.xy, r21.zw, r22.xy_neg(yw), l1.xy\n"
"dmul r23.xy, r23.xy, r22.xy\n"
"dmad r24.xy, r21.zw, r10.xy_neg(yw), r20.zw\n"
"dmul r25.xy, r23.xy, r24.xy\n"
"dmad r23.xy, r22.xy, r24.xy, r25.xy\n"
"ior r23.y, r23.y, l3.x\n"
"inegate r21.y, r21.y\n"
"iadd r20.x, r20.y, r21.y\n"
"imin r20.y, r20.x, l3.y\n"
"inegate r21.y, r20.y\n"
"iadd r20.x, r20.x, r21.y\n"
"dldexp r11.xy, r10.xy, r20.y\n"
"dldexp r12.xy, r11.xy, r21.y\n"
"dadd r10.xy, r10.xy, r12.xy_neg(yw)\n"
"dadd r10.xy, r10.xy, r23.xy\n"
"dldexp r12.xy, l1.xy, r20.y\n"
"dmad r10.xy, r10.xy, r12.xy, r11.xy\n"
"dldexp r10.xy, r10.xy, r20.x\n"
"imad r4.x, r3.x, l9.y, r3.z\n"
"imad r4.y, r3.y, l9.y, r3.w\n"
"imad r4.x, r4.x, l9.y, r0.z\n"
"imad r4.y, r4.y, l9.y, r1.z\n"
"ishl r4.x, r4.x, l9.y\n"
"ishl r4.y, r4.y, l9.y\n"
"dcl_literal l7, 0x80008000, 0x66ff66ff, 0x26f326f3, 52\n"
"dcl_literal l8, 0x0048c000, 0x00123000, 0x80000000, 31\n"
"ushr r4.z, l8.x, r4.x\n"
"ushr r4.w, l8.y, r4.y\n"
"ior r4.w, r4.w, r4.z\n"
"ishl r5.x, l7.x, r4.w\n"
"ishl r5.y, l7.y, r4.w\n"
"ishl r5.z, l7.z, r4.w\n"
"ishr r5.x, r5.x, l8.w\n"
"ishr r5.y, r5.y, l8.w\n"
"ishr r5.z, r5.z, l8.w\n"
"ishl r5.y, r5.y, l7.w\n"
"and r10.xy, r10.xy, r5.xx\n"
"ior r10.y, r10.y, r5.y_abs\n"
"ior r10.x, r10.x, r5.z\n"
"ixor r10.y, r10.y_abs, r2.x\n"
"mov r0.xy, r10.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__degrees_f32",
"mdef(196)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x42652EE1, 0x00000000, 0x00000000, 0x00000000\n"
"mul_ieee r0.x___, r0.x, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__distance_2f32",
"mdef(197)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"add r2._yz_, r0.xxyx, r1.xxyx_neg(xyzw)\n"
"dp2_ieee r2._y__, r2.yzyy, r2.yzyy\n"
"sqrt_vec r0.x___, r2.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__distance_4f32",
"mdef(198)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"add r0, r0, r1_neg(xyzw)\n"
"dp2_ieee r0.x___, r0.xyxx, r0.xyxx\n"
"mad_ieee r0.x___, r0.z, r0.z, r0.x\n"
"mad_ieee r0.x___, r0.w, r0.w, r0.x\n"
"sqrt_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__distance_f32",
"mdef(199)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"add r2._y__, r0.x, r1.x_neg(xyzw)\n"
"mov r0.x___, r2.y_abs\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__dot_2f32",
"mdef(200)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dp2_ieee r0.x___, r1.xyxx, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__dot_3f32",
"mdef(201)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dp2_ieee r0.x___, r1.xyxx, r0.xyxx\n"
"mad_ieee r0.x___, r1.z, r0.z, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__dot_4f32",
"mdef(202)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dp2_ieee r0.x___, r1.xyxx, r0.xyxx\n"
"mad_ieee r0.x___, r1.z, r0.z, r0.x\n"
"mad_ieee r0.x___, r1.w, r0.w, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__dot_f32",
"mdef(203)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mul_ieee r0.x___, r1.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__erfc_f32",
"mdef(204)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.__z_, r0.x_neg(xyzw), l1\n"
"mul_ieee r0.___w, r0.x, r0.x\n"
"\n"
"dcl_literal l2, 0xB7C756B1, 0xB684E21A, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l3, 0xBBBD1489, 0x390AEE49, 0x00000000, 0x00000000\n"
"mad_ieee r1.xy__, r0.w, l2, l3\n"
"\n"
"dcl_literal l4, 0xBCE9528F, 0x3BA68116, 0x00000000, 0x00000000\n"
"mad_ieee r1.xy__, r0.w, r1.xyxx, l4\n"
"\n"
"dcl_literal l5, 0xBEA66BEB, 0x3D852A63, 0x00000000, 0x00000000\n"
"mad_ieee r1.xy__, r0.w, r1.xyxx, l5\n"
"\n"
"dcl_literal l6, 0x3E0375D4, 0x3ECBBBCE, 0x00000000, 0x00000000\n"
"mad_ieee r1.xy__, r0.w, r1.xyxx, l6\n"
"\n"
"dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r0.___w, r0.w, r1.y, l7\n"
"div_zeroop(infinity) r0.___w, r1.x, r0.w\n"
"mad_ieee r1.x___, r0.x, r0.w, r0.x\n"
"\n"
"dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.x___, r1.x_neg(xyzw), l8\n"
"\n"
"\n"
"dcl_literal l9, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"add r1._y__, r0.x, l9\n"
"mad_ieee r0.___w, r0.x, r0.w, r1.y\n"
"add r0.___w, r0.w_neg(xyzw), l10\n"
"\n"
"mov r1._y__, r0.x_abs\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r1.__z_, l11, r1.z\n"
"\n"
"dcl_literal l12, 0xC11D077E, 0xBD777F97, 0xC3F1C275, 0xC1B38712\n"
"\n"
"dcl_literal l13, 0xC2A2932B, 0x40D23F7C, 0xC480230B, 0x43ED43A7\n"
"mad_ieee r2, r1.z, l12, l13\n"
"\n"
"dcl_literal l14, 0xC3389AE7, 0x42D9451F, 0xC41F6441, 0x451F90CE\n"
"mad_ieee r2, r1.z, r2, l14\n"
"\n"
"dcl_literal l15, 0xC322658C, 0x43D6810B, 0xC320A2EA, 0x4547FDBB\n"
"mad_ieee r2, r1.z, r2, l15\n"
"\n"
"dcl_literal l16, 0xC2798057, 0x442158C9, 0xC18E104B, 0x44C01759\n"
"mad_ieee r2, r1.z, r2, l16\n"
"\n"
"dcl_literal l17, 0xC128F022, 0x43D9486F, 0xBF4C9DD4, 0x43A2E571\n"
"mad_ieee r2, r1.z, r2, l17\n"
"\n"
"dcl_literal l18, 0xBF31A0B7, 0x4309A863, 0xBC21A092, 0x41F2B459\n"
"mad_ieee r2, r1.z, r2, l18\n"
"\n"
"dcl_literal l19, 0xBC21A093, 0x419D35CE, 0x00000000, 0x3F800000\n"
"mad_ieee r2.xy_w, r1.z, r2.xyxw, l19\n"
"\n"
"dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r1.__z_, r1.z, r2.y, l20\n"
"div_zeroop(infinity) r1.__z_, r2.x, r1.z\n"
"div_zeroop(infinity) r1.___w, r2.z, r2.w\n"
"\n"
"dcl_literal l21, 0x4036DB6D, 0x3F580000, 0x41E00000, 0x00000000\n"
"ilt r2.xyz_, r0.y, l21\n"
"cmov_logical r1.__z_, r2.x, r1.z, r1.w\n"
"\n"
"dcl_literal l22, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r1.___w, r1.y, l22\n"
"\n"
"dcl_literal l23, 0xBF100000, 0x41770000, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r1.w_neg(xyzw), r1.w, l23\n"
"\n"
"dcl_literal l24, 0xC1800000, 0xC1800000, 0xC1800000, 0xC1800000\n"
"lt r2.x___, r3.x, l24\n"
"\n"
"dcl_literal l25, 0x00000000, 0x00000000, 0x33F1AADE, 0x3F800000\n"
"mov r3.__zw, l25\n"
"cmov_logical r2.x__w, r2.x, r3.yyyz, r3.xxxw\n"
"\n"
"dcl_literal l26, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r3.x___, r2.x, l26\n"
"\n"
"dcl_literal l27, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l28, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r3.x___, r3.x, l27, l28\n"
"\n"
"dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r3.x___, r2.x, l29, r3.x\n"
"round_z r3.x___, r3.x\n"
"\n"
"dcl_literal l30, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2.x___, r3.x_neg(xyzw), l30, r2.x\n"
"\n"
"dcl_literal l31, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3._y__, r3.x_neg(xyzw), l31, r2.x\n"
"mul_ieee r3.__z_, r3.y, r3.y\n"
"\n"
"dcl_literal l32, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l33, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r3.___w, r3.z, l32, l33\n"
"\n"
"dcl_literal l34, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r3.___w, r3.z, r3.w, l34\n"
"\n"
"dcl_literal l35, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r3.___w, r3.z, r3.w, l35\n"
"\n"
"dcl_literal l36, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3.___w, r3.z, r3.w, l36\n"
"mad_ieee r3.__z_, r3.z_neg(xyzw), r3.w, r3.y\n"
"mul_ieee r3._y__, r3.y, r3.z\n"
"\n"
"dcl_literal l37, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r3.__z_, r3.z_neg(xyzw), l37\n"
"div_zeroop(infinity) r3._y__, r3.y, r3.z\n"
"\n"
"dcl_literal l38, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3._y__, r3.x, l38, r3.y_neg(xyzw)\n"
"add r2.x___, r2.x_neg(xyzw), r3.y\n"
"\n"
"dcl_literal l39, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.x___, r2.x_neg(xyzw), l39\n"
"ftoi r3.x___, r3.x\n"
"\n"
"dcl_literal l40, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r3._yzw, r2.x, l40\n"
"if_logicalz r3.z\n"
"    itof r4.x___, r3.w\n"
"    \n"
"    dcl_literal l41, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r4.x, l41\n"
"    \n"
"    dcl_literal l42, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4.x___, r4.x, l42\n"
"    iadd r4.x___, r4.x, r3.x\n"
"    \n"
"    dcl_literal l43, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4._y__, r4.y, l43\n"
"    \n"
"    dcl_literal l44, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r4.x___, l44, r4.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l45, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l45, r4.x\n"
"    \n"
"    dcl_literal l46, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r4.x___, r4.z, l46, r4.x\n"
"    \n"
"    dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.__z_, l47, r4.x\n"
"    ishr r4.___w, r4.y, r4.x\n"
"    inegate r4.x___, r4.x\n"
"    \n"
"    dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4.x___, r4.x, l48\n"
"    iadd r4.x___, r4.y, r4.x\n"
"    cmov_logical r4.x___, r4.z, r4.w, r4.x\n"
"else\n"
"    \n"
"    dcl_literal l49, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2.x___, r2.x, l49\n"
"    \n"
"    dcl_literal l50, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.__z_, r3.z, l50\n"
"    iadd r3.__z_, r3.z, r3.x\n"
"    \n"
"    dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.x___, r3.x, l51\n"
"    iadd r2.x___, r2.x, r3.x\n"
"    \n"
"    dcl_literal l52, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3.x___, r3.z, l52\n"
"    \n"
"    dcl_literal l53, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.__z_, l53, r3.x\n"
"    \n"
"    dcl_literal l54, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.x___, r3.z, l54, r2.x\n"
"    \n"
"    dcl_literal l55, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.x___, l55, r3.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l56, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.__z_, r3.w, l56\n"
"    \n"
"    dcl_literal l57, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"    ilt r4._yz_, l57, r3.x\n"
"    \n"
"    dcl_literal l58, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.x___, r4.z, l58, r3.x\n"
"    ishr r3.x___, r3.z, r3.x\n"
"    cmov_logical r4.x___, r4.y, r3.x, r2.x\n"
"endif\n"
"ior r2.x___, r3.y, r4.x\n"
"add r3.x___, r1.y_neg(xyzw), r1.w\n"
"add r1.___w, r1.y, r1.w\n"
"mad_ieee r1.__z_, r3.x, r1.w, r1.z\n"
"\n"
"dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1.___w, r1.z, l59\n"
"\n"
"dcl_literal l60, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l61, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r1.___w, r1.w, l60, l61\n"
"\n"
"dcl_literal l62, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r1.___w, r1.z, l62, r1.w\n"
"round_z r1.___w, r1.w\n"
"\n"
"dcl_literal l63, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r1.__z_, r1.w_neg(xyzw), l63, r1.z\n"
"\n"
"dcl_literal l64, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3.x___, r1.w_neg(xyzw), l64, r1.z\n"
"mul_ieee r3._y__, r3.x, r3.x\n"
"\n"
"dcl_literal l65, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l66, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r3.__z_, r3.y, l65, l66\n"
"\n"
"dcl_literal l67, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r3.__z_, r3.y, r3.z, l67\n"
"\n"
"dcl_literal l68, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r3.__z_, r3.y, r3.z, l68\n"
"\n"
"dcl_literal l69, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3.__z_, r3.y, r3.z, l69\n"
"mad_ieee r3._y__, r3.y_neg(xyzw), r3.z, r3.x\n"
"mul_ieee r3.x___, r3.x, r3.y\n"
"\n"
"dcl_literal l70, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r3._y__, r3.y_neg(xyzw), l70\n"
"div_zeroop(infinity) r3.x___, r3.x, r3.y\n"
"\n"
"dcl_literal l71, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3.x___, r1.w, l71, r3.x_neg(xyzw)\n"
"add r1.__z_, r1.z_neg(xyzw), r3.x\n"
"\n"
"dcl_literal l72, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.__z_, r1.z_neg(xyzw), l72\n"
"ftoi r3.x___, r1.w\n"
"\n"
"dcl_literal l73, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r3._yzw, r1.z, l73\n"
"if_logicalz r3.z\n"
"    itof r4.x___, r3.w\n"
"    \n"
"    dcl_literal l74, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r4.x, l74\n"
"    \n"
"    dcl_literal l75, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4.x___, r4.x, l75\n"
"    iadd r4.x___, r4.x, r3.x\n"
"    \n"
"    dcl_literal l76, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4._y__, r4.y, l76\n"
"    \n"
"    dcl_literal l77, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r4.x___, l77, r4.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l78, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l78, r4.x\n"
"    \n"
"    dcl_literal l79, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r4.x___, r4.z, l79, r4.x\n"
"    \n"
"    dcl_literal l80, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.__z_, l80, r4.x\n"
"    ishr r4.___w, r4.y, r4.x\n"
"    inegate r4.x___, r4.x\n"
"    \n"
"    dcl_literal l81, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4.x___, r4.x, l81\n"
"    iadd r4.x___, r4.y, r4.x\n"
"    cmov_logical r4.x___, r4.z, r4.w, r4.x\n"
"else\n"
"    \n"
"    dcl_literal l82, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r1.__z_, r1.z, l82\n"
"    \n"
"    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.__z_, r3.z, l83\n"
"    iadd r3.__z_, r3.z, r3.x\n"
"    \n"
"    dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.x___, r3.x, l84\n"
"    iadd r1.__z_, r1.z, r3.x\n"
"    \n"
"    dcl_literal l85, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3.x___, r3.z, l85\n"
"    \n"
"    dcl_literal l86, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.__z_, l86, r3.x\n"
"    \n"
"    dcl_literal l87, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.__z_, r3.z, l87, r1.z\n"
"    \n"
"    dcl_literal l88, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.x___, l88, r3.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l89, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.__z_, r3.w, l89\n"
"    \n"
"    dcl_literal l90, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"    ilt r4._yz_, l90, r3.x\n"
"    \n"
"    dcl_literal l91, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.x___, r4.z, l91, r3.x\n"
"    ishr r3.x___, r3.z, r3.x\n"
"    cmov_logical r4.x___, r4.y, r3.x, r1.z\n"
"endif\n"
"\n"
"dcl_literal l92, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r1.__z_, l92, r1.w\n"
"\n"
"dcl_literal l93, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1.__z_, r1.z, l93, r4.x\n"
"ior r1.__z_, r3.y, r1.z\n"
"\n"
"dcl_literal l94, 0x41131CE0, 0x41131CE0, 0x41131CE0, 0x41131CE0\n"
"ge r1.___w, r1.y, l94\n"
"if_logicalnz r1.w\n"
"    mul_ieee r1.___w, r2.w, r1.z\n"
"    div_zeroop(infinity) r1.___w, r1.w, r1.y\n"
"    \n"
"    dcl_literal l95, 0x80000000, 0x7F800000, 0x00000000, 0x00000000\n"
"    and r3.xy__, r2.x, l95\n"
"    if_logicalz r3.y\n"
"        \n"
"        dcl_literal l96, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r3.__z_, r2.x, l96\n"
"        itof r3.__z_, r3.z\n"
"        \n"
"        dcl_literal l97, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r3.__zw, r3.z, l97\n"
"        \n"
"        dcl_literal l98, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r3.__z_, r3.z, l98\n"
"        \n"
"        dcl_literal l99, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        iadd r3.__z_, r3.z, l99\n"
"        \n"
"        dcl_literal l100, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r3.___w, r3.w, l100\n"
"        \n"
"        dcl_literal l101, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r3.__z_, l101, r3.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r4.x___, l102, r3.z\n"
"        \n"
"        dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r3.__z_, r4.x, l103, r3.z\n"
"        \n"
"        dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r4.x___, l104, r3.z\n"
"        ishr r4._y__, r3.w, r3.z\n"
"        inegate r3.__z_, r3.z\n"
"        \n"
"        dcl_literal l105, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r3.__z_, r3.z, l105\n"
"        iadd r3.__z_, r3.w, r3.z\n"
"        cmov_logical r3.__z_, r4.x, r4.y, r3.z\n"
"    else\n"
"        \n"
"        dcl_literal l106, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r3.___w, r2.x, l106\n"
"        \n"
"        dcl_literal l107, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r3._y__, r3.y, l107\n"
"        \n"
"        dcl_literal l108, 0x00000000, 0xFFFFFF99, 0x00000000, 0x0C000000\n"
"        iadd r3._y_w, r3.yyyw, l108\n"
"        \n"
"        dcl_literal l109, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r3._y__, l109, r3.y\n"
"        \n"
"        dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r3.__z_, r3.y, l110, r3.w\n"
"    endif\n"
"    ior r3.x___, r3.x, r3.z\n"
"    mul_ieee r1.___w, r1.w, r3.x\n"
"    \n"
"    dcl_literal l111, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3.xyz_, r1.w, l111\n"
"    if_logicalz r3.y\n"
"        itof r3.___w, r3.z\n"
"        \n"
"        dcl_literal l112, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r4.xy__, r3.w, l112\n"
"        \n"
"        dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r3.___w, r4.x, l113\n"
"        \n"
"        dcl_literal l114, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r3.___w, r3.w, l114\n"
"        \n"
"        dcl_literal l115, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r4.x___, r4.y, l115\n"
"        \n"
"        dcl_literal l116, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r3.___w, l116, r3.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r4._y__, l117, r3.w\n"
"        \n"
"        dcl_literal l118, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r3.___w, r4.y, l118, r3.w\n"
"        \n"
"        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r4._y__, l119, r3.w\n"
"        ishr r4.__z_, r4.x, r3.w\n"
"        inegate r3.___w, r3.w\n"
"        \n"
"        dcl_literal l120, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r3.___w, r3.w, l120\n"
"        iadd r3.___w, r4.x, r3.w\n"
"        cmov_logical r3.___w, r4.y, r4.z, r3.w\n"
"    else\n"
"        \n"
"        dcl_literal l121, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r1.___w, r1.w, l121\n"
"        \n"
"        dcl_literal l122, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r3._y__, r3.y, l122\n"
"        \n"
"        dcl_literal l123, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000\n"
"        iadd r1.___w, r1.w, l123\n"
"        \n"
"        dcl_literal l124, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69\n"
"        iadd r3._y__, r3.y, l124\n"
"        \n"
"        dcl_literal l125, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r3._y__, l125, r3.y_neg(xyzw)\n"
"        \n"
"        dcl_literal l126, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r3.__z_, r3.z, l126\n"
"        \n"
"        dcl_literal l127, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"        ilt r4.xy__, l127, r3.y\n"
"        \n"
"        dcl_literal l128, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r3._y__, r4.y, l128, r3.y\n"
"        ishr r3._y__, r3.z, r3.y\n"
"        cmov_logical r3.___w, r4.x, r3.y, r1.w\n"
"    endif\n"
"    ior r1.___w, r3.x, r3.w\n"
"else\n"
"    mul_ieee r1.__z_, r2.x, r1.z\n"
"    mul_ieee r1.__z_, r2.w, r1.z\n"
"    \n"
"    dcl_literal l129, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.x___, l129, r0.x\n"
"    div_zeroop(infinity) r1._y__, r1.z, r1.y\n"
"    \n"
"    dcl_literal l130, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    add r1.__z_, r1.y_neg(xyzw), l130\n"
"    cmov_logical r1.___w, r2.x, r1.y, r1.z\n"
"endif\n"
"\n"
"dcl_literal l131, 0x23800000, 0x3F580000, 0x40C00000, 0x41E00000\n"
"ige r3, r0.y, l131\n"
"\n"
"dcl_literal l132, 0x00000000, 0x3E800000, 0x00000000, 0x00000000\n"
"ilt r1._yz_, r0.x, l132\n"
"and r1._yz_, r3.xxzx, r1.yyzy\n"
"cmov_logical r0.__z_, r1.y, r1.x, r0.z\n"
"\n"
"dcl_literal l133, 0x3E800000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.xy__, r0.x, l133\n"
"and r1.x___, r2.y, r1.x\n"
"cmov_logical r0.__z_, r1.x, r0.w, r0.z\n"
"and r0.___w, r2.z, r3.y\n"
"cmov_logical r0.__z_, r0.w, r1.w, r0.z\n"
"\n"
"dcl_literal l134, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"cmov_logical r0.__z_, r1.z, l134, r0.z\n"
"and r0.___w, r3.w, r1.y\n"
"\n"
"dcl_literal l135, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ushr r1.x___, r0.x, l135\n"
"\n"
"dcl_literal l136, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishl r1.x___, r1.x, l136\n"
"\n"
"dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r1._y__, r0.y, l137\n"
"\n"
"dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r1.x___, r1.x, l138\n"
"and r1.x___, r1.y, r1.x\n"
"ior r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r0.w, l139, r0.z\n"
"\n"
"dcl_literal l140, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l140, r0.y\n"
"\n"
"dcl_literal l141, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l141\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__erf_f32",
"mdef(205)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00800011, 0x40C00000\n"
"ilt r0.__zw, r0.y, l1\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l2, 0x80000000, 0x7F800000, 0x00000000, 0x00000000\n"
"    and r1.xy__, r0.x, l2\n"
"    if_logicalz r1.y\n"
"        \n"
"        dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1.__z_, r0.x, l3\n"
"        itof r1.__z_, r1.z\n"
"        \n"
"        dcl_literal l4, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r1.__zw, r1.z, l4\n"
"        \n"
"        dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.__z_, r1.z, l5\n"
"        \n"
"        dcl_literal l6, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        iadd r1.__z_, r1.z, l6\n"
"        \n"
"        dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l7\n"
"        \n"
"        dcl_literal l8, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1.__z_, l8, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.x___, l9, r1.z\n"
"        \n"
"        dcl_literal l10, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.__z_, r2.x, l10, r1.z\n"
"        \n"
"        dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2.x___, l11, r1.z\n"
"        ishr r2._y__, r1.w, r1.z\n"
"        inegate r1.__z_, r1.z\n"
"        \n"
"        dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.__z_, r1.z, l12\n"
"        iadd r1.__z_, r1.w, r1.z\n"
"        cmov_logical r1.__z_, r2.x, r2.y, r1.z\n"
"    else\n"
"        \n"
"        dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1._y__, r1.y, l13\n"
"        \n"
"        dcl_literal l14, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000\n"
"        iadd r1.___w, r0.y, l14\n"
"        \n"
"        dcl_literal l15, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99\n"
"        iadd r1._y__, r1.y, l15\n"
"        \n"
"        dcl_literal l16, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r1._y__, l16, r1.y\n"
"        \n"
"        dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r1.__z_, r1.y, l17, r1.w\n"
"    endif\n"
"    ior r1.x___, r1.x, r1.z\n"
"else\n"
"    mov r1.x___, r0.x\n"
"endif\n"
"\n"
"dcl_literal l18, 0x3F906EBB, 0x3F906EBB, 0x3F906EBB, 0x3F906EBB\n"
"mul_ieee r1.x___, r1.x, l18\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l19, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r1._yzw, r1.x, l19\n"
"    if_logicalz r1.z\n"
"        itof r0.__z_, r1.w\n"
"        \n"
"        dcl_literal l20, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r2.xy__, r0.z, l20\n"
"        \n"
"        dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.__z_, r2.x, l21\n"
"        \n"
"        dcl_literal l22, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r0.__z_, r0.z, l22\n"
"        \n"
"        dcl_literal l23, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.x___, r2.y, l23\n"
"        \n"
"        dcl_literal l24, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r0.__z_, l24, r0.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2._y__, l25, r0.z\n"
"        \n"
"        dcl_literal l26, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0.__z_, r2.y, l26, r0.z\n"
"        \n"
"        dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2._y__, l27, r0.z\n"
"        ishr r2.__z_, r2.x, r0.z\n"
"        inegate r0.__z_, r0.z\n"
"        \n"
"        dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r0.__z_, r0.z, l28\n"
"        iadd r0.__z_, r2.x, r0.z\n"
"        cmov_logical r0.__z_, r2.y, r2.z, r0.z\n"
"    else\n"
"        \n"
"        dcl_literal l29, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r2.x___, r1.x, l29\n"
"        \n"
"        dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.__z_, r1.z, l30\n"
"        \n"
"        dcl_literal l31, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000\n"
"        iadd r2.x___, r2.x, l31\n"
"        \n"
"        dcl_literal l32, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69\n"
"        iadd r1.__z_, r1.z, l32\n"
"        \n"
"        dcl_literal l33, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r1.__z_, l33, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l34, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l34\n"
"        \n"
"        dcl_literal l35, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"        ilt r2._yz_, l35, r1.z\n"
"        \n"
"        dcl_literal l36, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.__z_, r2.z, l36, r1.z\n"
"        ishr r1.__z_, r1.w, r1.z\n"
"        cmov_logical r0.__z_, r2.y, r1.z, r2.x\n"
"    endif\n"
"    ior r1.x___, r1.y, r0.z\n"
"endif\n"
"mul_ieee r0.__z_, r0.x, r0.x\n"
"\n"
"dcl_literal l37, 0x00000000, 0xB7C756B1, 0xB684E21A, 0x00000000\n"
"\n"
"dcl_literal l38, 0x00000000, 0xBBBD1489, 0x390AEE49, 0x00000000\n"
"mad_ieee r1._yz_, r0.z, l37, l38\n"
"\n"
"dcl_literal l39, 0x00000000, 0xBCE9528F, 0x3BA68116, 0x00000000\n"
"mad_ieee r1._yz_, r0.z, r1.yyzy, l39\n"
"\n"
"dcl_literal l40, 0x00000000, 0xBEA66BEB, 0x3D852A63, 0x00000000\n"
"mad_ieee r1._yz_, r0.z, r1.yyzy, l40\n"
"\n"
"dcl_literal l41, 0x00000000, 0x3E0375D4, 0x3ECBBBCE, 0x00000000\n"
"mad_ieee r1._yz_, r0.z, r1.yyzy, l41\n"
"\n"
"dcl_literal l42, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r0.__z_, r0.z, r1.z, l42\n"
"div_zeroop(infinity) r0.__z_, r1.y, r0.z\n"
"mad_ieee r0.__z_, r0.x, r0.z, r0.x\n"
"mov r1._y__, r0.x_abs\n"
"\n"
"dcl_literal l43, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.__z_, r1.y, l43\n"
"\n"
"dcl_literal l44, 0xBB0DF9C0, 0x3C445AA3, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l45, 0x3D1151B3, 0x3C5F6E13, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, l44, l45\n"
"\n"
"dcl_literal l46, 0xBDE31CC2, 0x3E013307, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l46\n"
"\n"
"dcl_literal l47, 0x3EA2FE54, 0x3D931AE7, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l47\n"
"\n"
"dcl_literal l48, 0xBEBE9208, 0x3F0A5785, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l48\n"
"\n"
"dcl_literal l49, 0x3ED46805, 0x3DD9F331, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l49\n"
"\n"
"dcl_literal l50, 0x00000000, 0x00000000, 0xBB1ACDC6, 0x3F800000\n"
"mad_ieee r1.__zw, r1.z, r2.xxxy, l50\n"
"\n"
"dcl_literal l51, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.x___, r0.x, l51\n"
"div_zeroop(infinity) r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l52, 0x3F58560B, 0x3F58560B, 0x3F58560B, 0x3F58560B\n"
"add r1.___w, r1.z, l52\n"
"\n"
"dcl_literal l53, 0xBF58560B, 0xBF58560B, 0xBF58560B, 0xBF58560B\n"
"add r1.__z_, r1.z_neg(xyzw), l53\n"
"cmov_logical r1.__z_, r2.x, r1.w, r1.z\n"
"mul_ieee r1.___w, r1.y, r1.y\n"
"\n"
"dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r1.___w, l54, r1.w\n"
"\n"
"dcl_literal l55, 0xC11D077E, 0xBD777F97, 0xC3F1C275, 0xC1B38712\n"
"\n"
"dcl_literal l56, 0xC2A2932B, 0x40D23F7C, 0xC480230B, 0x43ED43A7\n"
"mad_ieee r3, r1.w, l55, l56\n"
"\n"
"dcl_literal l57, 0xC3389AE7, 0x42D9451F, 0xC41F6441, 0x451F90CE\n"
"mad_ieee r3, r1.w, r3, l57\n"
"\n"
"dcl_literal l58, 0xC322658C, 0x43D6810B, 0xC320A2EA, 0x4547FDBB\n"
"mad_ieee r3, r1.w, r3, l58\n"
"\n"
"dcl_literal l59, 0xC2798057, 0x442158C9, 0xC18E104B, 0x44C01759\n"
"mad_ieee r3, r1.w, r3, l59\n"
"\n"
"dcl_literal l60, 0xC128F022, 0x43D9486F, 0xBF4C9DD4, 0x43A2E571\n"
"mad_ieee r3, r1.w, r3, l60\n"
"\n"
"dcl_literal l61, 0xBF31A0B7, 0x4309A863, 0xBC21A092, 0x41F2B459\n"
"mad_ieee r3, r1.w, r3, l61\n"
"\n"
"dcl_literal l62, 0x00000000, 0xBC21A093, 0x419D35CE, 0x3F800000\n"
"mad_ieee r2._yzw, r1.w, r3.xxyw, l62\n"
"\n"
"dcl_literal l63, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r1.___w, r1.w, r2.z, l63\n"
"div_zeroop(infinity) r1.___w, r2.y, r1.w\n"
"div_zeroop(infinity) r2._y__, r3.z, r2.w\n"
"\n"
"dcl_literal l64, 0x4036DB6E, 0x4036DB6E, 0x4036DB6E, 0x4036DB6E\n"
"ige r2.__z_, r0.y, l64\n"
"and r0.___w, r0.w, r2.z\n"
"cmov_logical r0.___w, r0.w, r2.y, r1.w\n"
"\n"
"dcl_literal l65, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r1.___w, r1.y, l65\n"
"\n"
"dcl_literal l66, 0xBF100000, 0xBF100000, 0xBF100000, 0xBF100000\n"
"mad_ieee r2._y__, r1.w_neg(xyzw), r1.w, l66\n"
"\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.__z_, r2.y, l67\n"
"\n"
"dcl_literal l68, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l69, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r2.__z_, r2.z, l68, l69\n"
"\n"
"dcl_literal l70, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r2.__z_, r2.y, l70, r2.z\n"
"round_z r2.__z_, r2.z\n"
"\n"
"dcl_literal l71, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2._y__, r2.z_neg(xyzw), l71, r2.y\n"
"\n"
"dcl_literal l72, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r2.___w, r2.z_neg(xyzw), l72, r2.y\n"
"mul_ieee r3.x___, r2.w, r2.w\n"
"\n"
"dcl_literal l73, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l74, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r3._y__, r3.x, l73, l74\n"
"\n"
"dcl_literal l75, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r3._y__, r3.x, r3.y, l75\n"
"\n"
"dcl_literal l76, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r3._y__, r3.x, r3.y, l76\n"
"\n"
"dcl_literal l77, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3._y__, r3.x, r3.y, l77\n"
"mad_ieee r3.x___, r3.x_neg(xyzw), r3.y, r2.w\n"
"mul_ieee r2.___w, r2.w, r3.x\n"
"\n"
"dcl_literal l78, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r3.x___, r3.x_neg(xyzw), l78\n"
"div_zeroop(infinity) r2.___w, r2.w, r3.x\n"
"\n"
"dcl_literal l79, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r2.___w, r2.z, l79, r2.w_neg(xyzw)\n"
"add r2._y__, r2.y_neg(xyzw), r2.w\n"
"\n"
"dcl_literal l80, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2._y__, r2.y_neg(xyzw), l80\n"
"ftoi r2.__z_, r2.z\n"
"\n"
"dcl_literal l81, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r3.xyz_, r2.y, l81\n"
"if_logicalz r3.y\n"
"    itof r2.___w, r3.z\n"
"    \n"
"    dcl_literal l82, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r2.w, l82\n"
"    \n"
"    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r4.x, l83\n"
"    iadd r2.___w, r2.w, r2.z\n"
"    \n"
"    dcl_literal l84, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.___w, r4.y, l84\n"
"    \n"
"    dcl_literal l85, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r2.___w, l85, r2.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l86, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.x___, l86, r2.w\n"
"    \n"
"    dcl_literal l87, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.___w, r4.x, l87, r2.w\n"
"    \n"
"    dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.x___, l88, r2.w\n"
"    ishr r4._y__, r3.w, r2.w\n"
"    inegate r2.___w, r2.w\n"
"    \n"
"    dcl_literal l89, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.___w, r2.w, l89\n"
"    iadd r2.___w, r3.w, r2.w\n"
"    cmov_logical r2.___w, r4.x, r4.y, r2.w\n"
"else\n"
"    \n"
"    dcl_literal l90, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2._y__, r2.y, l90\n"
"    \n"
"    dcl_literal l91, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l91\n"
"    iadd r3._y__, r3.y, r2.z\n"
"    \n"
"    dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.__z_, r2.z, l92\n"
"    iadd r2._y__, r2.y, r2.z\n"
"    \n"
"    dcl_literal l93, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.__z_, r3.y, l93\n"
"    \n"
"    dcl_literal l94, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3._y__, l94, r2.z\n"
"    \n"
"    dcl_literal l95, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2._y__, r3.y, l95, r2.y\n"
"    \n"
"    dcl_literal l96, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.__z_, l96, r2.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l97, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.z, l97\n"
"    \n"
"    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000017\n"
"    ilt r3.__zw, l98, r2.z\n"
"    \n"
"    dcl_literal l99, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r3.w, l99, r2.z\n"
"    ishr r2.__z_, r3.y, r2.z\n"
"    cmov_logical r2.___w, r3.z, r2.z, r2.y\n"
"endif\n"
"ior r2._y__, r3.x, r2.w\n"
"add r2.__z_, r1.y_neg(xyzw), r1.w\n"
"add r1.___w, r1.y, r1.w\n"
"mad_ieee r0.___w, r2.z, r1.w, r0.w\n"
"\n"
"dcl_literal l100, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1.___w, r0.w, l100\n"
"\n"
"dcl_literal l101, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l102, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r1.___w, r1.w, l101, l102\n"
"\n"
"dcl_literal l103, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r1.___w, r0.w, l103, r1.w\n"
"round_z r1.___w, r1.w\n"
"\n"
"dcl_literal l104, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.___w, r1.w_neg(xyzw), l104, r0.w\n"
"\n"
"dcl_literal l105, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r2.__z_, r1.w_neg(xyzw), l105, r0.w\n"
"mul_ieee r2.___w, r2.z, r2.z\n"
"\n"
"dcl_literal l106, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l107, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r3.x___, r2.w, l106, l107\n"
"\n"
"dcl_literal l108, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r3.x___, r2.w, r3.x, l108\n"
"\n"
"dcl_literal l109, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r3.x___, r2.w, r3.x, l109\n"
"\n"
"dcl_literal l110, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3.x___, r2.w, r3.x, l110\n"
"mad_ieee r2.___w, r2.w_neg(xyzw), r3.x, r2.z\n"
"mul_ieee r2.__z_, r2.z, r2.w\n"
"\n"
"dcl_literal l111, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r2.___w, r2.w_neg(xyzw), l111\n"
"div_zeroop(infinity) r2.__z_, r2.z, r2.w\n"
"\n"
"dcl_literal l112, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r2.__z_, r1.w, l112, r2.z_neg(xyzw)\n"
"add r0.___w, r0.w_neg(xyzw), r2.z\n"
"\n"
"dcl_literal l113, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.w_neg(xyzw), l113\n"
"ftoi r2.__z_, r1.w\n"
"\n"
"dcl_literal l114, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r3.xyz_, r0.w, l114\n"
"if_logicalz r3.y\n"
"    itof r2.___w, r3.z\n"
"    \n"
"    dcl_literal l115, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r2.w, l115\n"
"    \n"
"    dcl_literal l116, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r4.x, l116\n"
"    iadd r2.___w, r2.w, r2.z\n"
"    \n"
"    dcl_literal l117, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.___w, r4.y, l117\n"
"    \n"
"    dcl_literal l118, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r2.___w, l118, r2.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l119, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.x___, l119, r2.w\n"
"    \n"
"    dcl_literal l120, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.___w, r4.x, l120, r2.w\n"
"    \n"
"    dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.x___, l121, r2.w\n"
"    ishr r4._y__, r3.w, r2.w\n"
"    inegate r2.___w, r2.w\n"
"    \n"
"    dcl_literal l122, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.___w, r2.w, l122\n"
"    iadd r2.___w, r3.w, r2.w\n"
"    cmov_logical r2.___w, r4.x, r4.y, r2.w\n"
"else\n"
"    \n"
"    dcl_literal l123, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r0.___w, r0.w, l123\n"
"    \n"
"    dcl_literal l124, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l124\n"
"    iadd r3._y__, r3.y, r2.z\n"
"    \n"
"    dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.__z_, r2.z, l125\n"
"    iadd r0.___w, r0.w, r2.z\n"
"    \n"
"    dcl_literal l126, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.__z_, r3.y, l126\n"
"    \n"
"    dcl_literal l127, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3._y__, l127, r2.z\n"
"    \n"
"    dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r3.y, l128, r0.w\n"
"    \n"
"    dcl_literal l129, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.__z_, l129, r2.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l130, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.z, l130\n"
"    \n"
"    dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000017\n"
"    ilt r3.__zw, l131, r2.z\n"
"    \n"
"    dcl_literal l132, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r3.w, l132, r2.z\n"
"    ishr r2.__z_, r3.y, r2.z\n"
"    cmov_logical r2.___w, r3.z, r2.z, r0.w\n"
"endif\n"
"\n"
"dcl_literal l133, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r0.___w, l133, r1.w\n"
"\n"
"dcl_literal l134, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r0.w, l134, r2.w\n"
"ior r0.___w, r3.x, r0.w\n"
"mul_ieee r0.___w, r2.y, r0.w\n"
"div_zeroop(infinity) r0.___w, r0.w, r1.y\n"
"\n"
"dcl_literal l135, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.___w, r0.w_neg(xyzw), l135\n"
"\n"
"dcl_literal l136, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l136\n"
"cmov_logical r0.___w, r2.x, r1.w, r0.w\n"
"\n"
"dcl_literal l137, 0x31800000, 0x3F580000, 0x3FA00000, 0x40C00000\n"
"ige r3, r1.y, l137\n"
"\n"
"dcl_literal l138, 0x00000000, 0x3F580000, 0x3FA00000, 0x40C00000\n"
"ilt r2._yzw, r1.y, l138\n"
"and r2._yzw, r3.xxyz, r2.yyzw\n"
"cmov_logical r0.__z_, r2.y, r0.z, r1.x\n"
"cmov_logical r0.__z_, r2.z, r1.z, r0.z\n"
"cmov_logical r0.__z_, r2.w, r0.w, r0.z\n"
"\n"
"dcl_literal l139, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"\n"
"dcl_literal l140, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.___w, r2.x, l139, l140\n"
"cmov_logical r0.__z_, r3.w, r0.w, r0.z\n"
"\n"
"dcl_literal l141, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l141\n"
"\n"
"dcl_literal l142, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r0.w, l142, r0.z\n"
"\n"
"dcl_literal l143, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l143, r0.y\n"
"\n"
"dcl_literal l144, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l144\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__exp10_f32",
"mdef(206)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78\n"
"mul_ieee r0._y__, r0.x, l0\n"
"dcl_literal l1, 0xFFFFF000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r1.xyz_, r0.x, l1\n"
"dcl_literal l2, 0x40549000, 0x40549000, 0x40549000, 0x40549000\n"
"mad_ieee r0.__z_, r1.x, l2, r0.y_neg(xyzw)\n"
"add r0.___w, r0.x, r1.x_neg(xyzw)\n"
"dcl_literal l3, 0x40549000, 0x40549000, 0x40549000, 0x40549000\n"
"mad_ieee r0.__z_, r0.w, l3, r0.z\n"
"dcl_literal l4, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD\n"
"mad_ieee r0.__z_, r1.x, l4, r0.z\n"
"dcl_literal l5, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD\n"
"mad_ieee r0.__z_, r0.w, l5, r0.z\n"
"add r0.___w, r0.y, r0.z\n"
"add r0._y__, r0.y, r0.w_neg(xyzw)\n"
"add r0._y__, r0.z, r0.y\n"
"add r0.__z_, r0.w, r0.y\n"
"round_nearest r0.__z_, r0.z\n"
"add r1.x___, r0.w, r0.z_neg(xyzw)\n"
"add r0.___w, r0.w, r1.x_neg(xyzw)\n"
"add r0.___w, r0.z_neg(xyzw), r0.w\n"
"add r0._y__, r0.y, r0.w\n"
"add r0.___w, r1.x, r0.y\n"
"add r1.x___, r1.x, r0.w_neg(xyzw)\n"
"add r0._y__, r0.y, r1.x\n"
"dcl_literal l6, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r1.x___, r0.w, l6\n"
"dcl_literal l7, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0._y__, r0.y, l7, r1.x\n"
"dcl_literal l8, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r1.x___, r0.w, l8\n"
"add r1.___w, r0.w, r1.x_neg(xyzw)\n"
"dcl_literal l9, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mul_ieee r0.___w, r0.w, l9\n"
"dcl_literal l10, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000\n"
"mad_ieee r2.x___, r1.x, l10, r0.w_neg(xyzw)\n"
"dcl_literal l11, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000\n"
"mad_ieee r2.x___, r1.w, l11, r2.x\n"
"dcl_literal l12, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001\n"
"mad_ieee r1.x___, r1.x, l12, r2.x\n"
"dcl_literal l13, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001\n"
"mad_ieee r1.x___, r1.w, l13, r1.x\n"
"add r0._y__, r0.y, r1.x\n"
"add r1.x___, r0.w, r0.y\n"
"add r0.___w, r0.w, r1.x_neg(xyzw)\n"
"add r0._y__, r0.y, r0.w\n"
"add r0.___w, r1.x, r0.y\n"
"mul_ieee r1.___w, r0.w, r0.w\n"
"dcl_literal l14, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"dcl_literal l15, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r2.x___, r1.w, l14, l15\n"
"dcl_literal l16, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r2.x___, r1.w, r2.x, l16\n"
"dcl_literal l17, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r2.x___, r1.w, r2.x, l17\n"
"dcl_literal l18, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r2.x___, r1.w, r2.x, l18\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r0.w\n"
"mul_ieee r0.___w, r0.w, r1.w\n"
"dcl_literal l19, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1.___w, r1.w_neg(xyzw), l19\n"
"div_zeroop(infinity) r0.___w, r0.w, r1.w\n"
"add r0._y__, r0.y_neg(xyzw), r0.w_neg(xyzw)\n"
"add r0._y__, r1.x_neg(xyzw), r0.y\n"
"dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0._y__, r0.y_neg(xyzw), l20\n"
"dcl_literal l21, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r2, r0.y, l21\n"
"ftoi r0._y__, r0.z\n"
"dcl_literal l22, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r0.__z_, l22, r0.z\n"
"dcl_literal l23, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r0.___w, r0.y, l23\n"
"cmov_logical r0._y__, r2.z, r0.y, r0.w\n"
"dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.___w, r0.y, l24\n"
"itof r1.x___, r2.w\n"
"cmov_logical r1.x___, r2.z, r2.x, r1.x\n"
"iadd r0.___w, r1.x, r0.w\n"
"dcl_literal l25, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF\n"
"and r1.x__w, r1.x, l25\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l26\n"
"dcl_literal l27, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l27\n"
"iadd r0._y__, r1.x, r0.y\n"
"dcl_literal l28, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0._y__, r0.y, l28\n"
"dcl_literal l29, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.x___, l29, r0.y\n"
"dcl_literal l30, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0._y__, l30, r0.y_neg(xyzw)\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r1.x, l31, r0.w\n"
"dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.x___, l32, r0.y\n"
"dcl_literal l33, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0._y__, r1.x, l33, r0.y\n"
"dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0._y__, r0.y, l34\n"
"ishr r1.x___, r1.w, r0.y\n"
"dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0._y__, l35, r0.y\n"
"cmov_logical r0._y__, r0.y, r1.x, r0.w\n"
"dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.z, l36, r0.y\n"
"ior r0._y__, r2.y, r0.y\n"
"dcl_literal l37, 0x421A209B, 0x421A209B, 0x421A209B, 0x421A209B\n"
"ge r0.__z_, r0.x, l37\n"
"dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, r1.y, l38\n"
"and r0.__z_, r0.z, r0.w\n"
"dcl_literal l39, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.z, l39, r0.y\n"
"dcl_literal l40, 0xC23369F4, 0xC23369F4, 0xC23369F4, 0xC23369F4\n"
"lt r0.__z_, r0.x, l40\n"
"and r0.__z_, r0.w, r0.z\n"
"dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l41, r0.y\n"
"dcl_literal l42, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l42, r1.y\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, r0.x, l43\n"
"dcl_literal l44, 0x7F800000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r1.x_z_, r1.yyzy, l44\n"
"dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r1.y, l45\n"
"and r0.__z_, r0.z, r1.x\n"
"dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l46, r0.y\n"
"dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l47, r0.x\n"
"and r0.__zw, r1.xxxz, r0.zzzw\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.__z_, r0.x, l48\n"
"dcl_literal l49, 0x421A209A, 0x421A209A, 0x421A209A, 0x421A209A\n"
"eq r0.x___, r0.x, l49\n"
"cmov_logical r0._y__, r0.w, r0.z, r0.y\n"
"dcl_literal l50, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3\n"
"cmov_logical r0.x___, r0.x, l50, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__exp2_f32",
"mdef(207)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_nearest r0._y__, r0.x\n"
"add r0.__z_, r0.x, r0.y_neg(xyzw)\n"
"dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r0.___w, r0.z, l0\n"
"mul_ieee r1.x___, r0.w, r0.w\n"
"dcl_literal l1, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"dcl_literal l2, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r1._y__, r1.x, l1, l2\n"
"dcl_literal l3, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r1._y__, r1.x, r1.y, l3\n"
"dcl_literal l4, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r1._y__, r1.x, r1.y, l4\n"
"dcl_literal l5, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r1._y__, r1.x, r1.y, l5\n"
"mad_ieee r1.x___, r1.x_neg(xyzw), r1.y, r0.w\n"
"mul_ieee r0.___w, r0.w, r1.x\n"
"dcl_literal l6, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1.x___, r1.x_neg(xyzw), l6\n"
"div_zeroop(infinity) r0.___w, r0.w, r1.x\n"
"dcl_literal l7, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r0.___w, r0.z_neg(xyzw), l7, r0.w_neg(xyzw)\n"
"dcl_literal l8, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.__z_, r0.z_neg(xyzw), l8, r0.w\n"
"dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.__z_, r0.z_neg(xyzw), l9\n"
"dcl_literal l10, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r1, r0.z, l10\n"
"ftoi r0.__z_, r0.y\n"
"dcl_literal l11, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r0._y__, l11, r0.y\n"
"dcl_literal l12, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r0.___w, r0.z, l12\n"
"cmov_logical r0.__z_, r1.z, r0.z, r0.w\n"
"dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.___w, r0.z, l13\n"
"itof r1.___w, r1.w\n"
"cmov_logical r1.x___, r1.z, r1.x, r1.w\n"
"iadd r0.___w, r1.x, r0.w\n"
"dcl_literal l14, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r1.x_z_, r1.x, l14\n"
"dcl_literal l15, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l15\n"
"dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.__z_, r1.z, l16\n"
"iadd r0.__z_, r1.x, r0.z\n"
"dcl_literal l17, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l17\n"
"dcl_literal l18, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.x___, l18, r0.z\n"
"dcl_literal l19, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.__z_, l19, r0.z_neg(xyzw)\n"
"dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r1.x, l20, r0.w\n"
"dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.x___, l21, r0.z\n"
"dcl_literal l22, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.__z_, r1.x, l22, r0.z\n"
"dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.__z_, r0.z, l23\n"
"ishr r1.x___, r1.z, r0.z\n"
"dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l24, r0.z\n"
"cmov_logical r0.__z_, r0.z, r1.x, r0.w\n"
"dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l25, r0.z\n"
"ior r0._y__, r1.y, r0.y\n"
"dcl_literal l26, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"ge r0.__z_, r0.x, l26\n"
"dcl_literal l27, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l27\n"
"dcl_literal l28, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, r0.w, l28\n"
"and r0.__z_, r0.z, r1.x\n"
"dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.z, l29, r0.y\n"
"dcl_literal l30, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000\n"
"lt r0.__z_, r0.x, l30\n"
"and r0.__z_, r1.x, r0.z\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l31, r0.y\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l32, r0.w\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.w, l33\n"
"dcl_literal l34, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l34\n"
"cmov_logical r0._y__, r0.z, r1.x, r0.y\n"
"dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, r0.x, l35\n"
"and r0.__z_, r0.w, r0.z\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l36, r0.y\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l37, r0.x\n"
"and r0.__z_, r0.w, r0.z\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__expm1_f32",
"mdef(208)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r3.x___, r0.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r0.x___, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0xB717F7D1, 0xFFFFFFFF\n"
"mov r1.__zw, l1\n"
"dcl_literal l2, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mov r2._y__, l2\n"
"dcl_literal l3, 0xBF317180, 0x3F317180, 0x00000000, 0x00000000\n"
"add r1.xy__, r3.x, l3\n"
"mov r2.x___, r1.x\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x80000000, 0x7FFFFFFF\n"
"and r0.__zw, r3.x, l4\n"
"dcl_literal l5, 0x00000000, 0x3EB17218, 0x7F800000, 0x00000000\n"
"ult r3._yz_, l5, r0.w\n"
"dcl_literal l6, 0x3F851592, 0x33000000, 0x7F800000, 0x00000000\n"
"ult r4.xyz_, r0.w, l6\n"
"and r1.x___, r3.y, r4.x\n"
"dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x7F800000\n"
"ieq r4.x__w, r0.zzzw, l7\n"
"and r2.___w, r1.x, r4.x\n"
"dcl_literal l8, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r2.__z_, r2.w, l8\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2.___w, r0.z, l9\n"
"and r1.x___, r1.x, r2.w\n"
"cmov_logical r1.xyz_, r1.x, r1.yzwy, r2.xyzx\n"
"dcl_literal l10, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"dcl_literal l11, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r0.__z_, r0.z, l10, l11\n"
"dcl_literal l12, 0x3F851592, 0x42B17218, 0x4195B844, 0x00000000\n"
"uge r2.xyz_, r0.w, l12\n"
"dcl_literal l13, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0.__z_, r3.x, l13, r0.z\n"
"round_z r0.___w, r0.z\n"
"ftoi r5.__z_, r0.z\n"
"dcl_literal l14, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r5.x___, r0.w_neg(xyzw), l14, r3.x\n"
"dcl_literal l15, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r5._y__, r0.w, l15\n"
"cmov_logical r1.xyz_, r2.x, r5.xyzx, r1.xyzx\n"
"and r0.__zw, r4.z, r2.yyyz\n"
"add r2._y__, r1.y_neg(xyzw), r1.x\n"
"add r1.x___, r1.x, r2.y_neg(xyzw)\n"
"add r2.x___, r1.y_neg(xyzw), r1.x\n"
"mov r0._y__, r3.x\n"
"cmov_logical r0.xy__, r3.y, r2.xyxx, r0.xyxx\n"
"dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.x___, r0.y, l16\n"
"mul_ieee r1._y__, r0.y, r1.x\n"
"dcl_literal l17, 0xB457EDBB, 0xB457EDBB, 0xB457EDBB, 0xB457EDBB\n"
"dcl_literal l18, 0x36867E54, 0x36867E54, 0x36867E54, 0x36867E54\n"
"mad_ieee r1.___w, r1.y, l17, l18\n"
"dcl_literal l19, 0xB8A670CD, 0xB8A670CD, 0xB8A670CD, 0xB8A670CD\n"
"mad_ieee r1.___w, r1.y, r1.w, l19\n"
"dcl_literal l20, 0x3AD00D01, 0x3AD00D01, 0x3AD00D01, 0x3AD00D01\n"
"mad_ieee r1.___w, r1.y, r1.w, l20\n"
"dcl_literal l21, 0xBD088889, 0xBD088889, 0xBD088889, 0xBD088889\n"
"mad_ieee r1.___w, r1.y, r1.w, l21\n"
"dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r1.___w, r1.y, r1.w, l22\n"
"dcl_literal l23, 0x40400000, 0x40400000, 0x40400000, 0x40400000\n"
"mad_ieee r2.x___, r1.w_neg(xyzw), r1.x, l23\n"
"add r1.___w, r1.w, r2.x_neg(xyzw)\n"
"dcl_literal l24, 0x40C00000, 0x40C00000, 0x40C00000, 0x40C00000\n"
"mad_ieee r2.x___, r0.y_neg(xyzw), r2.x, l24\n"
"div_zeroop(infinity) r1.___w, r1.w, r2.x\n"
"mad_ieee r2.x___, r1.y, r1.w, r0.x_neg(xyzw)\n"
"mul_ieee r1.___w, r1.y, r1.w\n"
"mad_ieee r1._y__, r0.y, r1.w, r1.y_neg(xyzw)\n"
"mad_ieee r0.x___, r0.y, r2.x, r0.x_neg(xyzw)\n"
"mad_ieee r0.x___, r0.y_neg(xyzw), r1.x, r0.x\n"
"dcl_literal l25, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r1.x___, l25, r1.z_neg(xyzw)\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1.x___, r1.x, l26\n"
"add r1.x___, r0.x, r1.x\n"
"add r1.x___, r0.y, r1.x_neg(xyzw)\n"
"dcl_literal l27, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.x___, r1.x, l27\n"
"add r1.___w, r0.y_neg(xyzw), r0.x\n"
"add r0.x___, r0.y, r0.x_neg(xyzw)\n"
"add r0._y__, r0.y, r1.y_neg(xyzw)\n"
"dcl_literal l28, 0x01000000, 0x01000000, 0x01000000, 0x01000000\n"
"ushr r1._y__, l28, r1.z\n"
"dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1._y__, l29, r1.y_neg(xyzw)\n"
"add r1._y__, r1.w_neg(xyzw), r1.y\n"
"dcl_literal l30, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.___w, r1.w_neg(xyzw), l30\n"
"dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ige r2.x___, r1.z, l31\n"
"cmov_logical r1.x___, r2.x, r1.x, r1.y\n"
"dcl_literal l32, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r5, r1.x, l32\n"
"itof r1.x___, r1.z\n"
"dcl_literal l33, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"lt r1._y__, l33, r1.x_abs\n"
"ftoi r2.x___, r1.x_abs\n"
"dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1.x___, r1.x, l34\n"
"dcl_literal l35, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"cmov_logical r1._y__, r1.y, l35, r2.x\n"
"inegate r2.x___, r1.y\n"
"cmov_logical r1.x___, r1.x, r2.x, r1.y\n"
"dcl_literal l36, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r1._y__, r1.x, l36\n"
"cmov_logical r2.x___, r5.z, r1.x, r1.y\n"
"dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2._y__, r2.x, l37\n"
"itof r2.__z_, r5.w\n"
"cmov_logical r2.__z_, r5.z, r5.x, r2.z\n"
"iadd r2._y__, r2.z, r2.y\n"
"dcl_literal l38, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r3._y_w, r2.z, l38\n"
"dcl_literal l39, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r3.y, l39\n"
"dcl_literal l40, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3._y__, r3.w, l40\n"
"iadd r2.x___, r2.z, r2.x\n"
"dcl_literal l41, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l41\n"
"dcl_literal l42, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r2.__z_, l42, r2.x\n"
"dcl_literal l43, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.x___, l43, r2.x_neg(xyzw)\n"
"dcl_literal l44, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2._y__, r2.z, l44, r2.y\n"
"dcl_literal l45, 0x00000017, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r5.x_z_, l45, r2.x\n"
"dcl_literal l46, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2.__z_, r5.x, l46, r2.x\n"
"dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r2.x, l47\n"
"dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r2.x, l48, r2.z\n"
"ishr r2.x___, r3.y, r2.x\n"
"cmov_logical r2.x___, r5.z, r2.x, r2.y\n"
"itof r2._y__, r1.x\n"
"dcl_literal l49, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"lt r2._y__, l49, r2.y\n"
"dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.x___, r2.y, l50, r2.x\n"
"ior r2.__z_, r5.y, r2.x\n"
"dcl_literal l51, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r3._y__, l51, r2.x\n"
"cmov_logical r2.x___, r3.y, r2.z, r2.x\n"
"dcl_literal l52, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r5, r1.w, l52\n"
"cmov_logical r1.x___, r5.z, r1.x, r1.y\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1._y__, r1.x, l53\n"
"itof r1.___w, r5.w\n"
"cmov_logical r1.___w, r5.z, r5.x, r1.w\n"
"iadd r1._y__, r1.w, r1.y\n"
"dcl_literal l54, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r3._y_w, r1.w, l54\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.___w, r3.y, l55\n"
"dcl_literal l56, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r2.__z_, r3.w, l56\n"
"iadd r1.x___, r1.w, r1.x\n"
"dcl_literal l57, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1.x___, r1.x, l57\n"
"dcl_literal l58, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.___w, l58, r1.x\n"
"dcl_literal l59, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r1.x___, l59, r1.x_neg(xyzw)\n"
"dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1._y__, r1.w, l60, r1.y\n"
"dcl_literal l61, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"ilt r3._y_w, l61, r1.x\n"
"dcl_literal l62, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r1.___w, r3.y, l62, r1.x\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r1.x, l63\n"
"dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.x___, r1.x, l64, r1.w\n"
"ishr r1.x___, r2.z, r1.x\n"
"cmov_logical r1.x___, r3.w, r1.x, r1.y\n"
"dcl_literal l65, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1.x___, r2.y, l65, r1.x\n"
"ior r1._y__, r5.y, r1.x\n"
"dcl_literal l66, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r1.___w, l66, r1.x\n"
"cmov_logical r1.x___, r1.w, r1.y, r1.x\n"
"dcl_literal l67, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r1._y__, r1.x, l67\n"
"dcl_literal l68, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.___w, r1.x, l68\n"
"cmov_logical r1.x___, r1.y, r1.x, r1.w\n"
"dcl_literal l69, 0xFFFFFFFE, 0xFFFFFFFE, 0xFFFFFFFE, 0xFFFFFFFE\n"
"ige r1._y__, l69, r1.z\n"
"dcl_literal l70, 0x00000038, 0x00000038, 0x00000038, 0x00000038\n"
"ilt r1.___w, l70, r1.z\n"
"ior r1._y__, r1.y, r1.w\n"
"cmov_logical r1.x___, r1.y, r1.x, r2.x\n"
"dcl_literal l71, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"dcl_literal l72, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"mad_ieee r0.x___, r0.x, l71, l72\n"
"dcl_literal l73, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"ieq r1._y__, r1.z, l73\n"
"cmov_logical r0.x___, r1.y, r0.x, r1.x\n"
"cmov_logical r0.x___, r1.z, r0.x, r0.y\n"
"cmov_logical r0.x___, r4.y, r3.x, r0.x\n"
"dcl_literal l74, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.z, l74, r0.x\n"
"and r0._y__, r2.w, r0.w\n"
"and r0.__z_, r4.w, r2.w\n"
"and r0.___w, r4.x, r4.w\n"
"dcl_literal l75, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.x___, r0.y, l75, r0.x\n"
"dcl_literal l76, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.w, l76, r0.x\n"
"dcl_literal l77, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.x___, r0.z, l77, r0.x\n"
"dcl_literal l78, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r3.z, l78, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__exp_f32",
"mdef(209)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0xC2CFF1B5, 0x00000000\n"
"lt r0._yz_, r0.x, l0\n"
"dcl_literal l1, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r0._y__, r0.y, l1, l2\n"
"dcl_literal l3, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0._y__, r0.x, l3, r0.y\n"
"round_z r0._y__, r0.y\n"
"dcl_literal l4, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.___w, r0.y_neg(xyzw), l4, r0.x\n"
"dcl_literal l5, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1.x___, r0.y_neg(xyzw), l5, r0.w\n"
"mul_ieee r1._y__, r1.x, r1.x\n"
"dcl_literal l6, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"dcl_literal l7, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r1.__z_, r1.y, l6, l7\n"
"dcl_literal l8, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r1.__z_, r1.y, r1.z, l8\n"
"dcl_literal l9, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r1.__z_, r1.y, r1.z, l9\n"
"dcl_literal l10, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r1.__z_, r1.y, r1.z, l10\n"
"mad_ieee r1._y__, r1.y_neg(xyzw), r1.z, r1.x\n"
"mul_ieee r1.x___, r1.x, r1.y\n"
"dcl_literal l11, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1._y__, r1.y_neg(xyzw), l11\n"
"div_zeroop(infinity) r1.x___, r1.x, r1.y\n"
"dcl_literal l12, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1.x___, r0.y, l12, r1.x_neg(xyzw)\n"
"add r0.___w, r0.w_neg(xyzw), r1.x\n"
"dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.w_neg(xyzw), l13\n"
"dcl_literal l14, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r1, r0.w, l14\n"
"ftoi r0.___w, r0.y\n"
"dcl_literal l15, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r0._y__, l15, r0.y\n"
"dcl_literal l16, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.x___, r0.w, l16\n"
"cmov_logical r0.___w, r1.z, r0.w, r2.x\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r0.w, l17\n"
"itof r1.___w, r1.w\n"
"cmov_logical r1.x___, r1.z, r1.x, r1.w\n"
"iadd r1.__z_, r1.x, r2.x\n"
"dcl_literal l18, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF\n"
"and r1.x__w, r1.x, l18\n"
"dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l19\n"
"dcl_literal l20, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l20\n"
"iadd r0.___w, r1.x, r0.w\n"
"dcl_literal l21, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l21\n"
"dcl_literal l22, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.x___, l22, r0.w\n"
"dcl_literal l23, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.___w, l23, r0.w_neg(xyzw)\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1.x___, r1.x, l24, r1.z\n"
"dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.__z_, l25, r0.w\n"
"dcl_literal l26, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.___w, r1.z, l26, r0.w\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.___w, r0.w, l27\n"
"ishr r1.__z_, r1.w, r0.w\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l28, r0.w\n"
"cmov_logical r0.___w, r0.w, r1.z, r1.x\n"
"dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l29, r0.w\n"
"ior r0._y__, r1.y, r0.y\n"
"dcl_literal l30, 0x42B17218, 0x42B17218, 0x42B17218, 0x42B17218\n"
"ge r0.___w, r0.x, l30\n"
"dcl_literal l31, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r1.x___, r0.x, l31\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1._y__, r1.x, l32\n"
"and r0.__zw, r0.zzzw, r1.y\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.w, l33, r0.y\n"
"dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l34, r0.y\n"
"dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l35, r1.x\n"
"dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r1.x, l36\n"
"dcl_literal l37, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l37\n"
"cmov_logical r0._y__, r0.z, r1.x, r0.y\n"
"dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, r0.x, l38\n"
"and r0.__z_, r0.w, r0.z\n"
"dcl_literal l39, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l39, r0.y\n"
"dcl_literal l40, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l40, r0.x\n"
"and r0.__z_, r0.w, r0.z\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fabs_f32",
"mdef(210)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.x___, r0.x, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fast_distance_2f32",
"mdef(211)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"add r2._yz_, r0.xxyx, r1.xxyx_neg(xyzw)\n"
"dp2_ieee r2._y__, r2.yzyy, r2.yzyy\n"
"sqrt_vec r0.x___, r2.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fast_distance_4f32",
"mdef(212)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"add r0, r0, r1_neg(xyzw)\n"
"dp2_ieee r0.x___, r0.xyxx, r0.xyxx\n"
"mad_ieee r0.x___, r0.z, r0.z, r0.x\n"
"mad_ieee r0.x___, r0.w, r0.w, r0.x\n"
"sqrt_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fast_distance_f32",
"mdef(213)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"add r2._y__, r0.x, r1.x_neg(xyzw)\n"
"mov r0.x___, r2.y_abs\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fast_length_2f32",
"mdef(214)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r1._y__, r0.xyxx, r0.xyxx\n"
"sqrt_vec r0.x___, r1.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fast_length_4f32",
"mdef(215)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r0.x___, r0.xyxx, r0.xyxx\n"
"mad_ieee r0.x___, r0.z, r0.z, r0.x\n"
"mad_ieee r0.x___, r0.w, r0.w, r0.x\n"
"sqrt_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fast_length_f32",
"mdef(216)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x___, r0.x_abs\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fast_normalize_2f32",
"mdef(217)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r2.x___, r0.xyxx, r0.xyxx\n"
"rsq_vec r2._y__, r2.x\n"
"mov r2.__zw, r0.xxxy_abs\n"
"\n"
"dcl_literal l7, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ilt r2.__zw, l7, r2.zzzw\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000001, 0x00000001\n"
"and r2.__zw, r2.zzzw, l8\n"
"iadd r2.__z_, r2.z, r2.w\n"
"mul_ieee r2._y_w, r0.xxxy, r2.y\n"
"\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r2.x___, r2.x, l9\n"
"\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.xy__, r2.x, l10, r2.ywyy\n"
"\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.__z_, l11, r2.z\n"
"\n"
"dcl_literal l12, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r2.z, l12, r2.xyxx\n"
"\n"
"\n"
"mov r0.__zw, l13\n"
"\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fast_normalize_4f32",
"mdef(218)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r2.x___, r0.xyxx, r0.xyxx\n"
"mad_ieee r2.x___, r0.z, r0.z, r2.x\n"
"mad_ieee r2.x___, r0.w, r0.w, r2.x\n"
"rsq_vec r2._y__, r2.x\n"
"mov r3, r0_abs\n"
"\n"
"dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r3, l14, r3\n"
"\n"
"dcl_literal l15, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3, r3, l15\n"
"iadd r2.__z_, r3.x, r3.y\n"
"iadd r2.__z_, r2.z, r3.z\n"
"iadd r2.__z_, r2.z, r3.w\n"
"mul_ieee r0, r0, r2.y\n"
"\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r2.x___, r2.x, l16\n"
"\n"
"dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0, r2.x, l17, r0\n"
"\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, l18, r2.z\n"
"\n"
"dcl_literal l19, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0, r2.x, l19, r0\n"
"\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fast_normalize_f32",
"mdef(219)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r2.x___, r0.x_abs\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r2.__z_, l1, r2.x\n"
"and r2._y__, r2.y, r2.z\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"uge r2.x___, l2, r2.x\n"
"and r2._y__, r2.y, r2.x\n"
"\n"
"dcl_literal l3, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r2._y__, r2.y, l3, r0.x\n"
"\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, l4, r0.x\n"
"and r2.__z_, r2.z, r2.w\n"
"and r2.x___, r2.x, r2.z\n"
"\n"
"dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l5, r2.y\n"
"\n"
"\n"
"mov r0._yzw, l6\n"
"\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fdim_f32",
"mdef(220)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000\n"
"and r1, r0.xyxy, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ilt r0.__zw, l1, r1.xxxy\n"
"\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__zw, r1.zzzw, l2\n"
"\n"
"dcl_literal l3, 0x00000018, 0x00000018, 0x00000000, 0x00000000\n"
"ige r2.xy__, l3, r1.zwzz\n"
"and r2.x___, r2.y, r2.x\n"
"if_logicalnz r2.x\n"
"    \n"
"    dcl_literal l4, 0x80000000, 0x7F800000, 0x007FFFFF, 0x80000000\n"
"    and r2, r0.xxxy, l4\n"
"    \n"
"    dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.x___, r2.y, l5\n"
"    itof r2.__z_, r2.z\n"
"    \n"
"    dcl_literal l6, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3._yz_, r2.z, l6\n"
"    \n"
"    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.__z_, r3.y, l7\n"
"    \n"
"    dcl_literal l8, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"    iadd r2.__z_, r2.z, l8\n"
"    \n"
"    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.z, l9\n"
"    \n"
"    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r2.__z_, l10, r2.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.__z_, l11, r2.z\n"
"    \n"
"    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r3.z, l12, r2.z\n"
"    \n"
"    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3.__z_, l13, r2.z\n"
"    ishr r3.___w, r3.y, r2.z\n"
"    inegate r2.__z_, r2.z\n"
"    \n"
"    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.__z_, r2.z, l14\n"
"    iadd r2.__z_, r3.y, r2.z\n"
"    cmov_logical r2.__z_, r3.z, r3.w, r2.z\n"
"    \n"
"    dcl_literal l15, 0x18000000, 0x18000000, 0x00000000, 0x00000000\n"
"    iadd r1.xy__, r1.xyxx, l15\n"
"    \n"
"    dcl_literal l16, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1\n"
"    iadd r3.x___, r3.x, l16\n"
"    \n"
"    dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.x___, l17, r3.x\n"
"    \n"
"    dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.x___, r3.x, l18, r1.x\n"
"    cmov_logical r1.x___, r2.y, r1.x, r2.z\n"
"    ior r1.x___, r2.x, r1.x\n"
"    \n"
"    dcl_literal l19, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r2.xy__, r0.y, l19\n"
"    \n"
"    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.__z_, r2.x, l20\n"
"    itof r2._y__, r2.y\n"
"    \n"
"    dcl_literal l21, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r3.xy__, r2.y, l21\n"
"    \n"
"    dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2._y__, r3.x, l22\n"
"    \n"
"    dcl_literal l23, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"    iadd r2._y__, r2.y, l23\n"
"    \n"
"    dcl_literal l24, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.x___, r3.y, l24\n"
"    \n"
"    dcl_literal l25, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r2._y__, l25, r2.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3._y__, l26, r2.y\n"
"    \n"
"    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2._y__, r3.y, l27, r2.y\n"
"    \n"
"    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3._y__, l28, r2.y\n"
"    ishr r3.__z_, r3.x, r2.y\n"
"    inegate r2._y__, r2.y\n"
"    \n"
"    dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2._y__, r2.y, l29\n"
"    iadd r2._y__, r3.x, r2.y\n"
"    cmov_logical r2._y__, r3.y, r3.z, r2.y\n"
"    \n"
"    dcl_literal l30, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1\n"
"    iadd r2.__z_, r2.z, l30\n"
"    \n"
"    dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.__z_, l31, r2.z\n"
"    \n"
"    dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1._y__, r2.z, l32, r1.y\n"
"    cmov_logical r1._y__, r2.x, r1.y, r2.y\n"
"    ior r1._y__, r2.w, r1.y\n"
"    lt r2.x___, r1.y, r1.x\n"
"    add r1.x___, r1.x, r1.y_neg(xyzw)\n"
"    and r1.x___, r2.x, r1.x\n"
"    \n"
"    dcl_literal l33, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r2, r1.x, l33\n"
"    \n"
"    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r2.z, l34\n"
"    itof r1._y__, r2.w\n"
"    \n"
"    dcl_literal l35, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r3.xy__, r1.y, l35\n"
"    \n"
"    dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1._y__, r3.x, l36\n"
"    \n"
"    dcl_literal l37, 0xFFFFFFD0, 0xFFFFFFD0, 0xFFFFFFD0, 0xFFFFFFD0\n"
"    iadd r1._y__, r1.y, l37\n"
"    \n"
"    dcl_literal l38, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.x___, r3.y, l38\n"
"    \n"
"    dcl_literal l39, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r1._y__, l39, r1.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l40, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3._y__, l40, r1.y\n"
"    \n"
"    dcl_literal l41, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1._y__, r3.y, l41, r1.y\n"
"    \n"
"    dcl_literal l42, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3._y__, l42, r1.y\n"
"    ishr r3.__z_, r3.x, r1.y\n"
"    inegate r1._y__, r1.y\n"
"    \n"
"    dcl_literal l43, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1._y__, r1.y, l43\n"
"    iadd r1._y__, r3.x, r1.y\n"
"    cmov_logical r1._y__, r3.y, r3.z, r1.y\n"
"    \n"
"    dcl_literal l44, 0xE8000000, 0xE8000000, 0xE8000000, 0xE8000000\n"
"    iadd r2.x___, r2.x, l44\n"
"    \n"
"    dcl_literal l45, 0xFFFFFF51, 0xFFFFFF51, 0xFFFFFF51, 0xFFFFFF51\n"
"    iadd r1.x___, r1.x, l45\n"
"    \n"
"    dcl_literal l46, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.x___, l46, r1.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l47, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r2.w, l47\n"
"    \n"
"    dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.x___, l48, r1.x\n"
"    \n"
"    dcl_literal l49, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.x___, r3.x, l49, r1.x\n"
"    ishr r2.___w, r2.w, r1.x\n"
"    \n"
"    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, l50, r1.x\n"
"    cmov_logical r1.x___, r1.x, r2.w, r2.x\n"
"    cmov_logical r1.x___, r2.z, r1.x, r1.y\n"
"    ior r1.x___, r2.y, r1.x\n"
"else\n"
"    \n"
"    dcl_literal l51, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1._yz_, r1.zzwz, r0.xxyx, l51\n"
"    lt r1.___w, r1.z, r1.y\n"
"    add r1._y__, r1.z_neg(xyzw), r1.y\n"
"    and r1.x___, r1.w, r1.y\n"
"endif\n"
"\n"
"dcl_literal l52, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000\n"
"ior r0.xy__, r0.xyxx, l52\n"
"cmov_logical r0.x___, r0.z, r0.x, r1.x\n"
"cmov_logical r0.x___, r0.w, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fdiv_f32",
"mdef(221)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l1, 0x7f800000, 0x7f800000, 0x807fffff, 0x807fffff\n"
"dcl_literal l2, 0x7f800000, 0x7f800000, 0, 0\n"
"dcl_literal l3, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"dcl_literal l4, 0x3f800000, 0x3f800000, 0, 0\n"
"dcl_literal l5, 0, 0, 0, 0\n"
"dcl_literal l6, 0x7fffffff, 0x80000000, 0x7fffffff, 0x80000000\n"
"dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"dcl_literal l9, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff\n"
"mov r2.x___, r0.x\n"
"mov r2._y__, r1.x\n"
"and r3.xyzw, r2.xyxy, l1\n"
"ieq r4.xyzw, r3.xyxy, l2\n"
"and r5.xy__, r2.xy, l3\n"
"ior r3.__zw, r3.zwzw, l4.xyxy\n"
"cmov_logical r3.__zw, r4.zwzw, r5.xyxy, r3.zwzw\n"
"cmov_logical r3.__zw, r4.xyxy, r2.xyxy, r3.zwzw\n"
"ior r5.xy__, r4.xz, r4.yw\n"
"ior r5.x___, r5.x, r5.y\n"
"inegate r5.__z_, r3.yyyy\n"
"iadd r3.x___, r3.x, r5.z\n"
"cmov_logical r3.x___, r5.xxxx, l5, r3.xxxx\n"
"rcp_zeroop(infinity) r2._y__, r3.ww\n"
"mul_ieee r2.x___, r3.z, r2.y\n"
"and r2.__zw, r2.xxxx, l6.xyzw\n"
"ishr r6.x___, r2.z, l8\n"
"ishr r6._y__, r3.xxxx, l8\n"
"iadd r2.xy__, r2.xzxz, r3.xxxx\n"
"iadd r6.x___, r6.x, r6.y\n"
"ige r4.__z_, l5, r6.x\n"
"ior r4._y__, r2.wwww, l1\n"
"ige r4.x, r6.x, l9\n"
"cmov_logical r4.x, r5.x, l5, r4.x\n"
"cmov_logical r2.x, r4.z, r2.w, r2.x\n"
"cmov_logical r0.x, r4.x, r4.y, r2.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__floor_f32",
"mdef(222)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_neginf r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__fmax_f32",
"mdef(223)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__,r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000\n"
"and r1, r0.xyxy, l0\n"
"ixor r0.__z_, r1.w, r1.z\n"
"dcl_literal l1, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, l1, r1.xyxx\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r0.z, l2\n"
"inot r0.___w, r0.z\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r0.x, l3\n"
"and r1.__zw, r0.zzzw, r1.z\n"
"ilt r2.xy__, r0.yxyy, r0.xyxx\n"
"and r1.___w, r1.w, r2.x\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r0.x, l4\n"
"and r0.__zw, r0.zzzw, r2.x\n"
"and r0.___w, r2.y, r0.w\n"
"ior r0.___w, r1.w, r0.w\n"
"ior r0.___w, r1.z, r0.w\n"
"cmov_logical r0.___w, r0.w, r0.x, r0.y\n"
"inot r1.__zw, r1.yyyx\n"
"and r1.x_zw, r1.yyzw, r1.xxxy\n"
"ior r0.__z_, r0.z, r1.z\n"
"cmov_logical r0._y__, r0.z, r0.y, r0.w\n"
"cmov_logical r0.x___, r1.w, r0.x, r0.y\n"
"dcl_literal l5, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r1.x, l5, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fma_f32",
"mdef(224)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mad_ieee r3.x, r0.x, r1.x, r2.x\n"
"mov r4.x, r2.x\n"
"dcl_literal l1, 23, 23, 23, 23\n"
"ishr r24.x, r0.x, l1.x\n"
"ishr r25.x, r1.x, l1.x\n"
"ishr r26.x, r2.x, l1.x\n"
"dcl_literal l2, 0xff, 0xff, 0xff, 0xff\n"
"iand r24.x, r24.x, l2.x\n"
"iand r25.x, r25.x, l2.x\n"
"iand r26.x, r26.x, l2.x\n"
"dcl_literal l3, -127, -127, -127, -127\n"
"iadd r24.x, r24.x, l3.x\n"
"iadd r25.x, r25.x, l3.x\n"
"iadd r26.x, r26.x, l3.x\n"
"iadd r27.x, r24.x, r25.x\n"
"iadd r28.x, r26.x, r27.x_neg(xyzw)\n"
"dcl_literal l4, 127, 127, 127, 127\n"
"iadd r28.x, r28.x, l4.x\n"
"ishl r28.x, r28.x, l1.x\n"
"ieq r29.x, r24.x, l3.x\n"
"ieq r30.x, r25.x, l3.x\n"
"ieq r31.x, r26.x, l3.x\n"
"dcl_literal l5, 128, 128, 128, 128\n"
"ieq r32.x, r24.x, l5.x\n"
"ieq r33.x, r25.x, l5.x\n"
"ieq r34.x, r26.x, l5.x\n"
"ior r29.x, r29.x, r32.x\n"
"ior r30.x, r30.x, r33.x\n"
"ior r31.x, r31.x, r34.x\n"
"ior r35.x, r29.x, r30.x\n"
"ior r35.x, r35.x, r31.x\n"
"ior r36.x, r32.x, r33.x\n"
"inot r36.x, r36.x\n"
"iand r36.x, r36.x, r34.x\n"
"dcl_literal l6, 0x807fffff, 0x807fffff, 0x807fffff, 0x807fffff\n"
"iand r37.x, r0.x, l6.x\n"
"iand r38.x, r1.x, l6.x\n"
"iand r39.x, r2.x, l6.x\n"
"dcl_literal l7, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000\n"
"ior r37.x, r37.x, l7.x\n"
"ior r38.x, r38.x, l7.x\n"
"ior r39.x, r39.x, r28.x\n"
"mov r0.x, r37.x\n"
"mov r1.x, r38.x\n"
"mov r2.x, r39.x\n"
"dcl_literal l8, 0xfffff000, 0xfffff000, 0xfffff000, 0xfffff000\n"
"iand r5.x, r37.x, l8.x\n"
"iand r6.x, r38.x, l8.x\n"
"add r7.x, r0.x, r5.x_neg(xyzw)\n"
"add r8.x, r1.x, r6.x_neg(xyzw)\n"
"mul_ieee r9.x, r0.x, r1.x\n"
"mad_ieee r10.x, r5.x, r6.x, r9.x_neg(xyzw)\n"
"mad_ieee r10.x, r5.x, r8.x, r10.x\n"
"mad_ieee r10.x, r7.x, r6.x, r10.x\n"
"mad_ieee r10.x, r7.x, r8.x, r10.x\n"
"add r11.x, r9.x, r2.x\n"
"add r12.x, r9.x, r11.x_neg(xyzw)\n"
"add r12.x, r12.x, r2.x\n"
"add r13.x, r2.x, r11.x_neg(xyzw)\n"
"add r13.x, r13.x, r9.x\n"
"dcl_literal l9, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff\n"
"iand r40.x, r9.x, l9.x\n"
"iand r41.x, r2.x, l9.x\n"
"ilt r42.x, r41.x, r40.x\n"
"cmov_logical r14.x, r42.x, r12.x, r13.x\n"
"add r15.x, r14.x, r10.x\n"
"add r16.x, r14.x, r15.x_neg(xyzw)\n"
"add r16.x, r16.x, r10.x\n"
"add r17.x, r10.x, r15.x_neg(xyzw)\n"
"add r17.x, r17.x, r14.x\n"
"iand r40.x, r14.x, l9.x\n"
"iand r41.x, r10.x, l9.x\n"
"ilt r42.x, r41.x, r40.x\n"
"cmov_logical r18.x, r42.x, r16.x, r17.x\n"
"iadd r40.x, r27.x, r26.x_neg(xyzw)\n"
"dcl_literal l10, 60, 60, 60, 60\n"
"ilt r42.x, r40.x, l10.x\n"
"cmov_logical r19.x, r42.x, r11.x, r9.x\n"
"cmov_logical r20.x, r42.x, r15.x, r10.x\n"
"cmov_logical r21.x, r42.x, r18.x, r4.x\n"
"dcl_literal l11, 0x7f800000, 0x7f800000, 0x7f800000, 0x7f800000\n"
"iand r43.x, r19.x, l11.x\n"
"iand r44.x, r20.x, l11.x\n"
"iadd r45.x, r43.x, r44.x_neg(xyzw)\n"
"dcl_literal l12, 0x0c000000, 0x0c000000, 0x0c000000, 0x0c000000\n"
"ieq r45.x, r45.x, l12.x\n"
"dcl_literal l13, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff\n"
"iand r43.x, r20.x, l13.x\n"
"dcl_literal l14, 0, 0, 0, 0\n"
"ieq r43.x, r43.x, l14.x\n"
"iand r44.x, r21.x, l9.x\n"
"ine r44.x, r44.x, l14.x\n"
"iand r45.x, r45.x, r43.x\n"
"iand r45.x, r45.x, r44.x\n"
"dcl_literal l15, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"iand r46.x, r21.x, l15.x\n"
"iand r47.x, r20.x, l11.x\n"
"dcl_literal l16, 0xf4800000, 0xf4800000, 0xf4800000, 0xf4800000\n"
"iadd r47.x, r47.x, l16.x\n"
"ior r21.x, r46.x, r47.x\n"
"add r22.x, r20.x, r21.x\n"
"cmov_logical r20.x, r45.x, r22.x, r20.x\n"
"add r23.x, r19.x, r20.x\n"
"ishr r48.x, r23.x, l1.x\n"
"iand r48.x, r48.x, l2.x\n"
"iadd r48.x, r48.x, l3.x\n"
"iadd r48.x, r48.x, r27.x\n"
"iadd r48.x, r48.x, l4.x\n"
"iand r49.x, r48.x, l2.x\n"
"ishl r49.x, r49.x, l1.x\n"
"iand r50.x, r23.x, l6.x\n"
"ior r50.x, r50.x, r49.x\n"
"iand r40.x, r23.x, l9.x\n"
"ieq r42.x, r40.x, l14.x\n"
"cmov_logical r23.x, r42.x, r23.x, r50.x\n"
"iand r51.x, r23.x, l15.x\n"
"ige r42.x, l14.x, r48.x\n"
"cmov_logical r23.x, r42.x, r51.x, r23.x\n"
"ior r51.x, r51.x, l11.x\n"
"dcl_literal l17, 254, 254, 254, 254\n"
"ilt r42.x, l17.x, r48.x\n"
"cmov_logical r23.x, r42.x, r51.x, r23.x\n"
"iadd r40.x, r26.x, r27.x_neg(xyzw)\n"
"dcl_literal l18, 30, 30, 30, 30\n"
"ilt r42.x, l18.x, r40.x\n"
"cmov_logical r23.x, r42.x, r4.x, r23.x\n"
"cmov_logical r23.x, r35.x, r3.x, r23.x\n"
"cmov_logical r23.x, r36.x, r4.x, r23.x\n"
"mov r0.x, r23.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__fma_f64",
"mdef(225)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"dmad r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__fmin_f32",
"mdef(226)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000\n"
"and r1, r0.xyxy, l0\n"
"ixor r0.__z_, r1.w, r1.z\n"
"dcl_literal l1, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, l1, r1.xyxx\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r0.z, l2\n"
"inot r0.___w, r0.z\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r0.x, l3\n"
"and r1.__zw, r0.zzzw, r1.z\n"
"ilt r2.xy__, r0.xyxx, r0.yxyy\n"
"and r1.___w, r1.w, r2.x\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r0.x, l4\n"
"and r0.__zw, r0.zzzw, r2.x\n"
"and r0.___w, r2.y, r0.w\n"
"ior r0.___w, r1.w, r0.w\n"
"ior r0.__z_, r0.z, r0.w\n"
"cmov_logical r0.__z_, r0.z, r0.x, r0.y\n"
"inot r2.xy__, r1.yxyy\n"
"and r2.xy__, r1.xyxx, r2.xyxx\n"
"and r0.___w, r1.y, r1.x\n"
"ior r1.x___, r1.z, r2.x\n"
"cmov_logical r0._y__, r1.x, r0.y, r0.z\n"
"cmov_logical r0._y__, r2.y, r0.x, r0.y\n"
"dcl_literal l5, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l5\n"
"cmov_logical r0.x___, r0.w, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fmod_f32",
"mdef(227)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x7F800000\n"
"and r1, r0.xyxy, l0\n"
"dcl_literal l1, 0x7F800000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2.xyz_, r1.xyxx, l1\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r0.__z_, l2, r1.x\n"
"and r0.__z_, r2.x, r0.z\n"
"dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.w, l3\n"
"dcl_literal l4, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ilt r1.___w, r0.w, l4\n"
"and r1.___w, r2.y, r1.w\n"
"dcl_literal l5, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"iadd r0.___w, l5, r0.w_neg(xyzw)\n"
"and r0.___w, r1.w, r0.w\n"
"itof r1.___w, r0.w\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r1.___w, r1.w, l6\n"
"if_logicalnz r1.w\n"
"   \n"
"    dcl_literal l7, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r2.xy_w, r0.y, l7\n"
"    itof r2.___w, r2.w\n"
"    cmov_logical r2.x___, r2.y, r2.x, r2.w\n"
"   \n"
"    dcl_literal l8, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.___w, r0.w, l8\n"
"    cmov_logical r0.___w, r2.y, r0.w, r2.w\n"
"   \n"
"    dcl_literal l9, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r2._y_w, r2.x, l9\n"
"   \n"
"    dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2._y__, r2.y, l10\n"
"    iadd r2._y__, r2.y, r0.w\n"
"   \n"
"    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l11\n"
"    iadd r0.___w, r2.x, r0.w\n"
"   \n"
"    dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.x___, r2.y, l12\n"
"   \n"
"    dcl_literal l13, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2._y__, l13, r2.x\n"
"   \n"
"    dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r2.y, l14, r0.w\n"
"   \n"
"    dcl_literal l15, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.x___, l15, r2.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2._y__, r2.w, l16\n"
"   \n"
"    dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.___w, l17, r2.x\n"
"   \n"
"    dcl_literal l18, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.x___, r2.w, l18, r2.x\n"
"   \n"
"    dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.x___, r2.x, l19\n"
"    ishr r2._y__, r2.y, r2.x\n"
"   \n"
"    dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.x___, l20, r2.x\n"
"    cmov_logical r0.___w, r2.x, r2.y, r0.w\n"
"else\n"
"    mov r0.___w, r1.y\n"
"endif\n"
"dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.x___, r0.w, l21\n"
"dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r2.x, l22\n"
"dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2._y__, r0.x, l23\n"
"dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2._y__, r2.y, l24\n"
"ige r2.___w, r2.x, r2.y\n"
"iadd r2.x___, r2.y, r2.x_neg(xyzw)\n"
"itof r2.x___, r2.x\n"
"dcl_literal l25, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"mul_ieee r2.x___, r2.x, l25\n"
"round_neginf r2.x___, r2.x\n"
"dcl_literal l26, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r2.w, l26, r2.x\n"
"ftoi r2._y__, r2.x\n"
"dcl_literal l27, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"imul r2.___w, r2.y, l27\n"
"dcl_literal l28, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r2.___w, r2.w, l28\n"
"dcl_literal l29, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"imad r2._y__, r2.y, l29, r2.w_neg(xyzw)\n"
"dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r2.___w, r2.w, l30\n"
"dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.___w, r2.w, l31\n"
"mul_ieee r2.___w, r0.w, r2.w\n"
"dcl_literal l32, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r2._y__, r2.y, l32\n"
"dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2._y__, r2.y, l33\n"
"mul_ieee r2._y__, r2.w, r2.y\n"
"dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r2.___w, r2.x, l34\n"
"cmov_logical r0.___w, r2.w, r0.w, r2.y\n"
"dcl_literal l35, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"dcl_literal l36, 0x39800000, 0x39800000, 0x39800000, 0x39800000\n"
"cmov_logical r2._y__, r2.w, l35, l36\n"
"dcl_literal l37, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.___w, r0.w, l37\n"
"dcl_literal l38, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.___w, r2.w, l38\n"
"dcl_literal l39, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.___w, r2.w, l39\n"
"dcl_literal l40, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3.x___, r0.w, l40\n"
"dcl_literal l41, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r3._y__, l41, r2.w\n"
"dcl_literal l42, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r2.___w, l42, r2.w\n"
"and r2.___w, r3.y, r2.w\n"
"dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3._y__, r2.w, l43\n"
"dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r3.__z_, l44, r2.x\n"
"and r2.___w, r2.w, r3.z\n"
"cmov_logical r2.___w, r2.w, r3.x, r0.w\n"
"mov r3.x___, r1.x\n"
"mov r3.__z_, r2.w\n"
"mov r3.___w, r0.w\n"
"mov r4.x___, r3.y\n"
"dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r4._y__, l45\n"
"whileloop\n"
"    ge r4.__z_, r4.y, r2.x\n"
"    break_logicalnz r4.z\n"
"    div_zeroop(infinity) r4.__z_, r3.x, r3.z\n"
"   \n"
"    dcl_literal l46, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"    mul_ieee r4.___w, r4.z, l46\n"
"    cmov_logical r4.__z_, r4.x, r4.w, r4.z\n"
"    round_neginf r4.__z_, r4.z\n"
"   \n"
"    dcl_literal l47, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r4.___w, r3.w, l47\n"
"    add r5.x___, r3.w, r4.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l48, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r5._y__, r4.z, l48\n"
"    add r5.__z_, r4.z, r5.y_neg(xyzw)\n"
"    mul_ieee r4.__z_, r3.w, r4.z\n"
"    mad_ieee r5.___w, r4.w, r5.y, r4.z_neg(xyzw)\n"
"    mad_ieee r4.___w, r4.w, r5.z, r5.w\n"
"    mad_ieee r4.___w, r5.x, r5.y, r4.w\n"
"    mad_ieee r4.___w, r5.x, r5.z, r4.w\n"
"    add r5.x___, r3.x, r4.z_neg(xyzw)\n"
"    add r5._y__, r3.x, r5.x_neg(xyzw)\n"
"    add r4.__z_, r4.z_neg(xyzw), r5.y\n"
"    add r4.__z_, r4.w_neg(xyzw), r4.z\n"
"    add r4.__z_, r5.x, r4.z\n"
"   \n"
"    dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r4.___w, r4.z, l49\n"
"    add r5.x___, r3.w, r4.z\n"
"    cmov_logical r4.__z_, r4.w, r5.x, r4.z\n"
"   \n"
"    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r4.___w, r4.z, l50\n"
"    add r5.x___, r3.w, r4.z\n"
"    cmov_logical r4.__z_, r4.w, r5.x, r4.z\n"
"    ge r4.___w, r4.z, r3.w\n"
"    add r5.x___, r3.w_neg(xyzw), r4.z\n"
"    cmov_logical r3.x___, r4.w, r5.x, r4.z\n"
"    mul_ieee r3.___w, r2.y, r3.w\n"
"   \n"
"    dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r4._y__, r4.y, l51\n"
"    mov r3.x_zw, r3.xxww\n"
"   \n"
"    dcl_literal l52, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r4.x___, l52\n"
"endloop\n"
"mov r2.xy_w, r3.xzxz\n"
"dcl_literal l53, 0x7F800000, 0x7F800000, 0xFFFFF000, 0x00000000\n"
"and r3.xyz_, r2.xywx, l53\n"
"dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.xy__, r3.xyxx, l54\n"
"dcl_literal l55, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r3.y, l55\n"
"dcl_literal l56, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r2._y__, r2.w, l56\n"
"dcl_literal l57, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r3._y__, l57, r0.w\n"
"dcl_literal l58, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r0.___w, l58, r0.w\n"
"and r0.___w, r3.y, r0.w\n"
"cmov_logical r2._y__, r0.w, r2.y, r2.w\n"
"div_zeroop(infinity) r2._y__, r2.x, r2.y\n"
"dcl_literal l59, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3._y__, r2.y, l59\n"
"cmov_logical r0.___w, r0.w, r3.y, r2.y\n"
"round_neginf r0.___w, r0.w\n"
"add r2._y__, r2.w, r3.z_neg(xyzw)\n"
"dcl_literal l60, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3._y__, r0.w, l60\n"
"add r3.___w, r0.w, r3.y_neg(xyzw)\n"
"mul_ieee r0.___w, r2.w, r0.w\n"
"mad_ieee r4.x___, r3.z, r3.y, r0.w_neg(xyzw)\n"
"mad_ieee r3.__z_, r3.z, r3.w, r4.x\n"
"mad_ieee r3._y__, r2.y, r3.y, r3.z\n"
"mad_ieee r2._y__, r2.y, r3.w, r3.y\n"
"add r3._y__, r2.x, r0.w_neg(xyzw)\n"
"add r3.__z_, r2.x, r3.y_neg(xyzw)\n"
"add r0.___w, r0.w_neg(xyzw), r3.z\n"
"add r0.___w, r2.y_neg(xyzw), r0.w\n"
"add r0.___w, r3.y, r0.w\n"
"dcl_literal l61, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2._y__, r0.w, l61\n"
"add r3._y__, r2.w, r0.w\n"
"cmov_logical r0.___w, r2.y, r3.y, r0.w\n"
"dcl_literal l62, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2._y__, r0.w, l62\n"
"add r3._y__, r2.w, r0.w\n"
"cmov_logical r0.___w, r2.y, r3.y, r0.w\n"
"ge r2._y__, r0.w, r2.w\n"
"add r2.___w, r2.w_neg(xyzw), r0.w\n"
"cmov_logical r0.___w, r2.y, r2.w, r0.w\n"
"cmov_logical r0.___w, r3.x, r0.w, r2.x\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2.x___, r0.w, l63\n"
"and r1.___w, r1.w, r2.x\n"
"if_logicalnz r1.w\n"
"   \n"
"    dcl_literal l64, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF\n"
"    and r3, r0.w, l64\n"
"   \n"
"    dcl_literal l65, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ior r1.___w, r3.x, l65\n"
"   \n"
"    dcl_literal l66, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r1.___w, r1.w, l66\n"
"   \n"
"    dcl_literal l67, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r1.___w, r1.w, l67\n"
"   \n"
"    dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    iadd r1.___w, l68, r1.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l69, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r1.___w, r1.w, l69\n"
"   \n"
"    dcl_literal l70, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ushr r1.___w, r1.w, l70\n"
"   \n"
"    dcl_literal l71, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    cmov_logical r1.___w, r3.x, r1.w, l71\n"
"   \n"
"    dcl_literal l72, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.___w, r1.w_neg(xyzw), l72\n"
"   \n"
"    dcl_literal l73, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r2.x___, r3.x, l73\n"
"   \n"
"    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ine r2._y__, r3.x, l74\n"
"    and r2.x___, r2.x, r2.y\n"
"   \n"
"    dcl_literal l75, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2._y__, r3.y, l75\n"
"   \n"
"    dcl_literal l76, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2._y__, r2.y, l76\n"
"    cmov_logical r1.___w, r2.x, r1.w, r2.y\n"
"   \n"
"    dcl_literal l77, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r2.xy_w, r0.y, l77\n"
"   \n"
"    dcl_literal l78, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ior r0._y__, r2.x, l78\n"
"   \n"
"    dcl_literal l79, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r0._y__, r0.y, l79\n"
"   \n"
"    dcl_literal l80, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0._y__, r0.y, l80\n"
"   \n"
"    dcl_literal l81, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    iadd r0._y__, l81, r0.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l82, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0._y__, r0.y, l82\n"
"   \n"
"    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ushr r0._y__, r0.y, l83\n"
"   \n"
"    dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    cmov_logical r0._y__, r2.x, r0.y, l84\n"
"   \n"
"    dcl_literal l85, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0._y__, r0.y_neg(xyzw), l85\n"
"   \n"
"    dcl_literal l86, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r4.x___, r2.x, l86\n"
"   \n"
"    dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ine r4._y__, r2.x, l87\n"
"    and r4.x___, r4.x, r4.y\n"
"   \n"
"    dcl_literal l88, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4._y__, r2.y, l88\n"
"   \n"
"    dcl_literal l89, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4._y__, r4.y, l89\n"
"    cmov_logical r0._y__, r4.x, r0.y, r4.y\n"
"    inegate r4.x___, r0.y\n"
"    itof r4._y__, r4.x\n"
"    itof r2.___w, r2.w\n"
"    cmov_logical r2.x___, r2.y, r2.x, r2.w\n"
"   \n"
"    dcl_literal l90, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.___w, r4.x, l90\n"
"    cmov_logical r2._y__, r2.y, r4.x, r2.w\n"
"   \n"
"    dcl_literal l91, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"    and r4.__zw, r2.x, l91\n"
"   \n"
"    dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r4.z, l92\n"
"    iadd r2.___w, r2.w, r2.y\n"
"   \n"
"    dcl_literal l93, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2._y__, r2.y, l93\n"
"    iadd r2.x___, r2.x, r2.y\n"
"   \n"
"    dcl_literal l94, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2._y__, r2.w, l94\n"
"   \n"
"    dcl_literal l95, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.___w, l95, r2.y\n"
"   \n"
"    dcl_literal l96, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.x___, r2.w, l96, r2.x\n"
"   \n"
"    dcl_literal l97, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2._y__, l97, r2.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l98, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r4.w, l98\n"
"   \n"
"    dcl_literal l99, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l99, r2.y\n"
"   \n"
"    dcl_literal l100, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2._y__, r4.z, l100, r2.y\n"
"   \n"
"    dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2._y__, r2.y, l101\n"
"    ishr r2.___w, r2.w, r2.y\n"
"   \n"
"    dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, l102, r2.y\n"
"    cmov_logical r2.x___, r2.y, r2.w, r2.x\n"
"   \n"
"    dcl_literal l103, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r2._y__, l103, r4.y\n"
"   \n"
"    dcl_literal l104, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.x___, r2.y, l104, r2.x\n"
"    inegate r2._y__, r1.w\n"
"    itof r2.___w, r2.y\n"
"    itof r3.___w, r3.w\n"
"    cmov_logical r3.x___, r3.y, r3.x, r3.w\n"
"   \n"
"    dcl_literal l105, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r3.___w, r2.y, l105\n"
"    cmov_logical r2._y__, r3.y, r2.y, r3.w\n"
"   \n"
"    dcl_literal l106, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r3._y_w, r3.x, l106\n"
"   \n"
"    dcl_literal l107, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l107\n"
"    iadd r3._y__, r3.y, r2.y\n"
"   \n"
"    dcl_literal l108, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2._y__, r2.y, l108\n"
"    iadd r2._y__, r3.x, r2.y\n"
"   \n"
"    dcl_literal l109, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3.x___, r3.y, l109\n"
"   \n"
"    dcl_literal l110, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3._y__, l110, r3.x\n"
"   \n"
"    dcl_literal l111, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2._y__, r3.y, l111, r2.y\n"
"   \n"
"    dcl_literal l112, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.x___, l112, r3.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l113, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.w, l113\n"
"   \n"
"    dcl_literal l114, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.___w, l114, r3.x\n"
"   \n"
"    dcl_literal l115, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.x___, r3.w, l115, r3.x\n"
"   \n"
"    dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r3.x___, r3.x, l116\n"
"    ishr r3._y__, r3.y, r3.x\n"
"   \n"
"    dcl_literal l117, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3.x___, l117, r3.x\n"
"    cmov_logical r2._y__, r3.x, r3.y, r2.y\n"
"   \n"
"    dcl_literal l118, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r2.___w, l118, r2.w\n"
"   \n"
"    dcl_literal l119, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2._y__, r2.w, l119, r2.y\n"
"    ior r2._y__, r3.z, r2.y\n"
"    iadd r1.___w, r1.w, r4.x\n"
"    mov r2.___w, r2.y\n"
"    mov r3.x___, r1.w\n"
"    whileloop\n"
"       \n"
"        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ige r3._y__, l120, r3.x\n"
"        break_logicalnz r3.y\n"
"        ge r3._y__, r2.w, r2.x\n"
"        add r3.__z_, r2.x_neg(xyzw), r2.w\n"
"        cmov_logical r3._y__, r3.y, r3.z, r2.w\n"
"        add r2.___w, r3.y, r3.y\n"
"       \n"
"        dcl_literal l121, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r3.x___, r3.x, l121\n"
"    endloop\n"
"    ge r2._y__, r2.w, r2.x\n"
"    add r2.x___, r2.x_neg(xyzw), r2.w\n"
"    cmov_logical r2.x___, r2.y, r2.x, r2.w\n"
"    itof r2._y__, r0.y\n"
"   \n"
"    dcl_literal l122, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r3, r2.x, l122\n"
"    itof r2.x___, r3.w\n"
"    cmov_logical r2.x___, r3.z, r3.x, r2.x\n"
"   \n"
"    dcl_literal l123, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.___w, r0.y, l123\n"
"    cmov_logical r0._y__, r3.z, r0.y, r2.w\n"
"   \n"
"    dcl_literal l124, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r3.x_z_, r2.x, l124\n"
"   \n"
"    dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r3.x, l125\n"
"    iadd r2.___w, r2.w, r0.y\n"
"   \n"
"    dcl_literal l126, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l126\n"
"    iadd r0._y__, r2.x, r0.y\n"
"   \n"
"    dcl_literal l127, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.x___, r2.w, l127\n"
"   \n"
"    dcl_literal l128, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.___w, l128, r2.x\n"
"   \n"
"    dcl_literal l129, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r2.w, l129, r0.y\n"
"   \n"
"    dcl_literal l130, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.x___, l130, r2.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l131, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r3.z, l131\n"
"   \n"
"    dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.x___, l132, r2.x\n"
"   \n"
"    dcl_literal l133, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.x___, r3.x, l133, r2.x\n"
"   \n"
"    dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.x___, r2.x, l134\n"
"    ishr r2.___w, r2.w, r2.x\n"
"   \n"
"    dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.x___, l135, r2.x\n"
"    cmov_logical r0._y__, r2.x, r2.w, r0.y\n"
"   \n"
"    dcl_literal l136, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r2.x___, l136, r2.y\n"
"   \n"
"    dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r2.x, l137, r0.y\n"
"    ior r0._y__, r3.y, r0.y\n"
"   \n"
"    dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ige r1.___w, r1.w, l138\n"
"    cmov_logical r0.___w, r1.w, r0.y, r0.w\n"
"endif\n"
"dcl_literal l139, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ixor r0._y__, r0.w, l139\n"
"cmov_logical r0._y__, r1.z, r0.y, r0.w\n"
"dcl_literal l140, 0x7F800000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r1.x_zw, r1.yyxy, l140\n"
"dcl_literal l141, 0x7F800000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.xy__, l141, r1.y\n"
"and r0.___w, r1.z, r2.y\n"
"inot r1._y__, r2.x\n"
"and r0.___w, r0.w, r1.y\n"
"cmov_logical r0._y__, r0.w, r0.x, r0.y\n"
"inot r0.___w, r0.z\n"
"ior r0.___w, r1.w, r0.w\n"
"ior r0.___w, r2.x, r0.w\n"
"dcl_literal l142, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.w, l142, r0.y\n"
"and r0.__z_, r2.z, r0.z\n"
"and r0.__z_, r1.x, r0.z\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__fract_2f32f32",
"mdef(228)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_z r1._y__, r0.x\n"
"add r1.x___, r0.x, r1.y_neg(xyzw)\n"
"dcl_literal l0, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r2._yz_, r1.yyxy, l0\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r0.___w, r2.z, l1\n"
"dcl_literal l2, 0x3F7FFFFF, 0x3F7FFFFF, 0x3F7FFFFF, 0x3F7FFFFF\n"
"cmov_logical r2.x___, r0.w, l2, r2.z\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r1.x, l3\n"
"cmov_logical r1._yz_, r0.w, r2.xxyx, r1.xxyx\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r0.___w, r1.y, l4\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1.___w, r0.x, l5\n"
"and r0.___w, r0.w, r1.w\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r1.x___, r0.w, l6, r1.y\n"
"dcl_literal l7, 0x00000000, 0x7FFFFFFF, 0x00000000, 0x7F800000\n"
"and r1._y_w, r0.x, l7\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.___w, r1.w, l8\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.___w, r1.y, l9\n"
"and r0.___w, r0.w, r1.w\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.___w, r0.x, l10\n"
"and r0.___w, r0.w, r1.w\n"
"dcl_literal l11, 0x3F7FFFFF, 0x00000000, 0xBF800000, 0x00000000\n"
"cmov_logical r1.x_z_, r0.w, l11, r1.xxzx\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x80000000, 0x00000000\n"
"mov r0._yz_, l12\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l13, r0.x\n"
"dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ilt r1.___w, r1.y, l14\n"
"and r0.___w, r0.w, r1.w\n"
"cmov_logical r1.x_z_, r0.w, r0.xxyx, r1.xxzx\n"
"cmov_logical r1.x_z_, r1.y, r1.xxzx, r0.x\n"
"dcl_literal l15, 0x7F800000, 0xFF800000, 0x00000000, 0x00000000\n"
"ieq r2.xy__, r0.x, l15\n"
"dcl_literal l16, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, l16, r1.y\n"
"cmov_logical r1.xy__, r2.x, r0.yxyy, r1.xzxx\n"
"cmov_logical r0.xy__, r2.y, r0.zxzz, r1.xyxx\n"
"dcl_literal l17, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r0.w, l17, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__frexp_2f32f32",
"mdef(229)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x00000000, 0x80000000, 0x7FFFFFFF, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"itof r0.___w, r0.z\n"
"dcl_literal l1, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.w, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.x, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.x___, r1.y, l3\n"
"dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"iadd r0.___w, r0.w, l4\n"
"dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.___w, l5, r0.w_neg(xyzw)\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1._y__, l6, r0.w\n"
"dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.___w, r1.y, l7, r0.w\n"
"inegate r1._y__, r0.w\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1._y__, r1.y, l8\n"
"iadd r1._y__, r1.x, r1.y\n"
"ishr r1.x___, r1.x, r0.w\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l9, r0.w\n"
"cmov_logical r0.___w, r0.w, r1.x, r1.y\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.x___, r0.z, l10\n"
"dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r0.__z_, r0.z, l11\n"
"and r0.__z_, r1.x, r0.z\n"
"cmov_logical r0.x___, r0.z, r0.w, r0.x\n"
"dcl_literal l12, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7\n"
"and r0.__z_, r0.z, l12\n"
"ior r0._y__, r0.y, r0.x\n"
"dcl_literal l13, 0x00000000, 0x7FFFFFFF, 0x00000000, 0x807FFFFF\n"
"and r0._y_w, r0.y, l13\n"
"dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r0.y, l14\n"
"iadd r0.__z_, r1.x, r0.z\n"
"dcl_literal l15, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.__z_, l15, r0.z\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r0.y, r0.z, l16\n"
"dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r1.x___, r0.y, l17\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r1.x, l18, r0.z\n"
"dcl_literal l19, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"ior r0.__z_, r0.w, l19\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.y, r0.z, l20\n"
"cmov_logical r0.x___, r1.x, r0.x, r0.y\n"
"mov r0._y__, r2.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ftol_i64",
"mdef(230)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7F800000, 0x80000000, 0x007FFFFF, 0x00000000\n"
"and r0.xyz_, r0.x, l0\n"
"dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.x___, r0.x, l1\n"
"dcl_literal l2, 0xFFFFFF81, 0x00000000, 0x00000000, 0xFFFFFF6A\n"
"iadd r0.x__w, r0.x, l2\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r0.x, l3\n"
"dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ige r1._y__, l4, r0.x\n"
"and r1.x___, r1.x, r1.y\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"iadd r1._y__, l5, r0.x_neg(xyzw)\n"
"cmov_logical r0.___w, r1.x, r1.y, r0.w\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l6\n"
"dcl_literal l7, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"imin r0.___w, r0.w, l7\n"
"dcl_literal l8, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r1._y__, r0.w, l8\n"
"dcl_literal l9, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.__z_, r0.w, l9\n"
"cmov_logical r1._y__, r1.z, r1.y, r0.w\n"
"dcl_literal l10, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r1.___w, l10, r1.y_neg(xyzw)\n"
"dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0.__z_, r0.z, l11\n"
"ushr r1.___w, r0.z, r1.w\n"
"ishl r1._y__, r0.z, r1.y\n"
"cmov_logical r1.___w, r1.z, r1.y, r1.w\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.z, l12, r1.y\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2._y__, r0.w, r1.w, l13\n"
"cmov_logical r2.x___, r0.w, r1.y, r0.z\n"
"dcl_literal l14, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"imin r1._y__, r0.w, l14\n"
"dcl_literal l15, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"ieq r0.___w, r0.w, l15\n"
"ushr r0.__z_, r0.z, r1.y\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.z, l16, r0.z\n"
"dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r1.__z_, l17\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__zw, r0.w, l18, r1.yyyz\n"
"cmov_logical r0.__zw, r1.x, r0.zzzw, r2.xxxy\n"
"inot r1.xy__, r0.zwzz\n"
"dcl_literal l19, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r1.__z_, r1.x, l19\n"
"ult r1.x___, r1.z, r1.x\n"
"cmov_logical r1.__z_, r0.y, r1.z, r0.z\n"
"dcl_literal l20, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.__z_, r1.x, l20\n"
"iadd r0.__z_, r1.y, r0.z\n"
"cmov_logical r1.___w, r0.y, r0.z, r0.w\n"
"dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r0.x, l21, r1.zwzz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ftoul_i64",
"mdef(231)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7F800000, 0x007FFFFF, 0x80000000, 0x00000000\n"
"and r0.xyz_, r0.x, l0\n"
"dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.x___, r0.x, l1\n"
"dcl_literal l2, 0xFFFFFF81, 0x00000000, 0x00000000, 0xFFFFFF6A\n"
"iadd r0.x__w, r0.x, l2\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r0.x, l3\n"
"dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ige r1._y__, l4, r0.x\n"
"and r1.x___, r1.x, r1.y\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"iadd r1._y__, l5, r0.x_neg(xyzw)\n"
"cmov_logical r0.___w, r1.x, r1.y, r0.w\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l6\n"
"dcl_literal l7, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"imin r0.___w, r0.w, l7\n"
"dcl_literal l8, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r1._y__, r0.w, l8\n"
"dcl_literal l9, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.__z_, r0.w, l9\n"
"cmov_logical r1._y__, r1.z, r1.y, r0.w\n"
"dcl_literal l10, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r1.___w, l10, r1.y_neg(xyzw)\n"
"dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0._y__, r0.y, l11\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r0.z, l12\n"
"ushr r1.___w, r0.y, r1.w\n"
"ishl r1._y__, r0.y, r1.y\n"
"cmov_logical r1.___w, r1.z, r1.y, r1.w\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.z, l13, r1.y\n"
"dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2._y__, r0.w, r1.w, l14\n"
"cmov_logical r2.x___, r0.w, r1.y, r0.y\n"
"dcl_literal l15, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"imin r1._y__, r0.w, l15\n"
"dcl_literal l16, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"ieq r0.___w, r0.w, l16\n"
"ushr r0._y__, r0.y, r1.y\n"
"dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.z, l17, r0.y\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r1.__z_, l18\n"
"dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y_w, r0.w, l19, r1.yyyz\n"
"cmov_logical r0._y_w, r1.x, r0.yyyw, r2.xxxy\n"
"ior r0.x___, r0.x, r0.z\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r0.x, l20, r0.ywyy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ftz_2f32",
"mdef(232)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x7F800000, 0xFFFFFFFF, 0x80000000, 0x00000000\n"
"iand r1.xy_, r0.xy, l1.xxxx\n"
"cmov_logical r1.xy__, r1.xy, l1.yyyy, l1.zzzz\n"
"iand r0.xy__, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ftz_4f32",
"mdef(233)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x7F800000, 0xFFFFFFFF, 0x80000000, 0x00000000\n"
"iand r1, r0, l1.xxxx\n"
"cmov_logical r1, r1, l1.yyyy, l1.zzzz\n"
"iand r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ftz_f32",
"mdef(234)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x7F800000, 0xFFFFFFFF, 0x80000000, 0x00000000\n"
"iand r1.x___, r0.x, l1.x\n"
"cmov_logical r1.x___, r1.x, l1.y, l1.z\n"
"iand r0.x___, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_cos_f32",
"mdef(235)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x3A000000, 0x3A000000, 0x3A000000, 0x3A000000\n"
"ige r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"lt r0.___w, r0.y, l2\n"
"and r0.__z_, r0.z, r0.w\n"
"if_logicalnz r0.z\n"
"    mul_ieee r0.__z_, r0.y, r0.y\n"
"   \n"
"    dcl_literal l3, 0xAD47D74E, 0xAD47D74E, 0xAD47D74E, 0xAD47D74E\n"
"   \n"
"    dcl_literal l4, 0x310F74F6, 0x310F74F6, 0x310F74F6, 0x310F74F6\n"
"    mad_ieee r0.___w, r0.z, l3, l4\n"
"   \n"
"    dcl_literal l5, 0xB492923A, 0xB492923A, 0xB492923A, 0xB492923A\n"
"    mad_ieee r0.___w, r0.z, r0.w, l5\n"
"   \n"
"    dcl_literal l6, 0x37D00AE2, 0x37D00AE2, 0x37D00AE2, 0x37D00AE2\n"
"    mad_ieee r0.___w, r0.z, r0.w, l6\n"
"   \n"
"    dcl_literal l7, 0xBAB60B60, 0xBAB60B60, 0xBAB60B60, 0xBAB60B60\n"
"    mad_ieee r0.___w, r0.z, r0.w, l7\n"
"   \n"
"    dcl_literal l8, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB\n"
"    mad_ieee r0.___w, r0.z, r0.w, l8\n"
"    mul_ieee r1.x___, r0.z, r0.z\n"
"   \n"
"    dcl_literal l9, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r1._y__, r0.x, l9\n"
"   \n"
"    dcl_literal l10, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A\n"
"    ige r1.__z_, r1.y, l10\n"
"   \n"
"    dcl_literal l11, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ige r1.___w, l11, r1.y\n"
"    and r1.__z_, r1.z, r1.w\n"
"   \n"
"    dcl_literal l12, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000\n"
"    iadd r1.___w, r1.y, l12\n"
"    and r1.__z_, r1.z, r1.w\n"
"   \n"
"    dcl_literal l13, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ilt r1._y__, l13, r1.y\n"
"   \n"
"    dcl_literal l14, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000\n"
"    cmov_logical r1._y__, r1.y, l14, r1.z\n"
"   \n"
"    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r0.__z_, r0.z, l15, r1.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1._y__, r1.y_neg(xyzw), l16\n"
"    mad_ieee r0.__z_, r0.w_neg(xyzw), r1.x, r0.z\n"
"    add r0.__z_, r1.y, r0.z_neg(xyzw)\n"
"else\n"
"   \n"
"    dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0.__z_, l17\n"
"endif\n"
"dcl_literal l18, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"ge r0.___w, r0.y, l18\n"
"dcl_literal l19, 0x47800000, 0x47800000, 0x47800000, 0x47800000\n"
"ge r1.x___, l19, r0.y\n"
"and r0.___w, r0.w, r1.x\n"
"if_logicalnz r0.w\n"
"   \n"
"    dcl_literal l20, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"    mul_ieee r0.___w, r0.y, l20\n"
"    round_nearest r0.___w, r0.w\n"
"   \n"
"    dcl_literal l21, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r1.x___, r0.w, l21\n"
"    add r1._y__, r0.w, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l22, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"    mul_ieee r1.__z_, r0.w, l22\n"
"   \n"
"    dcl_literal l23, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"    mul_ieee r2.xyz_, r0.w, l23\n"
"   \n"
"    dcl_literal l24, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"    mad_ieee r3.xy__, r1.x, l24, r2.xyxx_neg(xyzw)\n"
"   \n"
"    dcl_literal l25, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"    mad_ieee r3.xy__, r1.x, l25, r3.xyxx\n"
"   \n"
"    dcl_literal l26, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"    mad_ieee r3.xy__, r1.y, l26, r3.xyxx\n"
"   \n"
"    dcl_literal l27, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"    mad_ieee r3.xy__, r1.y, l27, r3.xyxx\n"
"    add r0.___w, r0.y, r2.x_neg(xyzw)\n"
"    add r1.___w, r0.y, r0.w_neg(xyzw)\n"
"    add r1.___w, r2.x_neg(xyzw), r1.w\n"
"    add r1.___w, r3.x_neg(xyzw), r1.w\n"
"    add r0.___w, r0.w, r1.w\n"
"    add r1.___w, r2.y_neg(xyzw), r0.w\n"
"    add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"    add r0.___w, r2.y_neg(xyzw), r0.w\n"
"    add r0.___w, r3.y_neg(xyzw), r0.w\n"
"    add r0.___w, r1.w, r0.w\n"
"   \n"
"    dcl_literal l28, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"    mad_ieee r1.___w, r1.x, l28, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l29, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"    mad_ieee r1.x___, r1.x, l29, r1.w\n"
"   \n"
"    dcl_literal l30, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"    mad_ieee r1.x___, r1.y, l30, r1.x\n"
"   \n"
"    dcl_literal l31, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"    mad_ieee r1.x___, r1.y, l31, r1.x\n"
"    add r1._y__, r2.z_neg(xyzw), r0.w\n"
"    add r0.___w, r0.w, r1.y_neg(xyzw)\n"
"    add r0.___w, r2.z_neg(xyzw), r0.w\n"
"    add r0.___w, r1.y, r0.w\n"
"    frc r1._y__, r1.z\n"
"   \n"
"    dcl_literal l32, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"    mul_ieee r1._y__, r1.y, l32\n"
"    round_nearest r1._y__, r1.y\n"
"    mul_ieee r1.__z_, r0.w, r0.w\n"
"    mul_ieee r1.___w, r0.w, r1.z\n"
"   \n"
"    dcl_literal l33, 0x2F2EC9D3, 0xAD47D74E, 0x00000000, 0x00000000\n"
"   \n"
"    dcl_literal l34, 0xB2D72F34, 0x310F74F6, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, l33, l34\n"
"   \n"
"    dcl_literal l35, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, r2.xyxx, l35\n"
"   \n"
"    dcl_literal l36, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, r2.xyxx, l36\n"
"   \n"
"    dcl_literal l37, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, r2.xyxx, l37\n"
"    mul_ieee r2.x___, r1.w, r2.x\n"
"   \n"
"    dcl_literal l38, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"    mad_ieee r2.x___, r1.x, l38, r2.x_neg(xyzw)\n"
"    mad_ieee r2.x___, r1.z, r2.x, r1.x\n"
"   \n"
"    dcl_literal l39, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB\n"
"    mad_ieee r1.___w, r1.w_neg(xyzw), l39, r2.x\n"
"    add r1.___w, r0.w, r1.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l40, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB\n"
"    mad_ieee r2.x___, r1.z, r2.y, l40\n"
"    mul_ieee r2._y__, r1.z, r1.z\n"
"   \n"
"    dcl_literal l41, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2.__z_, r0.w, l41\n"
"   \n"
"    dcl_literal l42, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A\n"
"    ige r2.___w, r2.z, l42\n"
"   \n"
"    dcl_literal l43, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ige r3.x___, l43, r2.z\n"
"    and r2.___w, r2.w, r3.x\n"
"   \n"
"    dcl_literal l44, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000\n"
"    iadd r3.x___, r2.z, l44\n"
"    and r2.___w, r2.w, r3.x\n"
"   \n"
"    dcl_literal l45, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ilt r2.__z_, l45, r2.z\n"
"   \n"
"    dcl_literal l46, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000\n"
"    cmov_logical r2.__z_, r2.z, l46, r2.w\n"
"   \n"
"    dcl_literal l47, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1.__z_, r1.z, l47, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r2.__z_, r2.z_neg(xyzw), l48\n"
"    mul_ieee r0.___w, r1.x_neg(xyzw), r0.w\n"
"    mad_ieee r0.___w, r2.x, r2.y, r0.w_neg(xyzw)\n"
"    add r0.___w, r1.z, r0.w_neg(xyzw)\n"
"    add r0.___w, r2.z, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l49, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"    eq r2, r1.y, l49\n"
"    and r1.x___, r0.w, r2.x\n"
"    cmov_logical r1.x___, r2.y, r1.w_neg(xyzw), r1.x\n"
"    cmov_logical r0.___w, r2.z, r0.w_neg(xyzw), r1.x\n"
"    cmov_logical r0.__z_, r2.w, r1.w, r0.w\n"
"endif\n"
"dcl_literal l50, 0x47800000, 0x47800000, 0x47800000, 0x47800000\n"
"lt r0.___w, l50, r0.y\n"
"dcl_literal l51, 0x3A000000, 0x7F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, r0.y, l51\n"
"and r0.___w, r0.w, r1.y\n"
"ior r0.___w, r1.x, r0.w\n"
"dcl_literal l52, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r0.w, l52, r0.z\n"
"dcl_literal l53, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l53\n"
"dcl_literal l54, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.__z_, r0.w, l54, r0.z\n"
"dcl_literal l55, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l55, r0.y\n"
"dcl_literal l56, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l56, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_divide_f32",
"mdef(236)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000\n"
"and r1, r0.yxyx, l0\n"
"dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2, r1.wzzw, l1\n"
"dcl_literal l2, 0x00800000, 0x00800000, 0x00800000, 0x00000000\n"
"ilt r3.xyz_, r1.xxyx, l2\n"
"dcl_literal l3, 0xFFFFFF81, 0xFFFFFF9D, 0xFFFFFF81, 0xFFFFFF9D\n"
"iadd r2, r2.yzxw, l3\n"
"mov r4.x_z_, r2.yyxy\n"
"dcl_literal l4, 0x00000000, 0x41E00000, 0x00000000, 0x00000000\n"
"mov r4._y_w, l4\n"
"cmov_logical r2.xy__, r3.xyxx, r4.xyxx, r4.zwzz\n"
"dcl_literal l5, 0x00000000, 0x42280000, 0x41600000, 0x00000000\n"
"dcl_literal l6, 0xC1E00000, 0x41600000, 0xC1600000, 0x00000000\n"
"cmov_logical r4.xyz_, r3.xzyx, l5, l6\n"
"mov r3.x___, r2.w\n"
"dcl_literal l7, 0x41E00000, 0x41E00000, 0x41E00000, 0x41E00000\n"
"mov r3._y__, l7\n"
"mov r3.___w, r4.x\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r2.___w, l8\n"
"cmov_logical r3.xy_w, r3.z, r3.xyxw, r2.zwzy\n"
"iadd r0.__z_, r3.x, r2.x_neg(xyzw)\n"
"dcl_literal l9, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83\n"
"ilt r0.__z_, r0.z, l9\n"
"dcl_literal l10, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r0.___w, l10, r2.x\n"
"and r0.__z_, r0.z, r0.w\n"
"dcl_literal l11, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2\n"
"iadd r4.x___, r2.x, l11\n"
"dcl_literal l12, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000\n"
"add r4.___w, r3.w, l12\n"
"mov r3.x_z_, r2.xxyx\n"
"cmov_logical r2, r0.z, r4, r3\n"
"dcl_literal l13, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r0.__z_, l13, r2.x\n"
"dcl_literal l14, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r0.___w, l14, r2.x\n"
"and r0.__z_, r0.z, r0.w\n"
"dcl_literal l15, 0xC1600000, 0xC1600000, 0x00000000, 0x00000000\n"
"add r3.xy__, r2.zwzz, l15\n"
"cmov_logical r0.__zw, r0.z, r3.xxxy, r2.zzzw\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r2.x___, r2.y, l16\n"
"if_logicalnz r2.x\n"
"    ftoi r2.x___, r2.y\n"
"   \n"
"    dcl_literal l17, 0x00000000, 0x80000000, 0x007FFFFF, 0x00000000\n"
"    and r2._yz_, r0.x, l17\n"
"    itof r2.__z_, r2.z\n"
"    cmov_logical r1._y__, r1.w, r1.y, r2.z\n"
"   \n"
"    dcl_literal l18, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.__z_, r2.x, l18\n"
"    cmov_logical r1.___w, r1.w, r2.x, r2.z\n"
"   \n"
"    dcl_literal l19, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r2.x_z_, r1.y, l19\n"
"   \n"
"    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.x___, r2.x, l20\n"
"    iadd r2.x___, r2.x, r1.w\n"
"   \n"
"    dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1.___w, r1.w, l21\n"
"    iadd r1._y__, r1.y, r1.w\n"
"   \n"
"    dcl_literal l22, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1.___w, r2.x, l22\n"
"   \n"
"    dcl_literal l23, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.x___, l23, r1.w\n"
"   \n"
"    dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1._y__, r2.x, l24, r1.y\n"
"   \n"
"    dcl_literal l25, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.___w, l25, r1.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l26, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.x___, r2.z, l26\n"
"   \n"
"    dcl_literal l27, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"    ilt r2.__zw, l27, r1.w\n"
"   \n"
"    dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r2.z, l28, r1.w\n"
"   \n"
"    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.___w, r1.w, l29\n"
"   \n"
"    dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.___w, r1.w, l30, r2.z\n"
"    ishr r1.___w, r2.x, r1.w\n"
"    cmov_logical r1._y__, r2.w, r1.w, r1.y\n"
"    ior r0.x___, r2.y, r1.y\n"
"endif\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r1._y_w, r0.zzzw, l31\n"
"if_logicalnz r1.y\n"
"    ftoi r1._y__, r0.z_abs\n"
"   \n"
"    dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r0.__z_, r0.z, l32\n"
"    inegate r2.x___, r1.y\n"
"    cmov_logical r0.__z_, r0.z, r2.x, r1.y\n"
"   \n"
"    dcl_literal l33, 0x80000000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r2.xy__, r0.y, l33\n"
"    itof r1._y__, r2.y\n"
"    cmov_logical r1.x___, r1.z, r1.x, r1.y\n"
"   \n"
"    dcl_literal l34, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r1._y__, r0.z, l34\n"
"    cmov_logical r0.__z_, r1.z, r0.z, r1.y\n"
"   \n"
"    dcl_literal l35, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r1._yz_, r1.x, l35\n"
"   \n"
"    dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1._y__, r1.y, l36\n"
"    iadd r1._y__, r1.y, r0.z\n"
"   \n"
"    dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.__z_, r0.z, l37\n"
"    iadd r0.__z_, r1.x, r0.z\n"
"   \n"
"    dcl_literal l38, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1.x___, r1.y, l38\n"
"   \n"
"    dcl_literal l39, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r1._y__, l39, r1.x\n"
"   \n"
"    dcl_literal l40, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.__z_, r1.y, l40, r0.z\n"
"   \n"
"    dcl_literal l41, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.x___, l41, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l42, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1._y__, r1.z, l42\n"
"   \n"
"    dcl_literal l43, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"    ilt r2._yz_, l43, r1.x\n"
"   \n"
"    dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.__z_, r2.y, l44, r1.x\n"
"   \n"
"    dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, r1.x, l45\n"
"   \n"
"    dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.x___, r1.x, l46, r1.z\n"
"    ishr r1.x___, r1.y, r1.x\n"
"    cmov_logical r0.__z_, r2.z, r1.x, r0.z\n"
"    ior r0._y__, r2.x, r0.z\n"
"endif\n"
"dcl_literal l47, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0._y__, l47, r0.y\n"
"mul_ieee r0.x___, r0.x, r0.y\n"
"dcl_literal l48, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r1.x___, r0.x, l48\n"
"dcl_literal l49, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1._y__, r1.x, l49\n"
"and r1._y__, r1.w, r1.y\n"
"if_logicalnz r1.y\n"
"    ftoi r1._y__, r0.w_abs\n"
"   \n"
"    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r0.___w, r0.w, l50\n"
"    inegate r1.__z_, r1.y\n"
"    cmov_logical r0.___w, r0.w, r1.z, r1.y\n"
"   \n"
"    dcl_literal l51, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r1._yzw, r0.x, l51\n"
"    itof r1.___w, r1.w\n"
"    cmov_logical r1.x___, r1.z, r1.x, r1.w\n"
"   \n"
"    dcl_literal l52, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r1.___w, r0.w, l52\n"
"    cmov_logical r0.___w, r1.z, r0.w, r1.w\n"
"   \n"
"    dcl_literal l53, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"    and r1.__zw, r1.x, l53\n"
"   \n"
"    dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.__z_, r1.z, l54\n"
"    iadd r1.__z_, r1.z, r0.w\n"
"   \n"
"    dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l55\n"
"    iadd r0.___w, r1.x, r0.w\n"
"   \n"
"    dcl_literal l56, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1.x___, r1.z, l56\n"
"   \n"
"    dcl_literal l57, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r1.__z_, l57, r1.x\n"
"   \n"
"    dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r1.z, l58, r0.w\n"
"   \n"
"    dcl_literal l59, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.x___, l59, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l60, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.__z_, r1.w, l60\n"
"   \n"
"    dcl_literal l61, 0x00000017, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.xy__, l61, r1.x\n"
"   \n"
"    dcl_literal l62, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.___w, r2.x, l62, r1.x\n"
"   \n"
"    dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, r1.x, l63\n"
"   \n"
"    dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.x___, r1.x, l64, r1.w\n"
"    ishr r1.x___, r1.z, r1.x\n"
"    cmov_logical r0.___w, r2.y, r1.x, r0.w\n"
"    ior r0.x___, r1.y, r0.w\n"
"endif\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__half_exp10_f32",
"mdef(237)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x421A209B, 0x421A209B, 0x421A209B, 0x421A209B\n"
"ge r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x7F800000\n"
"and r0.__zw, r0.x, l1\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, r0.z, l2\n"
"and r0._y__, r0.y, r1.x\n"
"dcl_literal l3, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78\n"
"mul_ieee r1._y__, r0.x, l3\n"
"exp_vec r1._y__, r1.y\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l4, r1.y\n"
"dcl_literal l5, 0xC23369F4, 0xC23369F4, 0xC23369F4, 0xC23369F4\n"
"lt r1._y__, r0.x, l5\n"
"and r1.x___, r1.x, r1.y\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r1.x, l6, r0.y\n"
"dcl_literal l7, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l7\n"
"dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1._y__, l8, r0.z\n"
"cmov_logical r0._y__, r1.y, r1.x, r0.y\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r0.x, l9\n"
"dcl_literal l10, 0x00000000, 0x7F800000, 0x00000000, 0x00000000\n"
"ieq r1._yz_, r0.zzwz, l10\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r0.z, l11\n"
"and r0.___w, r1.x, r1.y\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.w, l12, r0.y\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l13, r0.x\n"
"and r0.__zw, r1.zzzy, r0.zzzw\n"
"cmov_logical r0._y__, r0.w, r0.x, r0.y\n"
"dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.x, l14\n"
"dcl_literal l15, 0x421A209A, 0x421A209A, 0x421A209A, 0x421A209A\n"
"eq r0.x___, r0.x, l15\n"
"cmov_logical r0._y__, r0.z, r0.w, r0.y\n"
"dcl_literal l16, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3\n"
"cmov_logical r0.x___, r0.x, l16, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_exp2_f32",
"mdef(238)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"ge r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.__z_, r0.x, l1\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, r0.z, l2\n"
"and r0._y__, r0.y, r0.w\n"
"exp_vec r1.x___, r0.x\n"
"\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l3, r1.x\n"
"\n"
"dcl_literal l4, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000\n"
"lt r1.x___, r0.x, l4\n"
"and r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.w, l5, r0.y\n"
"\n"
"dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, l6, r0.z\n"
"\n"
"dcl_literal l7, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.z, l7\n"
"\n"
"dcl_literal l8, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l8\n"
"cmov_logical r0._y__, r0.w, r1.x, r0.y\n"
"\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l9\n"
"and r0.___w, r0.z, r0.w\n"
"\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.w, l10, r0.y\n"
"\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l11, r0.x\n"
"and r0.__z_, r0.z, r0.w\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_exp_f32",
"mdef(239)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x42B17218, 0x42B17218, 0x42B17218, 0x42B17218\n"
"ge r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.__z_, r0.x, l1\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, r0.z, l2\n"
"and r0._y__, r0.y, r0.w\n"
"\n"
"dcl_literal l3, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r1.x___, r0.x, l3\n"
"exp_vec r1.x___, r1.x\n"
"\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l4, r1.x\n"
"\n"
"dcl_literal l5, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5\n"
"lt r1.x___, r0.x, l5\n"
"and r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.w, l6, r0.y\n"
"\n"
"dcl_literal l7, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, l7, r0.z\n"
"\n"
"dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.z, l8\n"
"\n"
"dcl_literal l9, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l9\n"
"cmov_logical r0._y__, r0.w, r1.x, r0.y\n"
"\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l10\n"
"and r0.___w, r0.z, r0.w\n"
"\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.w, l11, r0.y\n"
"\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l12, r0.x\n"
"and r0.__z_, r0.z, r0.w\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_log10_f32",
"mdef(240)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000\n"
"ige r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x3F801000, 0x3F801000, 0x3F801000, 0x3F801000\n"
"ige r0.___w, l2, r0.y\n"
"and r0.__z_, r0.z, r0.w\n"
"if_logicalnz r0.z\n"
"   \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r0.x, l3\n"
"   \n"
"    dcl_literal l4, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0.__z_, r0.z, l4\n"
"   \n"
"    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.x, l5\n"
"   \n"
"    dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"    iadd r1.x___, l6, r0.w\n"
"   \n"
"    dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    and r1.x___, r1.x, l7\n"
"   \n"
"    dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ixor r1._y__, r1.x, l8\n"
"    ior r0.___w, r0.w, r1.y\n"
"   \n"
"    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r1.x, l9\n"
"    iadd r0.__z_, r0.z, r1.x\n"
"    itof r0.__z_, r0.z\n"
"   \n"
"    dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"    add r1.xy__, r0.w, l10\n"
"    div_zeroop(infinity) r0.___w, r1.x, r1.y\n"
"    mul_ieee r1._y__, r0.w, r0.w\n"
"    mul_ieee r1.__z_, r1.y, r1.y\n"
"   \n"
"    dcl_literal l11, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"   \n"
"    dcl_literal l12, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, l11, l12\n"
"   \n"
"    dcl_literal l13, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, r2.xyxx, l13\n"
"    mul_ieee r1.___w, r1.z, r2.x\n"
"   \n"
"    dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"    mad_ieee r1.__z_, r1.z, r2.y, l14\n"
"    mad_ieee r1._y__, r1.y, r1.z, r1.w\n"
"    mul_ieee r1.__z_, r1.x, r1.x\n"
"   \n"
"    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mul_ieee r1.___w, r1.z, l15\n"
"   \n"
"    dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1._y__, r1.z, l16, r1.y\n"
"    mad_ieee r0.___w, r0.w_neg(xyzw), r1.y, r1.w\n"
"    add r0.___w, r1.x_neg(xyzw), r0.w\n"
"   \n"
"    dcl_literal l17, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9\n"
"    mul_ieee r0.___w, r0.w, l17\n"
"   \n"
"    dcl_literal l18, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B\n"
"    mad_ieee r0.__z_, r0.z, l18, r0.w_neg(xyzw)\n"
"endif\n"
"dcl_literal l19, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000\n"
"ilt r0.___w, r0.y, l19\n"
"dcl_literal l20, 0x3F801000, 0x7F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, l20, r0.y\n"
"ior r0.___w, r0.w, r1.x\n"
"if_logicalnz r0.w\n"
"   \n"
"    dcl_literal l21, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.x, l21\n"
"    itof r0.___w, r0.w\n"
"   \n"
"    dcl_literal l22, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r1.x_z_, r0.w, l22\n"
"   \n"
"    dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.___w, r1.x, l23\n"
"   \n"
"    dcl_literal l24, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C\n"
"    iadd r0.___w, r0.w, l24\n"
"   \n"
"    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.x___, r1.z, l25\n"
"   \n"
"    dcl_literal l26, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.___w, l26, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r1.__z_, l27, r0.w\n"
"   \n"
"    dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.___w, r1.z, l28, r0.w\n"
"   \n"
"    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.__z_, l29, r0.w\n"
"    ishr r1.___w, r1.x, r0.w\n"
"    inegate r0.___w, r0.w\n"
"   \n"
"    dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l30\n"
"    iadd r0.___w, r1.x, r0.w\n"
"    cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"   \n"
"    dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r1.x___, r0.x, l31\n"
"   \n"
"    dcl_literal l32, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000\n"
"    and r1.__z_, r1.x, l32\n"
"    cmov_logical r0.___w, r1.x, r0.w, r0.x\n"
"    log_vec r0.___w, r0.w\n"
"    add r0.___w, r1.z, r0.w\n"
"   \n"
"    dcl_literal l33, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B\n"
"    mul_ieee r0.__z_, r0.w, l33\n"
"endif\n"
"dcl_literal l34, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0.__z_, r0.y, r0.z, l34\n"
"dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l35\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0._y__, r0.y, l36\n"
"and r0._y__, r0.w, r0.y\n"
"dcl_literal l37, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.y, l37, r0.z\n"
"dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.x, l38\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"dcl_literal l39, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l39\n"
"cmov_logical r0.x___, r1.y, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_log2_f32",
"mdef(241)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000\n"
"ige r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x3F801000, 0x3F801000, 0x3F801000, 0x3F801000\n"
"ige r0.___w, l2, r0.y\n"
"and r0.__z_, r0.z, r0.w\n"
"if_logicalnz r0.z\n"
"   \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r0.x, l3\n"
"   \n"
"    dcl_literal l4, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0.__z_, r0.z, l4\n"
"   \n"
"    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.x, l5\n"
"   \n"
"    dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"    iadd r1.x___, l6, r0.w\n"
"   \n"
"    dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    and r1.x___, r1.x, l7\n"
"   \n"
"    dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ixor r1._y__, r1.x, l8\n"
"    ior r0.___w, r0.w, r1.y\n"
"   \n"
"    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r1.x, l9\n"
"    iadd r0.__z_, r0.z, r1.x\n"
"    itof r0.__z_, r0.z\n"
"   \n"
"    dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"    add r1.xy__, r0.w, l10\n"
"    div_zeroop(infinity) r0.___w, r1.x, r1.y\n"
"    mul_ieee r1._y__, r0.w, r0.w\n"
"    mul_ieee r1.__z_, r1.y, r1.y\n"
"   \n"
"    dcl_literal l11, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"   \n"
"    dcl_literal l12, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, l11, l12\n"
"   \n"
"    dcl_literal l13, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, r2.xyxx, l13\n"
"    mul_ieee r1.___w, r1.z, r2.x\n"
"   \n"
"    dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"    mad_ieee r1.__z_, r1.z, r2.y, l14\n"
"    mad_ieee r1._y__, r1.y, r1.z, r1.w\n"
"    mul_ieee r1.__z_, r1.x, r1.x\n"
"   \n"
"    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mul_ieee r1.___w, r1.z, l15\n"
"   \n"
"    dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1._y__, r1.z, l16, r1.y\n"
"    mad_ieee r0.___w, r0.w_neg(xyzw), r1.y, r1.w\n"
"    add r0.___w, r1.x_neg(xyzw), r0.w\n"
"   \n"
"    dcl_literal l17, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"    mad_ieee r0.__z_, r0.w_neg(xyzw), l17, r0.z\n"
"endif\n"
"dcl_literal l18, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000\n"
"ilt r0.___w, r0.y, l18\n"
"dcl_literal l19, 0x3F801000, 0x7F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, l19, r0.y\n"
"ior r0.___w, r0.w, r1.x\n"
"if_logicalnz r0.w\n"
"   \n"
"    dcl_literal l20, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.x, l20\n"
"    itof r0.___w, r0.w\n"
"   \n"
"    dcl_literal l21, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r1.x_z_, r0.w, l21\n"
"   \n"
"    dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.___w, r1.x, l22\n"
"   \n"
"    dcl_literal l23, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C\n"
"    iadd r0.___w, r0.w, l23\n"
"   \n"
"    dcl_literal l24, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.x___, r1.z, l24\n"
"   \n"
"    dcl_literal l25, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.___w, l25, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r1.__z_, l26, r0.w\n"
"   \n"
"    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.___w, r1.z, l27, r0.w\n"
"   \n"
"    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.__z_, l28, r0.w\n"
"    ishr r1.___w, r1.x, r0.w\n"
"    inegate r0.___w, r0.w\n"
"   \n"
"    dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l29\n"
"    iadd r0.___w, r1.x, r0.w\n"
"    cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"   \n"
"    dcl_literal l30, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r1.x___, r0.x, l30\n"
"   \n"
"    dcl_literal l31, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000\n"
"    and r1.__z_, r1.x, l31\n"
"    cmov_logical r0.___w, r1.x, r0.w, r0.x\n"
"    log_vec r0.___w, r0.w\n"
"    add r0.__z_, r1.z, r0.w\n"
"endif\n"
"dcl_literal l32, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0.__z_, r0.y, r0.z, l32\n"
"dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l33\n"
"dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0._y__, r0.y, l34\n"
"and r0._y__, r0.w, r0.y\n"
"dcl_literal l35, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.y, l35, r0.z\n"
"dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.x, l36\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"dcl_literal l37, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.__z_, r0.x, l37\n"
"cmov_logical r0.x___, r1.y, r0.z, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_log_f32",
"mdef(242)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000\n"
"ige r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x3F801000, 0x3F801000, 0x3F801000, 0x3F801000\n"
"ige r0.___w, l2, r0.y\n"
"and r0.__z_, r0.z, r0.w\n"
"if_logicalnz r0.z\n"
"   \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r0.x, l3\n"
"   \n"
"    dcl_literal l4, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0.__z_, r0.z, l4\n"
"   \n"
"    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.x, l5\n"
"   \n"
"    dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"    iadd r1.x___, l6, r0.w\n"
"   \n"
"    dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    and r1.x___, r1.x, l7\n"
"   \n"
"    dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ixor r1._y__, r1.x, l8\n"
"    ior r0.___w, r0.w, r1.y\n"
"   \n"
"    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r1.x, l9\n"
"    iadd r0.__z_, r0.z, r1.x\n"
"    itof r0.__z_, r0.z\n"
"   \n"
"    dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"    add r1.xy__, r0.w, l10\n"
"    div_zeroop(infinity) r0.___w, r1.x, r1.y\n"
"    mul_ieee r1._y__, r0.w, r0.w\n"
"    mul_ieee r1.__z_, r1.y, r1.y\n"
"   \n"
"    dcl_literal l11, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"   \n"
"    dcl_literal l12, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, l11, l12\n"
"   \n"
"    dcl_literal l13, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.z, r2.xyxx, l13\n"
"    mul_ieee r1.___w, r1.z, r2.x\n"
"   \n"
"    dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"    mad_ieee r1.__z_, r1.z, r2.y, l14\n"
"    mad_ieee r1._y__, r1.y, r1.z, r1.w\n"
"    mul_ieee r1.__z_, r1.x, r1.x\n"
"   \n"
"    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1._y__, r1.z, l15, r1.y\n"
"   \n"
"    dcl_literal l16, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"    mul_ieee r1.___w, r0.z, l16\n"
"    mad_ieee r0.___w, r0.w, r1.y, r1.w\n"
"   \n"
"    dcl_literal l17, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r0.___w, r1.z, l17, r0.w_neg(xyzw)\n"
"    add r0.___w, r1.x_neg(xyzw), r0.w\n"
"   \n"
"    dcl_literal l18, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"    mad_ieee r0.__z_, r0.z, l18, r0.w_neg(xyzw)\n"
"endif\n"
"dcl_literal l19, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000\n"
"ilt r0.___w, r0.y, l19\n"
"dcl_literal l20, 0x3F801000, 0x7F800000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, l20, r0.y\n"
"ior r0.___w, r0.w, r1.x\n"
"if_logicalnz r0.w\n"
"   \n"
"    dcl_literal l21, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.x, l21\n"
"    itof r0.___w, r0.w\n"
"   \n"
"    dcl_literal l22, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r1.x_z_, r0.w, l22\n"
"   \n"
"    dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.___w, r1.x, l23\n"
"   \n"
"    dcl_literal l24, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C\n"
"    iadd r0.___w, r0.w, l24\n"
"   \n"
"    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.x___, r1.z, l25\n"
"   \n"
"    dcl_literal l26, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.___w, l26, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r1.__z_, l27, r0.w\n"
"   \n"
"    dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.___w, r1.z, l28, r0.w\n"
"   \n"
"    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.__z_, l29, r0.w\n"
"    ishr r1.___w, r1.x, r0.w\n"
"    inegate r0.___w, r0.w\n"
"   \n"
"    dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l30\n"
"    iadd r0.___w, r1.x, r0.w\n"
"    cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"   \n"
"    dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r1.x___, r0.x, l31\n"
"   \n"
"    dcl_literal l32, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000\n"
"    and r1.__z_, r1.x, l32\n"
"    cmov_logical r0.___w, r1.x, r0.w, r0.x\n"
"    log_vec r0.___w, r0.w\n"
"    add r0.___w, r1.z, r0.w\n"
"   \n"
"    dcl_literal l33, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"    mul_ieee r0.__z_, r0.w, l33\n"
"endif\n"
"dcl_literal l34, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0.__z_, r0.y, r0.z, l34\n"
"dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l35\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0._y__, r0.y, l36\n"
"and r0._y__, r0.w, r0.y\n"
"dcl_literal l37, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.y, l37, r0.z\n"
"dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.x, l38\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"dcl_literal l39, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l39\n"
"cmov_logical r0.x___, r1.y, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_powr_f32",
"mdef(243)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7FFFFFFF, 0x80000000\n"
"and r1, r0.xxyy, l0\n"
"itof r0.x___, r1.x\n"
"dcl_literal l1, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r0.x_z_, r0.x, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.x___, r0.x, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0.__z_, r0.z, l3\n"
"dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024\n"
"iadd r0.x___, r0.x, l4\n"
"dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.x___, l5, r0.x_neg(xyzw)\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r0.___w, l6, r0.x\n"
"dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.x___, r0.w, l7, r0.x\n"
"inegate r0.___w, r0.x\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.___w, r0.w, l8\n"
"iadd r0.___w, r0.z, r0.w\n"
"ishr r0.__z_, r0.z, r0.x\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, l9, r0.x\n"
"cmov_logical r0.x___, r0.x, r0.z, r0.w\n"
"dcl_literal l10, 0x00800000, 0x2E800000, 0x3F800000, 0x00000000\n"
"ilt r2.xyz_, r1.xzxx, l10\n"
"cmov_logical r0.x___, r2.x, r0.x, r1.x\n"
"dcl_literal l11, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r0.x_z_, r0.x, l11\n"
"dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"ior r0.__z_, r0.z, l12\n"
"dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.x___, r0.x, l13\n"
"dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r0.z, l14, l15\n"
"round_z r2.___w, r0.w\n"
"ftoi r0.___w, r0.w\n"
"dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r0.__z_, r2.w_neg(xyzw), l16, r0.z\n"
"add r3.x___, r0.z, cb0[1].x\n"
"add r3._y__, r0.z, r3.x_neg(xyzw)\n"
"dcl_literal l17, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mul_ieee r3.__z_, r2.w, l17\n"
"dcl_literal l18, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.___w, r3.z, l18\n"
"dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r2.___w, r2.w, l19, r3.w_neg(xyzw)\n"
"div_zeroop(infinity) r0.__z_, r0.z, r3.z\n"
"dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r4.x___, r0.z, l20\n"
"mad_ieee r3.x___, r4.x, r3.w, r3.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.x, r2.w, r3.x\n"
"add r4.x___, r0.z, r4.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.x, r3.w, r3.x\n"
"mad_ieee r2.___w, r4.x, r2.w, r3.x\n"
"add r2.___w, r3.y, r2.w_neg(xyzw)\n"
"div_zeroop(infinity) r2.___w, r2.w, r3.z\n"
"add r3.x___, r0.z, r2.w\n"
"dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000\n"
"dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), l21, l22\n"
"dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l23\n"
"dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l24\n"
"dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l25\n"
"dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l26\n"
"dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l27\n"
"mul_ieee r3.__z_, r0.z_neg(xyzw), r0.z\n"
"add r0.__z_, r0.z, r3.x_neg(xyzw)\n"
"mad_ieee r3.___w, r3.y, r3.z, r3.x\n"
"add r3.x___, r3.x, r3.w_neg(xyzw)\n"
"mad_ieee r3.x___, r3.y, r3.z, r3.x\n"
"add r0.__z_, r2.w, r0.z\n"
"add r0.__z_, r3.x, r0.z\n"
"add r2.___w, r3.w, r0.z\n"
"add r3.x___, r3.w, r2.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r3.x\n"
"dcl_literal l28, 0x23BBBE88, 0x23BBBE88, 0x23BBBE88, 0x23BBBE88\n"
"mul_ieee r3.x___, r2.w, l28\n"
"dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0.__z_, r0.z, l29, r3.x\n"
"dcl_literal l30, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r2.w, l30\n"
"add r3._y__, r2.w, r3.x_neg(xyzw)\n"
"dcl_literal l31, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r2.___w, r2.w, l31\n"
"dcl_literal l32, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r3.__z_, r3.x, l32, r2.w_neg(xyzw)\n"
"dcl_literal l33, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r3.__z_, r3.y, l33, r3.z\n"
"dcl_literal l34, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.x___, r3.x, l34, r3.z\n"
"dcl_literal l35, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.x___, r3.y, l35, r3.x\n"
"add r0.__z_, r0.z, r3.x\n"
"add r3.x___, r2.w, r0.z\n"
"add r2.___w, r2.w, r3.x_neg(xyzw)\n"
"add r0.__z_, r0.z, r2.w\n"
"dcl_literal l36, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0\n"
"iadd r0.___w, r0.w, l36\n"
"dcl_literal l37, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r2.___w, r0.w, l37\n"
"dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l39, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD\n"
"cmov_logical r4, r2.w, l38, l39\n"
"dcl_literal l40, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r5, r2.w, l40\n"
"dcl_literal l41, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87\n"
"cmov_logical r4, r5.x, l41, r4\n"
"dcl_literal l42, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597\n"
"cmov_logical r4, r5.y, l42, r4\n"
"dcl_literal l43, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF\n"
"cmov_logical r4, r5.z, l43, r4\n"
"dcl_literal l44, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715\n"
"cmov_logical r4, r5.w, l44, r4\n"
"dcl_literal l45, 0x00000005, 0x00000006, 0x00000007, 0x00000008\n"
"ieq r6, r2.w, l45\n"
"dcl_literal l46, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5\n"
"cmov_logical r4, r6.x, l46, r4\n"
"dcl_literal l47, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998\n"
"cmov_logical r4, r6.y, l47, r4\n"
"dcl_literal l48, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E\n"
"cmov_logical r4, r6.z, l48, r4\n"
"dcl_literal l49, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355\n"
"cmov_logical r4, r6.w, l49, r4\n"
"dcl_literal l50, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C\n"
"ieq r7, r2.w, l50\n"
"dcl_literal l51, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D\n"
"cmov_logical r4, r7.x, l51, r4\n"
"dcl_literal l52, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817\n"
"cmov_logical r4, r7.y, l52, r4\n"
"dcl_literal l53, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0\n"
"cmov_logical r4, r7.z, l53, r4\n"
"dcl_literal l54, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D\n"
"cmov_logical r4, r7.w, l54, r4\n"
"dcl_literal l55, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F\n"
"ieq r3._yzw, r2.w, l55\n"
"dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l57, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4\n"
"cmov_logical r8, r2.w, l56, l57\n"
"dcl_literal l58, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999\n"
"cmov_logical r4, r3.y, l58, r4\n"
"dcl_literal l59, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014\n"
"cmov_logical r4, r3.z, l59, r4\n"
"dcl_literal l60, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12\n"
"cmov_logical r4, r3.w, l60, r4\n"
"dcl_literal l61, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"and r2.___w, r0.w, l61\n"
"dcl_literal l62, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"ieq r0.___w, r0.w, l62\n"
"dcl_literal l63, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r9.xyz_, r2.w, l63\n"
"cmov_logical r2.___w, r9.x, r4.y, r4.x\n"
"cmov_logical r2.___w, r9.y, r4.z, r2.w\n"
"cmov_logical r2.___w, r9.z, r4.w, r2.w\n"
"dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r0.w, l64, r2.w\n"
"add r4.x___, r3.x, r2.w\n"
"add r3.x___, r3.x, r4.x_neg(xyzw)\n"
"add r2.___w, r2.w, r3.x\n"
"add r0.__z_, r0.z, r2.w\n"
"add r2.___w, r4.x, r0.z\n"
"add r3.x___, r4.x, r2.w_neg(xyzw)\n"
"dcl_literal l65, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F\n"
"cmov_logical r4, r5.x, l65, r8\n"
"dcl_literal l66, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72\n"
"cmov_logical r4, r5.y, l66, r4\n"
"dcl_literal l67, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926\n"
"cmov_logical r4, r5.z, l67, r4\n"
"dcl_literal l68, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B\n"
"cmov_logical r4, r5.w, l68, r4\n"
"dcl_literal l69, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D\n"
"cmov_logical r4, r6.x, l69, r4\n"
"dcl_literal l70, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4\n"
"cmov_logical r4, r6.y, l70, r4\n"
"dcl_literal l71, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E\n"
"cmov_logical r4, r6.z, l71, r4\n"
"dcl_literal l72, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83\n"
"cmov_logical r4, r6.w, l72, r4\n"
"dcl_literal l73, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F\n"
"cmov_logical r4, r7.x, l73, r4\n"
"dcl_literal l74, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7\n"
"cmov_logical r4, r7.y, l74, r4\n"
"dcl_literal l75, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6\n"
"cmov_logical r4, r7.z, l75, r4\n"
"dcl_literal l76, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209\n"
"cmov_logical r4, r7.w, l76, r4\n"
"dcl_literal l77, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6\n"
"cmov_logical r4, r3.y, l77, r4\n"
"dcl_literal l78, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1\n"
"cmov_logical r4, r3.z, l78, r4\n"
"dcl_literal l79, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70\n"
"cmov_logical r4, r3.w, l79, r4\n"
"cmov_logical r3._y__, r9.x, r4.y, r4.x\n"
"cmov_logical r3._y__, r9.y, r4.z, r3.y\n"
"cmov_logical r3._y__, r9.z, r4.w, r3.y\n"
"dcl_literal l80, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.___w, r0.w, l80, r3.y\n"
"add r3._y__, r2.w, r0.w\n"
"add r0.___w, r0.w, r3.y_neg(xyzw)\n"
"add r0.___w, r2.w, r0.w\n"
"add r0.__z_, r0.z, r3.x\n"
"add r0.__z_, r0.w, r0.z\n"
"add r0.___w, r3.y, r0.z\n"
"add r2.___w, r3.y, r0.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r2.w\n"
"dcl_literal l81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.x___, r0.x, l81\n"
"dcl_literal l82, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC\n"
"and r2.x___, r2.x, l82\n"
"iadd r0.x___, r0.x, r2.x\n"
"itof r0.x___, r0.x\n"
"add r2.x___, r0.w, r0.x\n"
"add r0.x___, r0.x, r2.x_neg(xyzw)\n"
"add r0.x___, r0.w, r0.x\n"
"add r0.x___, r0.z, r0.x\n"
"add r0.__z_, r2.x, r0.x\n"
"add r0.___w, r2.x, r0.z_neg(xyzw)\n"
"dcl_literal l83, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2.x___, r0.z, l83\n"
"mul_ieee r2.___w, r0.z, r0.y\n"
"dcl_literal l84, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r0.y, l84\n"
"mad_ieee r3._y__, r2.x, r3.x, r2.w_neg(xyzw)\n"
"add r3.__z_, r0.y, r3.x_neg(xyzw)\n"
"mad_ieee r3._y__, r2.x, r3.z, r3.y\n"
"add r2.x___, r0.z, r2.x_neg(xyzw)\n"
"mad_ieee r3.x___, r2.x, r3.x, r3.y\n"
"mad_ieee r2.x___, r2.x, r3.z, r3.x\n"
"add r0.x___, r0.x, r0.w\n"
"mad_ieee r0.___w, r0.x, r0.y, r2.x\n"
"add r0.x___, r0.z, r0.x\n"
"add r0.__z_, r2.w, r0.w\n"
"add r2.x___, r2.w, r0.z_neg(xyzw)\n"
"add r0.___w, r0.w, r2.x\n"
"add r2.x___, r0.z, r0.w\n"
"round_z r2.___w, r2.x\n"
"ftoi r2.x___, r2.x\n"
"add r3.x___, r0.z, r2.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r3.x_neg(xyzw)\n"
"add r0.__z_, r2.w_neg(xyzw), r0.z\n"
"add r0.__z_, r0.w, r0.z\n"
"add r0.___w, r3.x, r0.z\n"
"add r3.x___, r3.x, r0.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r3.x\n"
"add r0.__z_, r0.w, r0.z\n"
"dcl_literal l85, 0x42000000, 0x42000000, 0x00000000, 0x00000000\n"
"dcl_literal l86, 0x3F000000, 0xBF000000, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r0.z, l85, l86\n"
"ftoi r3.xy__, r3.xyxx\n"
"dcl_literal l87, 0x00000000, 0x00000000, 0x3F317218, 0x42000000\n"
"mul_ieee r3.__zw, r0.z, l87\n"
"dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, l88, r3.w\n"
"cmov_logical r0.___w, r0.w, r3.x, r3.y\n"
"itof r3.x___, r0.w\n"
"dcl_literal l89, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000\n"
"mad_ieee r3.x___, r3.x_neg(xyzw), l89, r0.z\n"
"dcl_literal l90, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820\n"
"dcl_literal l91, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r3.x, l90, l91\n"
"dcl_literal l92, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r3.x___, r3.x, l92\n"
"mul_ieee r3.___w, r3.x, r3.x\n"
"mad_ieee r3.x___, r3.w, r3.y, r3.x\n"
"dcl_literal l93, 0x00000000, 0x0000001F, 0x00000000, 0x00000003\n"
"and r3._y_w, r0.w, l93\n"
"iadd r0.___w, r0.w, r3.y_neg(xyzw)\n"
"dcl_literal l94, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r4.xyz_, r3.w, l94\n"
"dcl_literal l95, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r3._y__, r3.y, l95\n"
"dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l97, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000\n"
"cmov_logical r5, r3.y, l96, l97\n"
"dcl_literal l98, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r6, r3.y, l98\n"
"dcl_literal l99, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000\n"
"cmov_logical r5, r6.x, l99, r5\n"
"dcl_literal l100, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000\n"
"cmov_logical r5, r6.y, l100, r5\n"
"dcl_literal l101, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000\n"
"cmov_logical r5, r6.z, l101, r5\n"
"dcl_literal l102, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000\n"
"cmov_logical r5, r6.w, l102, r5\n"
"dcl_literal l103, 0x00000005, 0x00000006, 0x00000007, 0x00000000\n"
"ieq r7.xyz_, r3.y, l103\n"
"dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l105, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404\n"
"cmov_logical r8, r3.y, l104, l105\n"
"dcl_literal l106, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000\n"
"cmov_logical r5, r7.x, l106, r5\n"
"dcl_literal l107, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000\n"
"cmov_logical r5, r7.y, l107, r5\n"
"dcl_literal l108, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000\n"
"cmov_logical r5, r7.z, l108, r5\n"
"cmov_logical r3._y__, r4.x, r5.y, r5.x\n"
"cmov_logical r3._y__, r4.y, r5.z, r3.y\n"
"cmov_logical r3._y__, r4.z, r5.w, r3.y\n"
"dcl_literal l109, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3\n"
"cmov_logical r5, r6.x, l109, r8\n"
"dcl_literal l110, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C\n"
"cmov_logical r5, r6.y, l110, r5\n"
"dcl_literal l111, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607\n"
"cmov_logical r5, r6.z, l111, r5\n"
"dcl_literal l112, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329\n"
"cmov_logical r5, r6.w, l112, r5\n"
"dcl_literal l113, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647\n"
"cmov_logical r5, r7.x, l113, r5\n"
"dcl_literal l114, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D\n"
"cmov_logical r5, r7.y, l114, r5\n"
"dcl_literal l115, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0\n"
"cmov_logical r5, r7.z, l115, r5\n"
"cmov_logical r3.___w, r4.x, r5.y, r5.x\n"
"cmov_logical r3.___w, r4.y, r5.z, r3.w\n"
"cmov_logical r3.___w, r4.z, r5.w, r3.w\n"
"add r4.x___, r3.y, r3.w\n"
"mad_ieee r3.x___, r4.x, r3.x, r3.w\n"
"add r3.x___, r3.y, r3.x\n"
"dcl_literal l116, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r3.x, l116\n"
"dcl_literal l117, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ixor r3.x___, r0.w, l117\n"
"imax r0.___w, r0.w, r0.w_neg(xyzw)\n"
"dcl_literal l118, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r3.x___, r3.x, l118\n"
"dcl_literal l119, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"udiv r0.___w, r0.w, l119\n"
"inegate r3._y__, r0.w\n"
"cmov_logical r0.___w, r3.x, r3.y, r0.w\n"
"iadd r0.___w, r0.w, r2.x\n"
"itof r0.___w, r0.w\n"
"dcl_literal l120, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"lt r2.x___, l120, r0.w_abs\n"
"ftoi r3.x___, r0.w_abs\n"
"dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r0.w, l121\n"
"dcl_literal l122, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"cmov_logical r2.x___, r2.x, l122, r3.x\n"
"inegate r3.x___, r2.x\n"
"cmov_logical r0.___w, r0.w, r3.x, r2.x\n"
"dcl_literal l123, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.x___, r0.w, l123\n"
"cmov_logical r2.x___, r4.z, r0.w, r2.x\n"
"itof r0.___w, r0.w\n"
"dcl_literal l124, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3.x___, r2.x, l124\n"
"itof r3._y__, r4.w\n"
"cmov_logical r3._y__, r4.z, r4.x, r3.y\n"
"iadd r3.x___, r3.y, r3.x\n"
"dcl_literal l125, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r3._y_w, r3.y, l125\n"
"dcl_literal l126, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3._y__, r3.y, l126\n"
"dcl_literal l127, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.___w, r3.w, l127\n"
"iadd r2.x___, r3.y, r2.x\n"
"dcl_literal l128, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l128\n"
"dcl_literal l129, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3._y__, l129, r2.x\n"
"dcl_literal l130, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.x___, l130, r2.x_neg(xyzw)\n"
"dcl_literal l131, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r3.x___, r3.y, l131, r3.x\n"
"dcl_literal l132, 0x00000017, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.x_z_, l132, r2.x\n"
"dcl_literal l133, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r3._y__, r4.x, l133, r2.x\n"
"dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r2.x, l134\n"
"dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r2.x, l135, r3.y\n"
"ishr r2.x___, r3.w, r2.x\n"
"cmov_logical r2.x___, r4.z, r2.x, r3.x\n"
"dcl_literal l136, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"lt r0.___w, l136, r0.w\n"
"dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r0.w, l137, r2.x\n"
"ior r0.___w, r4.y, r0.w\n"
"dcl_literal l138, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"lt r2.x___, l138, r2.w_abs\n"
"ftoi r3.x___, r2.w_abs\n"
"dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, r2.w, l139\n"
"dcl_literal l140, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"cmov_logical r2.x___, r2.x, l140, r3.x\n"
"inegate r3.x___, r2.x\n"
"cmov_logical r2.x___, r2.w, r3.x, r2.x\n"
"dcl_literal l141, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.___w, r2.x, l141\n"
"dcl_literal l142, 0x7FFFFFFF, 0x0FFFF000, 0x00000000, 0x00000000\n"
"and r3.xy__, r0.z, l142\n"
"dcl_literal l143, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r3.___w, r3.y, l143, r3.z_neg(xyzw)\n"
"dcl_literal l144, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r3.___w, r3.y, l144, r3.w\n"
"add r3._y__, r0.z, r3.y_neg(xyzw)\n"
"dcl_literal l145, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B\n"
"lt r3.x___, r3.x, l145\n"
"dcl_literal l146, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r3.___w, r3.y, l146, r3.w\n"
"dcl_literal l147, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r3._y__, r3.y, l147, r3.w\n"
"dcl_literal l148, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r0.__z_, r0.z, l148, r3.y\n"
"dcl_literal l149, 0x34904540, 0x3A1BECC5, 0x00000000, 0x00000000\n"
"dcl_literal l150, 0x3CC2F57D, 0xBC42EEB9, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r0.z, l149, l150\n"
"dcl_literal l151, 0x37874471, 0x3DDB50CA, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r4.xyxx, r0.z, l151\n"
"dcl_literal l152, 0x3F7FE378, 0xBEFFE15B, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r4.xyxx, r0.z, l152\n"
"dcl_literal l153, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378\n"
"mad_ieee r0.__z_, r4.y, r0.z, l153\n"
"div_zeroop(infinity) r0.__z_, r4.x, r0.z\n"
"mul_ieee r3._y__, r3.y, r0.z\n"
"mad_ieee r0.__z_, r0.z, r3.z, r3.y\n"
"dcl_literal l154, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.__z_, r0.z, l154\n"
"dcl_literal l155, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r0.z, l155\n"
"cmov_logical r0.__z_, r4.z, r2.x, r2.w\n"
"itof r2.x___, r2.x\n"
"dcl_literal l156, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.___w, r0.z, l156\n"
"itof r3._y__, r4.w\n"
"cmov_logical r3._y__, r4.z, r4.x, r3.y\n"
"iadd r2.___w, r3.y, r2.w\n"
"dcl_literal l157, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r3._yz_, r3.y, l157\n"
"dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3._y__, r3.y, l158\n"
"dcl_literal l159, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.__z_, r3.z, l159\n"
"iadd r0.__z_, r3.y, r0.z\n"
"dcl_literal l160, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l160\n"
"dcl_literal l161, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3._y__, l161, r0.z\n"
"dcl_literal l162, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.__z_, l162, r0.z_neg(xyzw)\n"
"dcl_literal l163, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.___w, r3.y, l163, r2.w\n"
"dcl_literal l164, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"ilt r3._y_w, l164, r0.z\n"
"dcl_literal l165, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r3._y__, r3.y, l165, r0.z\n"
"dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, r0.z, l166\n"
"dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r0.z, l167, r3.y\n"
"ishr r0.__z_, r3.z, r0.z\n"
"cmov_logical r0.__z_, r3.w, r0.z, r2.w\n"
"dcl_literal l168, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"lt r2.x___, l168, r2.x\n"
"dcl_literal l169, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r2.x, l169, r0.z\n"
"ior r0.__z_, r4.y, r0.z\n"
"cmov_logical r0.__z_, r3.x, r0.z, r0.w\n"
"dcl_literal l170, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.y, l170\n"
"cmov_logical r0.__z_, r2.y, r0.w, r0.z\n"
"dcl_literal l171, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r0.___w, r0.y, l171\n"
"mul_ieee r0.x___, r0.y, r0.x\n"
"cmov_logical r0._y__, r0.w, r1.x, r0.z\n"
"dcl_literal l172, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"lt r0.__z_, l172, r0.x\n"
"dcl_literal l173, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l173\n"
"dcl_literal l174, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000\n"
"lt r0.x___, r0.x, l174\n"
"dcl_literal l175, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r0.___w, l175, r0.w\n"
"and r0.x_z_, r0.xxzx, r0.w\n"
"dcl_literal l176, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.z, l176, r0.y\n"
"dcl_literal l177, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l177, r0.y\n"
"dcl_literal l178, 0x00000000, 0x80000000, 0x80000000, 0x00000000\n"
"ine r0._yz_, r1.yywy, l178\n"
"inot r1._y_w, r0.zzzy\n"
"dcl_literal l179, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l180, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"cmov_logical r3, r1.xzzx, l179, l180\n"
"and r2.xy__, r1.ywyy, r3.xwxx\n"
"and r0.___w, r3.z, r2.x\n"
"dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.w, l181, r0.x\n"
"and r2.x__w, r0.zzzy, r3.xxxw\n"
"and r0.___w, r3.z, r2.x\n"
"dcl_literal l182, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.w, l182, r0.x\n"
"dcl_literal l183, 0x7F800000, 0x7F800000, 0x3F800000, 0x00000000\n"
"ilt r4.xyz_, l183, r1.xzxx\n"
"inot r0.___w, r4.x\n"
"dcl_literal l184, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ieq r1.__zw, r1.xxxz, l184\n"
"dcl_literal l185, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r1.x___, r1.x, l185\n"
"inot r5.xy__, r1.zwzz\n"
"and r0.___w, r0.w, r5.x\n"
"and r2.x___, r2.w, r0.w\n"
"and r0.___w, r4.z, r0.w\n"
"ior r2.___w, r4.y, r4.x\n"
"and r2.x___, r3.y, r2.x\n"
"dcl_literal l186, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l186, r0.x\n"
"ior r2.x___, r3.x, r1.z\n"
"and r2.x___, r3.y, r2.x\n"
"dcl_literal l187, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r2.x, l187, r0.x\n"
"and r1.x___, r0.y, r1.x\n"
"and r2.x___, r5.y, r1.x\n"
"and r1.x___, r1.w, r1.x\n"
"and r2.x___, r3.z, r2.x\n"
"dcl_literal l188, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l188, r0.x\n"
"dcl_literal l189, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r1.x, l189, r0.x\n"
"and r1.x_z_, r0.yyzy, r1.z\n"
"and r0._y__, r1.y, r1.x\n"
"and r1.x___, r3.z, r1.z\n"
"and r0._y__, r3.z, r0.y\n"
"and r1.__z_, r2.z, r3.w\n"
"dcl_literal l190, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.y, l190, r0.x\n"
"and r0._y__, r1.w, r1.z\n"
"and r0.___w, r1.w, r0.w\n"
"and r1.__z_, r1.y, r0.y\n"
"and r0._yz_, r0.z, r0.yywy\n"
"and r0.___w, r1.y, r0.w\n"
"dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.z, l191, r0.x\n"
"ior r0._y__, r0.y, r0.w\n"
"dcl_literal l192, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.y, l192, r0.x\n"
"ior r0._y__, r1.x, r0.z\n"
"dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.y, l193, r0.x\n"
"ior r0._y__, r2.y, r2.w\n"
"dcl_literal l194, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l194, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__half_recip_f32",
"mdef(244)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x41E00000, 0x00000000\n"
"mov r0.__zw, l0\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF\n"
"and r2, r1.x, l1\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1._y__, r2.x, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r1.__z_, r2.x, l3\n"
"and r1._y__, r1.y, r1.z\n"
"dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r2.y, l4\n"
"dcl_literal l5, 0xFFFFFF81, 0xFFFFFF9D, 0x00000000, 0x00000000\n"
"iadd r0.xy__, r1.z, l5\n"
"cmov_logical r0.xy__, r1.y, r0.yzyy, r0.xwxx\n"
"dcl_literal l6, 0x41600000, 0x41600000, 0x41600000, 0x41600000\n"
"dcl_literal l7, 0xC1600000, 0xC1600000, 0xC1600000, 0xC1600000\n"
"cmov_logical r0.__z_, r1.y, l6, l7\n"
"dcl_literal l8, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r0.___w, l8, r0.x\n"
"dcl_literal l9, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r0.x___, l9, r0.x\n"
"and r0.x___, r0.w, r0.x\n"
"cmov_logical r0.x___, r0.x, r0.z, r0.y\n"
"ftoi r0._y__, r0.x\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0.x___, r0.x, l10\n"
"dcl_literal l11, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r0.__z_, r0.y, l11\n"
"cmov_logical r0.___w, r2.y, r0.y, r0.z\n"
"dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1._y__, r0.w, l12\n"
"itof r1.__z_, r2.w\n"
"cmov_logical r1.__z_, r2.y, r2.x, r1.z\n"
"iadd r1._y__, r1.z, r1.y\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r1.__zw, r1.z, l13\n"
"dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r1.z, l14\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l15\n"
"iadd r0.___w, r1.z, r0.w\n"
"dcl_literal l16, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l16\n"
"dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.__z_, l17, r0.w\n"
"dcl_literal l18, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.___w, l18, r0.w_neg(xyzw)\n"
"dcl_literal l19, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1._y__, r1.z, l19, r1.y\n"
"dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.__z_, l20, r0.w\n"
"dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.___w, r1.z, l21, r0.w\n"
"dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.___w, r0.w, l22\n"
"ishr r1.__z_, r1.w, r0.w\n"
"dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l23, r0.w\n"
"cmov_logical r0.___w, r0.w, r1.z, r1.y\n"
"ior r0.___w, r2.z, r0.w\n"
"cmov_logical r0.___w, r0.x, r0.w, r1.x\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.___w, l24, r0.w\n"
"dcl_literal l25, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r1, r0.w, l25\n"
"cmov_logical r0._y__, r1.z, r0.y, r0.z\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.__z_, r0.y, l26\n"
"itof r1.___w, r1.w\n"
"cmov_logical r1.__z_, r1.z, r1.x, r1.w\n"
"iadd r0.__z_, r1.z, r0.z\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r1.__zw, r1.z, l27\n"
"dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r1.z, l28\n"
"dcl_literal l29, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l29\n"
"iadd r0._y__, r1.z, r0.y\n"
"dcl_literal l30, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0._y__, r0.y, l30\n"
"dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.__z_, l31, r0.y\n"
"dcl_literal l32, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0._y__, l32, r0.y_neg(xyzw)\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r1.z, l33, r0.z\n"
"dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.__z_, l34, r0.y\n"
"dcl_literal l35, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0._y__, r1.z, l35, r0.y\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0._y__, r0.y, l36\n"
"ishr r1.__z_, r1.w, r0.y\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0._y__, l37, r0.y\n"
"cmov_logical r0._y__, r0.y, r1.z, r0.z\n"
"ior r0._y__, r1.y, r0.y\n"
"dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, r1.x, l38\n"
"and r0.x___, r0.x, r0.z\n"
"cmov_logical r0.x___, r0.x, r0.y, r0.w\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_rsqrt_f32",
"mdef(245)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.__z_, r0.z, l1\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r0.y, l2\n"
"and r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r0.x, l3\n"
"and r0.___w, r0.w, r1.x\n"
"ior r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l4, r0.y\n"
"ior r0.__z_, r0.z, r0.y\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.__z_, r0.x, l5\n"
"    itof r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l6, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r1.xy__, r0.z, l6\n"
"    \n"
"    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r1.x, l7\n"
"    \n"
"    dcl_literal l8, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    iadd r0.__z_, r0.z, l8\n"
"    \n"
"    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.x___, r1.y, l9\n"
"    \n"
"    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.__z_, l10, r0.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r1._y__, l11, r0.z\n"
"    \n"
"    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.__z_, r1.y, l12, r0.z\n"
"    \n"
"    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1._y__, l13, r0.z\n"
"    ishr r1.__z_, r1.x, r0.z\n"
"    inegate r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.__z_, r0.z, l14\n"
"    iadd r0.__z_, r1.x, r0.z\n"
"    cmov_logical r0.__z_, r1.y, r1.z, r0.z\n"
"    rsq_vec r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r1.x___, r0.z, l15\n"
"    if_logicalz r1.x\n"
"        \n"
"        dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1._y__, r0.z, l16\n"
"        itof r1._y__, r1.y\n"
"        \n"
"        dcl_literal l17, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"        and r1._yz_, r1.y, l17\n"
"        \n"
"        dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1._y__, r1.y, l18\n"
"        \n"
"        dcl_literal l19, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"        iadd r1._y__, r1.y, l19\n"
"        \n"
"        dcl_literal l20, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.__z_, r1.z, l20\n"
"        \n"
"        dcl_literal l21, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1._y__, l21, r1.y_neg(xyzw)\n"
"        \n"
"        dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r1.___w, l22, r1.y\n"
"        \n"
"        dcl_literal l23, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1._y__, r1.w, l23, r1.y\n"
"        \n"
"        dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r1.___w, l24, r1.y\n"
"        ishr r2.x___, r1.z, r1.y\n"
"        inegate r1._y__, r1.y\n"
"        \n"
"        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1._y__, r1.y, l25\n"
"        iadd r1._y__, r1.z, r1.y\n"
"        cmov_logical r1._y__, r1.w, r2.x, r1.y\n"
"    else\n"
"        \n"
"        dcl_literal l26, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r0.__z_, r0.z, l26\n"
"        \n"
"        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.x___, r1.x, l27\n"
"        \n"
"        dcl_literal l28, 0x06000000, 0x06000000, 0x06000000, 0x06000000\n"
"        iadd r0.__z_, r0.z, l28\n"
"        \n"
"        dcl_literal l29, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D\n"
"        iadd r1.x___, r1.x, l29\n"
"        \n"
"        dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r1.x___, l30, r1.x\n"
"        \n"
"        dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r1._y__, r1.x, l31, r0.z\n"
"    endif\n"
"    \n"
"    dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"    cmov_logical r0.__z_, r0.w, l32, r1.y\n"
"    \n"
"    dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"    ior r0.___w, r0.x, l33\n"
"    cmov_logical r0.x___, r0.y, r0.w, r0.z\n"
"else\n"
"    rsq_vec r0.x___, r0.x\n"
"endif\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_sin_f32",
"mdef(246)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"ge r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x47800000, 0x47800000, 0x47800000, 0x47800000\n"
"ge r0.___w, l2, r0.y\n"
"and r0.__z_, r0.z, r0.w\n"
"if_logicalnz r0.z\n"
"   \n"
"    dcl_literal l3, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"    mul_ieee r0.__z_, r0.y, l3\n"
"    round_nearest r0.__z_, r0.z\n"
"   \n"
"    dcl_literal l4, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r0.___w, r0.z, l4\n"
"    add r1.x___, r0.z, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l5, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"    mul_ieee r1._y__, r0.z, l5\n"
"   \n"
"    dcl_literal l6, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"    mul_ieee r2.xyz_, r0.z, l6\n"
"   \n"
"    dcl_literal l7, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000\n"
"    mad_ieee r1.__zw, r0.w, l7, r2.xxxy_neg(xyzw)\n"
"   \n"
"    dcl_literal l8, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000\n"
"    mad_ieee r1.__zw, r0.w, l8, r1.zzzw\n"
"   \n"
"    dcl_literal l9, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000\n"
"    mad_ieee r1.__zw, r1.x, l9, r1.zzzw\n"
"   \n"
"    dcl_literal l10, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000\n"
"    mad_ieee r1.__zw, r1.x, l10, r1.zzzw\n"
"    add r0.__z_, r0.y, r2.x_neg(xyzw)\n"
"    add r2.___w, r0.y, r0.z_neg(xyzw)\n"
"    add r2.x___, r2.x_neg(xyzw), r2.w\n"
"    add r1.__z_, r1.z_neg(xyzw), r2.x\n"
"    add r0.__z_, r0.z, r1.z\n"
"    add r1.__z_, r2.y_neg(xyzw), r0.z\n"
"    add r0.__z_, r0.z, r1.z_neg(xyzw)\n"
"    add r0.__z_, r2.y_neg(xyzw), r0.z\n"
"    add r0.__z_, r1.w_neg(xyzw), r0.z\n"
"    add r0.__z_, r1.z, r0.z\n"
"   \n"
"    dcl_literal l11, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"    mad_ieee r1.__z_, r0.w, l11, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l12, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"    mad_ieee r0.___w, r0.w, l12, r1.z\n"
"   \n"
"    dcl_literal l13, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"    mad_ieee r0.___w, r1.x, l13, r0.w\n"
"   \n"
"    dcl_literal l14, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"    mad_ieee r0.___w, r1.x, l14, r0.w\n"
"    add r1.x___, r2.z_neg(xyzw), r0.z\n"
"    add r0.__z_, r0.z, r1.x_neg(xyzw)\n"
"    add r0.__z_, r2.z_neg(xyzw), r0.z\n"
"    add r0.__z_, r1.x, r0.z\n"
"    frc r1.x___, r1.y\n"
"   \n"
"    dcl_literal l15, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"    mul_ieee r1.x___, r1.x, l15\n"
"    round_nearest r1.x___, r1.x\n"
"    mul_ieee r1._y__, r0.z, r0.z\n"
"    mul_ieee r1.__z_, r0.z, r1.y\n"
"   \n"
"    dcl_literal l16, 0x2F2EC9D3, 0xAD47D74E, 0x00000000, 0x00000000\n"
"   \n"
"    dcl_literal l17, 0xB2D72F34, 0x310F74F6, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.y, l16, l17\n"
"   \n"
"    dcl_literal l18, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.y, r2.xyxx, l18\n"
"   \n"
"    dcl_literal l19, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.y, r2.xyxx, l19\n"
"   \n"
"    dcl_literal l20, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000\n"
"    mad_ieee r2.xy__, r1.y, r2.xyxx, l20\n"
"    mul_ieee r1.___w, r1.z, r2.x\n"
"   \n"
"    dcl_literal l21, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"    mad_ieee r1.___w, r0.w, l21, r1.w_neg(xyzw)\n"
"    mad_ieee r1.___w, r1.y, r1.w, r0.w\n"
"   \n"
"    dcl_literal l22, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB\n"
"    mad_ieee r1.__z_, r1.z_neg(xyzw), l22, r1.w\n"
"    add r1.__z_, r0.z, r1.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l23, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB\n"
"    mad_ieee r1.___w, r1.y, r2.y, l23\n"
"    mul_ieee r2.x___, r1.y, r1.y\n"
"   \n"
"    dcl_literal l24, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2._y__, r0.z, l24\n"
"   \n"
"    dcl_literal l25, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A\n"
"    ige r2.__z_, r2.y, l25\n"
"   \n"
"    dcl_literal l26, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ige r2.___w, l26, r2.y\n"
"    and r2.__z_, r2.z, r2.w\n"
"   \n"
"    dcl_literal l27, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000\n"
"    iadd r2.___w, r2.y, l27\n"
"    and r2.__z_, r2.z, r2.w\n"
"   \n"
"    dcl_literal l28, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ilt r2._y__, l28, r2.y\n"
"   \n"
"    dcl_literal l29, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000\n"
"    cmov_logical r2._y__, r2.y, l29, r2.z\n"
"   \n"
"    dcl_literal l30, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1._y__, r1.y, l30, r2.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r2._y__, r2.y_neg(xyzw), l31\n"
"    mul_ieee r0.__z_, r0.w_neg(xyzw), r0.z\n"
"    mad_ieee r0.__z_, r1.w, r2.x, r0.z_neg(xyzw)\n"
"    add r0.__z_, r1.y, r0.z_neg(xyzw)\n"
"    add r0.__z_, r2.y, r0.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l32, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"    eq r2, r1.x, l32\n"
"   \n"
"    dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ge r0.___w, r0.y, l33\n"
"    and r2, r2, r0.w\n"
"    and r0.___w, r1.z, r2.x\n"
"    cmov_logical r0.___w, r2.y, r0.z, r0.w\n"
"    cmov_logical r0.___w, r2.z, r1.z_neg(xyzw), r0.w\n"
"    cmov_logical r0.__z_, r2.w, r0.z_neg(xyzw), r0.w\n"
"else\n"
"   \n"
"    dcl_literal l34, 0x3A000000, 0x3A000000, 0x3A000000, 0x3A000000\n"
"    ige r0.___w, r0.y, l34\n"
"   \n"
"    dcl_literal l35, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"    lt r1.x___, r0.y, l35\n"
"    and r0.___w, r0.w, r1.x\n"
"    mul_ieee r1.x___, r0.y, r0.y\n"
"    mul_ieee r1._y__, r0.y, r1.x\n"
"   \n"
"    dcl_literal l36, 0x2F2EC9D3, 0x2F2EC9D3, 0x2F2EC9D3, 0x2F2EC9D3\n"
"   \n"
"    dcl_literal l37, 0xB2D72F34, 0xB2D72F34, 0xB2D72F34, 0xB2D72F34\n"
"    mad_ieee r1.__z_, r1.x, l36, l37\n"
"   \n"
"    dcl_literal l38, 0x3636DF25, 0x3636DF25, 0x3636DF25, 0x3636DF25\n"
"    mad_ieee r1.__z_, r1.x, r1.z, l38\n"
"   \n"
"    dcl_literal l39, 0xB95009D4, 0xB95009D4, 0xB95009D4, 0xB95009D4\n"
"    mad_ieee r1.__z_, r1.x, r1.z, l39\n"
"   \n"
"    dcl_literal l40, 0x3C088887, 0x3C088887, 0x3C088887, 0x3C088887\n"
"    mad_ieee r1.__z_, r1.x, r1.z, l40\n"
"    mul_ieee r1.__z_, r1.y, r1.z\n"
"   \n"
"    dcl_literal l41, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB\n"
"    mul_ieee r1._y__, r1.y, l41\n"
"    mad_ieee r1.x___, r1.x, r1.z_neg(xyzw), r1.y_neg(xyzw)\n"
"    add r1.x___, r0.y, r1.x_neg(xyzw)\n"
"    cmov_logical r0.__z_, r0.w, r1.x, r0.y\n"
"endif\n"
"dcl_literal l42, 0x47800000, 0x47800000, 0x47800000, 0x47800000\n"
"lt r0.___w, l42, r0.y\n"
"dcl_literal l43, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, r0.y, l43\n"
"and r0.___w, r0.w, r1.x\n"
"dcl_literal l44, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r0.w, l44, r0.z\n"
"dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l45\n"
"cmov_logical r0.x___, r0.x, r0.z_neg(xyzw), r0.z\n"
"dcl_literal l46, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.y, l46\n"
"dcl_literal l47, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r0.z, l47, r0.x\n"
"dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l48, r0.y\n"
"dcl_literal l49, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l49, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_sqrt_f32",
"mdef(247)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r0.y, l1\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l2, r0.y\n"
"\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l3\n"
"and r0.__z_, r0.z, r0.w\n"
"sqrt_vec r0.___w, r0.x\n"
"\n"
"dcl_literal l4, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.__z_, r0.z, l4, r0.w\n"
"\n"
"dcl_literal l5, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.___w, r0.x, l5\n"
"cmov_logical r0.x___, r0.y, r0.w, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__half_tan_f32",
"mdef(248)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"dcl_literal l1, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"ge r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x47800000, 0x47800000, 0x47800000, 0x47800000\n"
"ge r0.___w, l2, r0.y\n"
"and r0.__z_, r0.z, r0.w\n"
"if_logicalnz r0.z\n"
"   \n"
"    dcl_literal l3, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"    mul_ieee r0.__z_, r0.y, l3\n"
"    round_nearest r0.__z_, r0.z\n"
"   \n"
"    dcl_literal l4, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r0.___w, r0.z, l4\n"
"    add r1.x___, r0.z, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l5, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"    mul_ieee r1._y__, r0.z, l5\n"
"   \n"
"    dcl_literal l6, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"    mul_ieee r2.xyz_, r0.z, l6\n"
"   \n"
"    dcl_literal l7, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000\n"
"    mad_ieee r1.__zw, r0.w, l7, r2.xxxy_neg(xyzw)\n"
"   \n"
"    dcl_literal l8, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000\n"
"    mad_ieee r1.__zw, r0.w, l8, r1.zzzw\n"
"   \n"
"    dcl_literal l9, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000\n"
"    mad_ieee r1.__zw, r1.x, l9, r1.zzzw\n"
"   \n"
"    dcl_literal l10, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000\n"
"    mad_ieee r1.__zw, r1.x, l10, r1.zzzw\n"
"    add r0.__z_, r0.y, r2.x_neg(xyzw)\n"
"    add r2.___w, r0.y, r0.z_neg(xyzw)\n"
"    add r2.x___, r2.x_neg(xyzw), r2.w\n"
"    add r1.__z_, r1.z_neg(xyzw), r2.x\n"
"    add r0.__z_, r0.z, r1.z\n"
"    add r1.__z_, r2.y_neg(xyzw), r0.z\n"
"    add r0.__z_, r0.z, r1.z_neg(xyzw)\n"
"    add r0.__z_, r2.y_neg(xyzw), r0.z\n"
"    add r0.__z_, r1.w_neg(xyzw), r0.z\n"
"    add r0.__z_, r1.z, r0.z\n"
"   \n"
"    dcl_literal l11, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"    mad_ieee r1.__z_, r0.w, l11, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l12, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"    mad_ieee r0.___w, r0.w, l12, r1.z\n"
"   \n"
"    dcl_literal l13, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"    mad_ieee r0.___w, r1.x, l13, r0.w\n"
"   \n"
"    dcl_literal l14, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"    mad_ieee r0.___w, r1.x, l14, r0.w\n"
"    add r1.x___, r2.z_neg(xyzw), r0.z\n"
"    add r0.__z_, r0.z, r1.x_neg(xyzw)\n"
"    add r0.__z_, r2.z_neg(xyzw), r0.z\n"
"    add r0.__z_, r1.x, r0.z\n"
"    frc r1.x___, r1.y\n"
"   \n"
"    dcl_literal l15, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"    mul_ieee r1.x___, r1.x, l15\n"
"    round_nearest r1.x___, r1.x\n"
"   \n"
"    dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mul_ieee r1.x___, r1.x, l16\n"
"    frc r1.x___, r1.x\n"
"    add r1.x___, r1.x, r1.x\n"
"    round_nearest r1.x___, r1.x\n"
"    add r0.__z_, r0.w_neg(xyzw), r0.z\n"
"    mul_ieee r0.___w, r0.z, r0.z\n"
"    mul_ieee r1._y__, r0.z, r0.w\n"
"   \n"
"    dcl_literal l17, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3\n"
"   \n"
"    dcl_literal l18, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587\n"
"    mad_ieee r1.__z_, r0.w_neg(xyzw), l17, l18\n"
"    mul_ieee r1._y__, r1.y, r1.z\n"
"   \n"
"    dcl_literal l19, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480\n"
"   \n"
"    dcl_literal l20, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337\n"
"    mad_ieee r1.__z_, r0.w, l19, l20\n"
"   \n"
"    dcl_literal l21, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425\n"
"    mad_ieee r0.___w, r1.z, r0.w, l21\n"
"    div_zeroop(infinity) r0.___w, r1.y, r0.w\n"
"    add r0.__z_, r0.z, r0.w\n"
"   \n"
"    dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    div_zeroop(infinity) r0.___w, l22, r0.z\n"
"   \n"
"    dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r1.x___, l23, r1.x\n"
"    cmov_logical r0.__z_, r1.x, r0.w_neg(xyzw), r0.z\n"
"else\n"
"   \n"
"    dcl_literal l24, 0x3A000000, 0x3A000000, 0x3A000000, 0x3A000000\n"
"    ige r0.___w, r0.y, l24\n"
"   \n"
"    dcl_literal l25, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB\n"
"    lt r1.x___, r0.y, l25\n"
"    and r0.___w, r0.w, r1.x\n"
"    mul_ieee r1.x___, r0.y, r0.y\n"
"    mul_ieee r1._y__, r0.y, r1.x\n"
"   \n"
"    dcl_literal l26, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3\n"
"   \n"
"    dcl_literal l27, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587\n"
"    mad_ieee r1.__z_, r1.x_neg(xyzw), l26, l27\n"
"    mul_ieee r1._y__, r1.y, r1.z\n"
"   \n"
"    dcl_literal l28, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480\n"
"   \n"
"    dcl_literal l29, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337\n"
"    mad_ieee r1.__z_, r1.x, l28, l29\n"
"   \n"
"    dcl_literal l30, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425\n"
"    mad_ieee r1.x___, r1.z, r1.x, l30\n"
"    div_zeroop(infinity) r1.x___, r1.y, r1.x\n"
"    add r1.x___, r0.y, r1.x\n"
"    cmov_logical r0.__z_, r0.w, r1.x, r0.y\n"
"endif\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l31\n"
"cmov_logical r0.x___, r0.x, r0.z_neg(xyzw), r0.z\n"
"dcl_literal l32, 0x47800000, 0x47800000, 0x47800000, 0x47800000\n"
"lt r0.__z_, l32, r0.y\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, r0.y, l33\n"
"and r0.__z_, r0.z, r0.w\n"
"dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.z, l34, r0.x\n"
"dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.y, l35\n"
"dcl_literal l36, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r0.z, l36, r0.x\n"
"dcl_literal l37, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l37, r0.y\n"
"dcl_literal l38, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l38, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__hwfma_f32",
"mdef(249)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"fma r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__hypot_f32",
"mdef(250)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.__zw, r0.yyyx, l0\n"
"ilt r1.x___, r0.w, r0.z\n"
"cmov_logical r1.x___, r1.x, r0.x, r0.y\n"
"ige r1._y__, r0.w, r0.z\n"
"cmov_logical r0.x___, r1.y, r0.x, r0.y\n"
"dcl_literal l1, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r1._yz_, r1.x, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0._y__, r1.z, l2\n"
"dcl_literal l3, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1.___w, r0.y, l3\n"
"dcl_literal l4, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x00000000\n"
"and r2.xy__, r0.x, l4\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.y, l5\n"
"dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.___w, r2.z, l6\n"
"dcl_literal l7, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ige r3.x___, l7, r0.y\n"
"dcl_literal l8, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ige r3._y__, l8, r2.z\n"
"iadd r3.__z_, r2.z, r0.y_neg(xyzw)\n"
"dcl_literal l9, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C\n"
"ilt r3.__z_, l9, r3.z\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r3.___w, r1.y, l10\n"
"ior r3.__z_, r3.z, r3.w\n"
"inot r3.___w, r3.z\n"
"and r3.x___, r3.x, r3.w\n"
"dcl_literal l11, 0x42400000, 0xC2400000, 0x00000000, 0x00000000\n"
"and r4.xy__, r3.x, l11\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x42C00000, 0xC2C00000\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x42400000, 0xC2400000\n"
"cmov_logical r4.__zw, r3.x, l12, l13\n"
"cmov_logical r3.xy__, r3.y, r4.zwzz, r4.xyxx\n"
"itof r1.___w, r1.w\n"
"add r1.___w, r3.x, r1.w\n"
"add r4.x___, r1.w, r1.w\n"
"dcl_literal l14, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000\n"
"lt r4.x___, r4.x, l14\n"
"dcl_literal l15, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l16, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), l15, l16\n"
"dcl_literal l17, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"dcl_literal l18, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r1.___w, r1.w, l17, l18\n"
"round_neginf r1.___w, r1.w\n"
"dcl_literal l19, 0x42800000, 0x42800000, 0x42800000, 0x42800000\n"
"min r1.___w, r1.w, l19\n"
"itof r2.___w, r2.w\n"
"add r2.___w, r3.x, r2.w\n"
"add r4._y__, r2.w, r2.w\n"
"dcl_literal l20, 0x42FA0000, 0x42FA0000, 0x42FA0000, 0x42FA0000\n"
"lt r4._y__, l20, r4.y\n"
"dcl_literal l21, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"dcl_literal l22, 0xC2FA0000, 0xC2FA0000, 0xC2FA0000, 0xC2FA0000\n"
"mad_ieee r2.___w, r2.w, l21, l22\n"
"dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r2.___w, r2.w, l23, l24\n"
"round_neginf r2.___w, r2.w\n"
"dcl_literal l25, 0x42800000, 0x42800000, 0x42800000, 0x42800000\n"
"min r2.___w, r2.w, l25\n"
"and r4.x___, r3.w, r4.x\n"
"add r4.__z_, r3.x, r1.w\n"
"add r4.___w, r3.y, r1.w_neg(xyzw)\n"
"cmov_logical r3.xy__, r4.x, r4.zwzz, r3.xyxx\n"
"dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.___w, r2.x, l26, l27\n"
"and r4.x___, r4.y, r1.w\n"
"add r4._y__, r2.w_neg(xyzw), r3.x\n"
"add r4.__z_, r2.w, r3.y\n"
"cmov_logical r3.xy__, r4.x, r4.yzyy, r3.xyxx\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r2.___w, l28, r3.x\n"
"if_logicalnz r2.w\n"
"    ftoi r4.x___, r3.x\n"
"    iadd r0._y__, r0.y, r4.x\n"
"   \n"
"    dcl_literal l29, 0x00000000, 0x7FFFFFFF, 0x007FFFFF, 0x00000000\n"
"    and r4._yz_, r1.x, l29\n"
"    itof r1.x___, r4.z\n"
"   \n"
"    dcl_literal l30, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r5.xy__, r1.x, l30\n"
"   \n"
"    dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r5.x, l31\n"
"    iadd r1.x___, r1.x, r4.x\n"
"   \n"
"    dcl_literal l32, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4.___w, r5.y, l32\n"
"   \n"
"    dcl_literal l33, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r1.x___, l33, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r5.x___, l34, r1.x\n"
"   \n"
"    dcl_literal l35, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.x___, r5.x, l35, r1.x\n"
"   \n"
"    dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5.x___, l36, r1.x\n"
"    ishr r5._y__, r4.w, r1.x\n"
"    inegate r1.x___, r1.x\n"
"   \n"
"    dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1.x___, r1.x, l37\n"
"    iadd r1.x___, r4.w, r1.x\n"
"    cmov_logical r1.x___, r5.x, r5.y, r1.x\n"
"   \n"
"    dcl_literal l38, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4.x___, r4.x, l38\n"
"    iadd r4.x___, r4.y, r4.x\n"
"   \n"
"    dcl_literal l39, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0._y__, r0.y, l39\n"
"   \n"
"    dcl_literal l40, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r4._y__, l40, r0.y\n"
"   \n"
"    dcl_literal l41, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r4.x___, r4.y, l41, r4.x\n"
"   \n"
"    dcl_literal l42, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0._y__, l42, r0.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l43, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4._y__, r4.z, l43\n"
"   \n"
"    dcl_literal l44, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l44, r0.y\n"
"   \n"
"    dcl_literal l45, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0._y__, r4.z, l45, r0.y\n"
"    ishr r4._y__, r4.y, r0.y\n"
"   \n"
"    dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r0._y__, l46, r0.y\n"
"    cmov_logical r0._y__, r0.y, r4.y, r4.x\n"
"    cmov_logical r0._y__, r1.z, r0.y, r1.x\n"
"   \n"
"    dcl_literal l47, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r1.x___, l47, r3.x\n"
"   \n"
"    dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r1.x, l48, r0.y\n"
"else\n"
"    mov r0._y__, r1.y\n"
"endif\n"
"if_logicalnz r2.w\n"
"    ftoi r1.x___, r3.x\n"
"    iadd r1.__z_, r2.z, r1.x\n"
"   \n"
"    dcl_literal l49, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x007FFFFF\n"
"    and r2.__zw, r0.x, l49\n"
"    itof r0.x___, r2.w\n"
"   \n"
"    dcl_literal l50, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r0.x, l50\n"
"   \n"
"    dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.x___, r4.x, l51\n"
"    iadd r0.x___, r0.x, r1.x\n"
"   \n"
"    dcl_literal l52, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4.x___, r4.y, l52\n"
"   \n"
"    dcl_literal l53, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.x___, l53, r0.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4._y__, l54, r0.x\n"
"   \n"
"    dcl_literal l55, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.x___, r4.y, l55, r0.x\n"
"   \n"
"    dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, l56, r0.x\n"
"    ishr r4.__z_, r4.x, r0.x\n"
"    inegate r0.x___, r0.x\n"
"   \n"
"    dcl_literal l57, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.x___, r0.x, l57\n"
"    iadd r0.x___, r4.x, r0.x\n"
"    cmov_logical r0.x___, r4.y, r4.z, r0.x\n"
"   \n"
"    dcl_literal l58, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1.x___, r1.x, l58\n"
"    iadd r1.x___, r2.z, r1.x\n"
"   \n"
"    dcl_literal l59, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1.__z_, r1.z, l59\n"
"   \n"
"    dcl_literal l60, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.__z_, l60, r1.z\n"
"   \n"
"    dcl_literal l61, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.x___, r2.z, l61, r1.x\n"
"   \n"
"    dcl_literal l62, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.__z_, l62, r1.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l63, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.__z_, r2.w, l63\n"
"   \n"
"    dcl_literal l64, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.___w, l64, r1.z\n"
"   \n"
"    dcl_literal l65, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.__z_, r2.w, l65, r1.z\n"
"    ishr r2.__z_, r2.z, r1.z\n"
"   \n"
"    dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.__z_, l66, r1.z\n"
"    cmov_logical r1.x___, r1.z, r2.z, r1.x\n"
"    cmov_logical r0.x___, r2.y, r1.x, r0.x\n"
"   \n"
"    dcl_literal l67, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r1.x___, l67, r3.x\n"
"   \n"
"    dcl_literal l68, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.x___, r1.x, l68, r0.x\n"
"else\n"
"    mov r0.x___, r2.x\n"
"endif\n"
"dcl_literal l69, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r1.x___, r0.y, l69\n"
"add r1.__z_, r0.y, r1.x_neg(xyzw)\n"
"dcl_literal l70, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r1.__z_, r1.z, l70\n"
"dcl_literal l71, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2._y__, r0.x, l71\n"
"add r2.__z_, r0.x, r2.y_neg(xyzw)\n"
"dcl_literal l72, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2.__z_, r2.z, l72\n"
"mul_ieee r2.___w, r0.y, r0.y\n"
"mul_ieee r3.x___, r0.x, r0.x\n"
"mad_ieee r4.x___, r0.y, r0.y, r3.x\n"
"dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r4._y__, r4.x, l73\n"
"mad_ieee r0._y__, r0.y, r0.y, r4.x_neg(xyzw)\n"
"mad_ieee r0.x___, r0.x, r0.x, r0.y\n"
"mad_ieee r0._y__, r1.x, r1.x, r2.w_neg(xyzw)\n"
"dp2_ieee r1.x___, r1.z, r1.x\n"
"add r0._y__, r0.y, r1.x\n"
"add r0.x___, r0.x, r0.y\n"
"mad_ieee r0.x___, r1.z, r1.z, r0.x\n"
"mad_ieee r0._y__, r2.y, r2.y, r3.x_neg(xyzw)\n"
"dp2_ieee r1.x___, r2.z, r2.y\n"
"add r0._y__, r0.y, r1.x\n"
"add r0.x___, r0.x, r0.y\n"
"mad_ieee r0.x___, r2.z, r2.z, r0.x\n"
"add r0.x___, r4.x, r0.x\n"
"sqrt_vec r0.x___, r0.x\n"
"dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0._y__, r3.y, l74\n"
"if_logicalnz r0.y\n"
"    ftoi r0._y__, r3.y\n"
"   \n"
"    dcl_literal l75, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r5, r0.x, l75\n"
"   \n"
"    dcl_literal l76, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r5.z, l76\n"
"    iadd r1.x___, r1.x, r0.y\n"
"    itof r1.__z_, r5.w\n"
"   \n"
"    dcl_literal l77, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r2._yz_, r1.z, l77\n"
"   \n"
"    dcl_literal l78, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.__z_, r2.y, l78\n"
"    iadd r1.__z_, r1.z, r0.y\n"
"   \n"
"    dcl_literal l79, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2._y__, r2.z, l79\n"
"   \n"
"    dcl_literal l80, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r1.__z_, l80, r1.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l81, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.__z_, l81, r1.z\n"
"   \n"
"    dcl_literal l82, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.__z_, r2.z, l82, r1.z\n"
"   \n"
"    dcl_literal l83, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, l83, r1.z\n"
"    ishr r2.___w, r2.y, r1.z\n"
"    inegate r1.__z_, r1.z\n"
"   \n"
"    dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1.__z_, r1.z, l84\n"
"    iadd r1.__z_, r2.y, r1.z\n"
"    cmov_logical r1.__z_, r2.z, r2.w, r1.z\n"
"   \n"
"    dcl_literal l85, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l85\n"
"    iadd r0._y__, r5.x, r0.y\n"
"   \n"
"    dcl_literal l86, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1.x___, r1.x, l86\n"
"   \n"
"    dcl_literal l87, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2._y__, l87, r1.x\n"
"   \n"
"    dcl_literal l88, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r2.y, l88, r0.y\n"
"   \n"
"    dcl_literal l89, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r1.x___, l89, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l90, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2._y__, r5.w, l90\n"
"   \n"
"    dcl_literal l91, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.__z_, l91, r1.x\n"
"   \n"
"    dcl_literal l92, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.x___, r2.z, l92, r1.x\n"
"    ishr r2._y__, r2.y, r1.x\n"
"   \n"
"    dcl_literal l93, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, l93, r1.x\n"
"    cmov_logical r0._y__, r1.x, r2.y, r0.y\n"
"    cmov_logical r0._y__, r5.z, r0.y, r1.z\n"
"   \n"
"    dcl_literal l94, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r1.x___, l94, r3.y\n"
"   \n"
"    dcl_literal l95, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r1.x, l95, r0.y\n"
"    ior r0.x___, r5.y, r0.y\n"
"endif\n"
"cmov_logical r0.x___, r2.x, r0.x, r1.y\n"
"cmov_logical r0.x___, r3.z, r2.x, r0.x\n"
"and r0._y__, r1.w, r4.y\n"
"and r0._y__, r3.w, r0.y\n"
"dcl_literal l96, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ieq r1.xy__, r0.wzww, l96\n"
"ior r1.x___, r1.y, r1.x\n"
"ior r0._y__, r0.y, r1.x\n"
"dcl_literal l97, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.y, l97, r0.x\n"
"dcl_literal l98, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ult r1.xy__, l98, r0.wzww\n"
"dcl_literal l99, 0x00000000, 0x7F800000, 0x7F800000, 0x00000000\n"
"ine r0._yz_, r0.zzwz, l99\n"
"and r0._yz_, r1.xxyx, r0.yyzy\n"
"ior r0._y__, r0.z, r0.y\n"
"dcl_literal l100, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l100, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ilogb_f32",
"mdef(251)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x00000000\n"
"and r0.xy__, r0.x, l0\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.__z_, r0.x, l1\n"
"dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.__z_, r0.z, l2\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.__z_, r0.z, l3\n"
"dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.__z_, l4, r0.z_neg(xyzw)\n"
"dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.__z_, r0.z, l5\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.__z_, r0.z, l6\n"
"dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r0.__z_, r0.x, r0.z, l7\n"
"dcl_literal l8, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.__z_, r0.z_neg(xyzw), l8\n"
"dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r0.___w, r0.x, l9\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.x___, r0.x, l10\n"
"and r0.___w, r0.w, r1.x\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0._y__, r0.y, l11\n"
"dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0._y__, r0.y, l12\n"
"cmov_logical r0._y__, r0.w, r0.z, r0.y\n"
"dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l13, r0.x\n"
"dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x7F800000\n"
"ieq r0.x__w, r0.x, l14\n"
"ior r0.x___, r0.z, r0.x\n"
"dcl_literal l15, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.x___, r0.x, l15, r0.y\n"
"dcl_literal l16, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"cmov_logical r0.x___, r0.w, l16, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ldexp_f32i32",
"mdef(252)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"itof r0._y__, r0.y\n"
"dcl_literal l0, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"lt r0.__z_, l0, r0.y_abs\n"
"ftoi r0.___w, r0.y_abs\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0._y__, r0.y, l1\n"
"dcl_literal l2, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"cmov_logical r0.__z_, r0.z, l2, r0.w\n"
"inegate r0.___w, r0.z\n"
"cmov_logical r0._y__, r0.y, r0.w, r0.z\n"
"dcl_literal l3, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r0.__z_, r0.y, l3\n"
"dcl_literal l4, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r1, r0.x, l4\n"
"cmov_logical r0.__z_, r1.z, r0.y, r0.z\n"
"itof r0._y__, r0.y\n"
"itof r0.___w, r1.w\n"
"cmov_logical r0.___w, r1.z, r1.x, r0.w\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r1.__zw, r0.w, l5\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r1.z, l6\n"
"dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l7\n"
"iadd r1.__z_, r1.z, r0.z\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.__z_, r0.z, l8\n"
"dcl_literal l9, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1.__z_, r1.z, l9\n"
"dcl_literal l10, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.x___, l10, r1.z_neg(xyzw)\n"
"dcl_literal l11, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.__z_, l11, r1.z\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2._y__, r2.x, l12\n"
"dcl_literal l13, 0x00000017, 0x00000018, 0x00000000, 0x00000000\n"
"ilt r3.xyz_, l13, r2.x\n"
"dcl_literal l14, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2.x___, r3.x, l14, r2.x\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r2.y, l15, r2.x\n"
"dcl_literal l16, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r2._y__, l16, r2.x_neg(xyzw)\n"
"ishr r2.x___, r1.w, r2.x\n"
"ishl r1.___w, r1.w, r2.y\n"
"dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.___w, r3.y, l17, r1.w\n"
"dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ieq r2._y__, r1.w, l18\n"
"dcl_literal l19, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ult r1.___w, l19, r1.w\n"
"dcl_literal l20, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r2.__z_, r2.x, l20\n"
"iadd r2.__z_, r2.x, r2.z\n"
"cmov_logical r2.x___, r2.y, r2.z, r2.x\n"
"dcl_literal l21, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r2._y__, r2.x, l21\n"
"cmov_logical r1.___w, r1.w, r2.y, r2.x\n"
"iadd r0.__z_, r0.w, r0.z\n"
"dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r1.z, l22, r0.z\n"
"cmov_logical r0.__z_, r3.z, r1.w, r0.z\n"
"dcl_literal l23, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"lt r0._y__, l23, r0.y\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l24, r0.z\n"
"ior r0.__z_, r1.y, r0.y\n"
"dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r0.___w, l25, r0.y\n"
"cmov_logical r0._y__, r0.w, r0.z, r0.y\n"
"cmov_logical r0._y__, r1.x, r0.y, r0.x\n"
"dcl_literal l26, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r0.__z_, r1.x, l26\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__length_2f32",
"mdef(253)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r1._y__, r0.xyxx, r0.xyxx\n"
"sqrt_vec r0.x___, r1.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__length_4f32",
"mdef(254)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r0.x___, r0.xyxx, r0.xyxx\n"
"mad_ieee r0.x___, r0.z, r0.z, r0.x\n"
"mad_ieee r0.x___, r0.w, r0.w, r0.x\n"
"sqrt_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__length_f32",
"mdef(255)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x___, r0.x_abs\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__lgamma_f32",
"mdef(256)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x007FFFFF, 0x7F800000, 0x00000000\n"
"and r1.xyz_, r0.x, l0\n"
"add r0._y__, r1.x, r1.x\n"
"round_nearest r0._y__, r0.y\n"
"\n"
"dcl_literal l1, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r1.x, l1, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l2, 0x00000000, 0x3E800000, 0x3FC90FDB, 0x00000000\n"
"mul_ieee r0._yz_, r0.yyzy, l2\n"
"mul_ieee r0.___w, r0.z, r0.z\n"
"\n"
"dcl_literal l3, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l4, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r0.w, l3, l4\n"
"\n"
"dcl_literal l5, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r0.w, r2.xyxx, l5\n"
"\n"
"dcl_literal l6, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r0.w, r2.xyxx, l6\n"
"mul_ieee r2.__z_, r0.z, r0.w\n"
"mad_ieee r0.__z_, r2.z, r2.x, r0.z\n"
"frc r0._y__, r0.y\n"
"\n"
"dcl_literal l7, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"mul_ieee r0._y__, r0.y, l7\n"
"round_nearest r0._y__, r0.y\n"
"\n"
"dcl_literal l8, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"eq r3, r0.y, l8\n"
"\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ge r0._y__, r1.x, l9\n"
"and r3, r3, r0.y\n"
"and r0._y__, r0.z, r3.x\n"
"\n"
"dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"\n"
"dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r2.x___, r0.w_neg(xyzw), l10, l11\n"
"mul_ieee r0.___w, r0.w, r0.w\n"
"mad_ieee r0.___w, r0.w, r2.y, r2.x\n"
"cmov_logical r0._y__, r3.y, r0.w, r0.y\n"
"cmov_logical r0._y__, r3.z, r0.z_neg(xyzw), r0.y\n"
"cmov_logical r0._y__, r3.w, r0.w_neg(xyzw), r0.y\n"
"itof r0.__zw, r1.yyyx\n"
"\n"
"dcl_literal l12, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r0.___w, r0.w, l12\n"
"\n"
"dcl_literal l13, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r2.xy__, r0.z, l13\n"
"\n"
"dcl_literal l14, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r0.__zw, r0.w, l14\n"
"\n"
"dcl_literal l15, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l15\n"
"\n"
"dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0.___w, r0.w, l16\n"
"\n"
"dcl_literal l17, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.__z_, l17, r0.z_neg(xyzw)\n"
"inegate r1._y__, r0.z\n"
"\n"
"dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1._y__, r1.y, l18\n"
"iadd r1._y__, r0.w, r1.y\n"
"ishr r0.___w, r0.w, r0.z\n"
"\n"
"dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l19, r0.z\n"
"cmov_logical r0.__z_, r0.z, r0.w, r1.y\n"
"\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2.__zw, r1.xxxz, l20\n"
"\n"
"dcl_literal l21, 0x00000000, 0x00000000, 0x7F800000, 0x00000000\n"
"ieq r3.xyz_, r1.zxxz, l21\n"
"and r0.___w, r2.z, r3.x\n"
"cmov_logical r0._y__, r0.w, r0.z, r0.y\n"
"\n"
"dcl_literal l22, 0x00800000, 0x32000000, 0x1C800000, 0x7F800000\n"
"ilt r4, r1.x, l22\n"
"and r0.__z_, r2.w, r4.y\n"
"\n"
"dcl_literal l23, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r0.___w, r1.x, l23\n"
"cmov_logical r0._y__, r0.z, r0.w, r0.y\n"
"frc r0.__z_, r1.x\n"
"add r0.___w, r1.x, r0.z_neg(xyzw)\n"
"\n"
"dcl_literal l24, 0x00000000, 0x00000000, 0x3F000000, 0x00000000\n"
"eq r1._yz_, r0.z, l24\n"
"\n"
"dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ge r0.__z_, r0.w, l25\n"
"\n"
"dcl_literal l26, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r0.___w, r0.w, l26\n"
"and r0.__z_, r1.y, r0.z\n"
"ior r0.__z_, r3.y, r0.z\n"
"\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l27, r0.y\n"
"frc r0.__z_, r0.w\n"
"\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r0.__z_, r0.z, l28\n"
"\n"
"dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"\n"
"dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.__z_, r0.z, l29, l30\n"
"cmov_logical r0._y__, r1.z, r0.z, r0.y\n"
"\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, r0.x, l31\n"
"cmov_logical r0._y__, r0.z, r0.y_neg(xyzw), r0.y\n"
"mul_ieee r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l32, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.y, l32\n"
"\n"
"dcl_literal l33, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"div_zeroop(infinity) r5._y__, l33, r0.w_abs\n"
"\n"
"dcl_literal l34, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.___w, r5.y, l34\n"
"itof r0.___w, r0.w\n"
"\n"
"dcl_literal l35, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r1._yz_, r0.w, l35\n"
"\n"
"dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.y, l36\n"
"\n"
"dcl_literal l37, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1._y__, r1.z, l37\n"
"\n"
"dcl_literal l38, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"iadd r0.___w, r0.w, l38\n"
"\n"
"dcl_literal l39, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.___w, l39, r0.w_neg(xyzw)\n"
"inegate r1.__z_, r0.w\n"
"\n"
"dcl_literal l40, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1.__z_, r1.z, l40\n"
"iadd r1.__z_, r1.y, r1.z\n"
"ishr r1._y__, r1.y, r0.w\n"
"\n"
"dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l41, r0.w\n"
"cmov_logical r6.___w, r0.w, r1.y, r1.z\n"
"\n"
"dcl_literal l42, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r0.___w, r5.y, l42\n"
"\n"
"dcl_literal l43, 0xFFFFFFE7, 0x00000000, 0xFFFFFFE7, 0x00000000\n"
"mov r6.x_z_, l43\n"
"\n"
"dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r5.x__w, l44\n"
"cmov_logical r1._yz_, r0.w, r6.zzwz, r5.xxyx\n"
"\n"
"dcl_literal l45, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r1.z, l45\n"
"iadd r0.___w, r0.w, r1.y\n"
"\n"
"dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1._y__, r1.z, l46\n"
"\n"
"dcl_literal l47, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, l47, r0.w\n"
"\n"
"dcl_literal l48, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1.__z_, l48, r1.y\n"
"\n"
"dcl_literal l49, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.__z_, r1.z, l49\n"
"\n"
"dcl_literal l50, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r1.z, l50\n"
"\n"
"dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1.__z_, r1.z, l51\n"
"iadd r0.___w, r0.w, r2.z\n"
"itof r0.___w, r0.w\n"
"\n"
"dcl_literal l52, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r2.__z_, r0.w, l52\n"
"ior r1._y__, r1.y, r1.z\n"
"\n"
"dcl_literal l53, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r1._yz_, r1.y, l53\n"
"div_zeroop(infinity) r1.__z_, r1.y, r1.z\n"
"mul_ieee r2.___w, r1.z, r1.z\n"
"mul_ieee r3.x___, r2.w, r2.w\n"
"\n"
"dcl_literal l54, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l55, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r5.xy__, r3.x, l54, l55\n"
"\n"
"dcl_literal l56, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r5.xy__, r3.x, r5.xyxx, l56\n"
"mul_ieee r3.___w, r3.x, r5.x\n"
"\n"
"dcl_literal l57, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r3.x___, r3.x, r5.y, l57\n"
"mad_ieee r2.___w, r2.w, r3.x, r3.w\n"
"mul_ieee r3.x___, r1.y, r1.y\n"
"\n"
"dcl_literal l58, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.___w, r3.x, l58, r2.w\n"
"mad_ieee r1.__z_, r1.z, r2.w, r2.z\n"
"\n"
"dcl_literal l59, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.__z_, r3.x, l59, r1.z_neg(xyzw)\n"
"add r1._y__, r1.y_neg(xyzw), r1.z\n"
"\n"
"dcl_literal l60, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.___w, r0.w, l60, r1.y_neg(xyzw)\n"
"\n"
"dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1._y__, r2.x, l61\n"
"\n"
"dcl_literal l62, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.__z_, r2.y, l62\n"
"\n"
"dcl_literal l63, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"iadd r1._y__, r1.y, l63\n"
"\n"
"dcl_literal l64, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r1._y__, l64, r1.y_neg(xyzw)\n"
"inegate r2.x___, r1.y\n"
"\n"
"dcl_literal l65, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r2.x, l65\n"
"iadd r2.x___, r1.z, r2.x\n"
"ishr r1.__z_, r1.z, r1.y\n"
"\n"
"dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, l66, r1.y\n"
"cmov_logical r6._y__, r1.y, r1.z, r2.x\n"
"\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r1.___w, l67\n"
"cmov_logical r1._yz_, r4.x, r6.xxyx, r1.wwxw\n"
"\n"
"dcl_literal l68, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.___w, r1.z, l68\n"
"iadd r1._y__, r1.w, r1.y\n"
"\n"
"dcl_literal l69, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.__z_, r1.z, l69\n"
"\n"
"dcl_literal l70, 0x00000000, 0xFFFFFF81, 0x00000000, 0x004AFB20\n"
"iadd r1._y_w, l70, r1.yyyz\n"
"\n"
"dcl_literal l71, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.___w, r1.w, l71\n"
"\n"
"dcl_literal l72, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r1.w, l72\n"
"\n"
"dcl_literal l73, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1.___w, r1.w, l73\n"
"iadd r1._y__, r1.y, r2.x\n"
"itof r1._y__, r1.y\n"
"\n"
"dcl_literal l74, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r2.x___, r1.y, l74\n"
"ior r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l75, 0x00000000, 0x00000000, 0xBF800000, 0x3F800000\n"
"add r1.__zw, r1.z, l75\n"
"div_zeroop(infinity) r1.___w, r1.z, r1.w\n"
"mul_ieee r2._y__, r1.w, r1.w\n"
"mul_ieee r2.__z_, r2.y, r2.y\n"
"\n"
"dcl_literal l76, 0x3E1CD04F, 0x00000000, 0x00000000, 0x3E178897\n"
"\n"
"dcl_literal l77, 0x3E638E29, 0x00000000, 0x00000000, 0x3E3A3325\n"
"mad_ieee r3.x__w, r2.z, l76, l77\n"
"\n"
"dcl_literal l78, 0x3ECCCCCD, 0x00000000, 0x00000000, 0x3E924925\n"
"mad_ieee r3.x__w, r2.z, r3.xxxw, l78\n"
"mul_ieee r2.___w, r2.z, r3.x\n"
"\n"
"dcl_literal l79, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r2.__z_, r2.z, r3.w, l79\n"
"mad_ieee r2._y__, r2.y, r2.z, r2.w\n"
"mul_ieee r2.__z_, r1.z, r1.z\n"
"\n"
"dcl_literal l80, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2._y__, r2.z, l80, r2.y\n"
"mad_ieee r1.___w, r1.w, r2.y, r2.x\n"
"\n"
"dcl_literal l81, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.___w, r2.z, l81, r1.w_neg(xyzw)\n"
"add r1.__z_, r1.z_neg(xyzw), r1.w\n"
"\n"
"dcl_literal l82, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r1._y__, r1.y, l82, r1.z_neg(xyzw)\n"
"\n"
"dcl_literal l83, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"mul_ieee r1.__z_, r1.y, l83\n"
"cmov_logical r1.___w, r4.y, r1.z, r0.w\n"
"mov r1.__z_, r0.x_neg(xyzw)\n"
"mov r5.__z_, r0.x\n"
"cmov_logical r1.__zw, r0.z, r1.zzzw, r5.zzzw\n"
"ftoi r0.___w, r1.z\n"
"\n"
"dcl_literal l84, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"ige r2.x___, r0.w, l84\n"
"\n"
"dcl_literal l85, 0x00000007, 0x00000006, 0x00000005, 0x00000004\n"
"ige r5, r0.w, l85\n"
"round_z r0.___w, r1.z\n"
"add r0.___w, r1.z, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l86, 0x40C00000, 0x40A00000, 0x40800000, 0x40400000\n"
"add r6, r0.w, l86\n"
"\n"
"dcl_literal l87, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r2._y__, r5.x, r6.x, l87\n"
"mul_ieee r2.__z_, r6.y, r2.y\n"
"cmov_logical r2._y__, r5.y, r2.z, r2.y\n"
"mul_ieee r2.__z_, r6.z, r2.y\n"
"cmov_logical r2._y__, r5.z, r2.z, r2.y\n"
"mul_ieee r2.__z_, r6.w, r2.y\n"
"cmov_logical r2._y__, r5.w, r2.z, r2.y\n"
"\n"
"dcl_literal l88, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r2.__z_, r0.w, l88\n"
"mul_ieee r2.__z_, r2.y, r2.z\n"
"cmov_logical r2.___w, r2.x, r2.z, r2.y\n"
"\n"
"dcl_literal l89, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3.x___, r2.w, l89\n"
"itof r3.x___, r3.x\n"
"\n"
"dcl_literal l90, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF\n"
"and r3.x__w, r3.x, l90\n"
"\n"
"dcl_literal l91, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.___w, r3.w, l91\n"
"\n"
"dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r3.x, l92\n"
"\n"
"dcl_literal l93, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"iadd r3.x___, r3.x, l93\n"
"\n"
"dcl_literal l94, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r3.x___, l94, r3.x_neg(xyzw)\n"
"inegate r4.x___, r3.x\n"
"\n"
"dcl_literal l95, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r4.x___, r4.x, l95\n"
"iadd r4.x___, r3.w, r4.x\n"
"ishr r3.___w, r3.w, r3.x\n"
"\n"
"dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.x___, l96, r3.x\n"
"cmov_logical r2._y__, r3.x, r3.w, r4.x\n"
"\n"
"dcl_literal l97, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r3.x___, r2.w, l97\n"
"\n"
"dcl_literal l98, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000\n"
"mov r2.x_z_, l98\n"
"cmov_logical r2.xy__, r3.x, r2.xyxx, r2.zwzz\n"
"\n"
"dcl_literal l99, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.y, l99\n"
"iadd r2.x___, r2.z, r2.x\n"
"\n"
"dcl_literal l100, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2._y__, r2.y, l100\n"
"\n"
"dcl_literal l101, 0xFFFFFF81, 0x00000000, 0x004AFB20, 0x00000000\n"
"iadd r2.x_z_, l101, r2.xxyx\n"
"\n"
"dcl_literal l102, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r2.__z_, r2.z, l102\n"
"\n"
"dcl_literal l103, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.___w, r2.z, l103\n"
"\n"
"dcl_literal l104, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r2.__z_, r2.z, l104\n"
"iadd r2.x___, r2.x, r2.w\n"
"itof r2.x___, r2.x\n"
"\n"
"dcl_literal l105, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r2.___w, r2.x, l105\n"
"ior r2._y__, r2.y, r2.z\n"
"\n"
"dcl_literal l106, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r2._yz_, r2.y, l106\n"
"div_zeroop(infinity) r2.__z_, r2.y, r2.z\n"
"mul_ieee r3.x___, r2.z, r2.z\n"
"mul_ieee r3.___w, r3.x, r3.x\n"
"\n"
"dcl_literal l107, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l108, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.w, l107, l108\n"
"\n"
"dcl_literal l109, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.w, r4.xyxx, l109\n"
"mul_ieee r4.x___, r3.w, r4.x\n"
"\n"
"dcl_literal l110, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r3.___w, r3.w, r4.y, l110\n"
"mad_ieee r3.x___, r3.x, r3.w, r4.x\n"
"mul_ieee r3.___w, r2.y, r2.y\n"
"\n"
"dcl_literal l111, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3.x___, r3.w, l111, r3.x\n"
"mad_ieee r2.__z_, r2.z, r3.x, r2.w\n"
"\n"
"dcl_literal l112, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.__z_, r3.w, l112, r2.z_neg(xyzw)\n"
"add r2._y__, r2.y_neg(xyzw), r2.z\n"
"\n"
"dcl_literal l113, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2.x___, r2.x, l113, r2.y_neg(xyzw)\n"
"\n"
"dcl_literal l114, 0x00000000, 0x375943FE, 0x3A620FAB, 0x00000000\n"
"\n"
"dcl_literal l115, 0x00000000, 0x3B1F8219, 0x3CD01D14, 0x00000000\n"
"mad_ieee r2._yz_, r0.w, l114, l115\n"
"\n"
"dcl_literal l116, 0x00000000, 0x3D11C643, 0x3E53B452, 0x00000000\n"
"mad_ieee r2._yz_, r2.yyzy, r0.w, l116\n"
"\n"
"dcl_literal l117, 0x00000000, 0x3E11BDA2, 0x3F1E0B56, 0x00000000\n"
"mad_ieee r2._yz_, r2.yyzy, r0.w, l117\n"
"\n"
"dcl_literal l118, 0x00000000, 0x3E172A19, 0x3F1B09B3, 0x00000000\n"
"mad_ieee r2._yz_, r2.yyzy, r0.w, l118\n"
"\n"
"dcl_literal l119, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9\n"
"mad_ieee r2._y__, r2.y, r0.w, l119\n"
"mul_ieee r2._y__, r0.w, r2.y\n"
"div_zeroop(infinity) r2._y__, r2.y, r2.z\n"
"\n"
"dcl_literal l120, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r0.w, l120, r2.y\n"
"add r0.___w, r2.x, r0.w\n"
"\n"
"dcl_literal l121, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r2.x___, l121, r1.z\n"
"mul_ieee r2._y__, r2.x, r2.x\n"
"\n"
"dcl_literal l122, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8\n"
"\n"
"dcl_literal l123, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2\n"
"mad_ieee r2.__z_, r2.y, l122, l123\n"
"\n"
"dcl_literal l124, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C\n"
"mad_ieee r2.__z_, r2.y, r2.z, l124\n"
"\n"
"dcl_literal l125, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD\n"
"mad_ieee r2.__z_, r2.y, r2.z, l125\n"
"\n"
"dcl_literal l126, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r2.__z_, r2.y, r2.z, l126\n"
"\n"
"dcl_literal l127, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"mad_ieee r2._y__, r2.y, r2.z, l127\n"
"\n"
"dcl_literal l128, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D\n"
"mad_ieee r2.x___, r2.x, r2.y, l128\n"
"\n"
"dcl_literal l129, 0xBEEC5B0C, 0xBF800000, 0xBFBB16C3, 0xBF000000\n"
"add r5, r1.z, l129\n"
"\n"
"dcl_literal l130, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r2._y__, r1.y, l130\n"
"mov r1._y__, r1.y_neg(xyzw)\n"
"mad_ieee r2.x___, r5.w, r2.y, r2.x\n"
"mul_ieee r2._y__, r1.z, r2.y\n"
"\n"
"dcl_literal l131, 0x3FDDA512, 0x41000000, 0x40000000, 0x00000000\n"
"ge r6.xyz_, r1.z, l131\n"
"\n"
"dcl_literal l132, 0x40000000, 0x5C800000, 0x41000000, 0x00000000\n"
"lt r7.xyz_, r1.z, l132\n"
"and r6.xyz_, r6.xyzx, r7.xyzx\n"
"cmov_logical r2.x___, r6.y, r2.x, r2.y\n"
"cmov_logical r0.___w, r6.z, r0.w, r2.x\n"
"\n"
"dcl_literal l133, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666\n"
"lt r2.x___, l133, r1.z\n"
"\n"
"dcl_literal l134, 0x3F3B4A23, 0x3E6B851F, 0x3F9D70A4, 0x3FDDA512\n"
"lt r8, r1.z, l134\n"
"and r2.x___, r2.x, r8.z\n"
"\n"
"dcl_literal l135, 0x3F3B4A23, 0x3E6B851F, 0x00000000, 0x3F9D70A4\n"
"ge r9, r1.z, l135\n"
"and r2._yzw, r8.xxyw, r9.yyzw\n"
"ior r3.x___, r2.x, r2.z\n"
"\n"
"dcl_literal l136, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3.___w, r2.y, l136\n"
"\n"
"dcl_literal l137, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"cmov_logical r3.x___, r3.x, l137, r3.w\n"
"\n"
"dcl_literal l138, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r3.x___, r2.w, l138, r3.x\n"
"\n"
"dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r6.x, l139, r3.x\n"
"\n"
"dcl_literal l140, 0x00000000, 0x00000000, 0x00000001, 0x00000002\n"
"ieq r6._yzw, r3.x, l140\n"
"and r6._yzw, r7.x, r6.yyzw\n"
"\n"
"dcl_literal l141, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666\n"
"ge r3.x___, l141, r1.z\n"
"and r3.___w, r9.x, r3.x\n"
"and r3.x___, r1.y, r3.x\n"
"\n"
"dcl_literal l142, 0x3F800000, 0x40000000, 0x00000000, 0x00000000\n"
"add r4.xy__, r1.z_neg(xyzw), l142\n"
"and r3.___w, r3.w, r4.x\n"
"cmov_logical r2._y__, r2.y, r5.x, r3.w\n"
"cmov_logical r1.__z_, r2.z, r1.z, r2.y\n"
"cmov_logical r1.__z_, r2.x, r5.y, r1.z\n"
"cmov_logical r1.__z_, r2.w, r5.z, r1.z\n"
"cmov_logical r1.__z_, r6.x, r4.y, r1.z\n"
"mul_ieee r2.x___, r1.z, r1.z\n"
"\n"
"dcl_literal l143, 0x00000000, 0x37D383A2, 0x383C2C75, 0x00000000\n"
"\n"
"dcl_literal l144, 0x00000000, 0x39679767, 0x38E28445, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, l143, l144\n"
"\n"
"dcl_literal l145, 0x00000000, 0x3A9C54A1, 0x3A05B634, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, r2.yyzy, l145\n"
"\n"
"dcl_literal l146, 0x00000000, 0x3BF2027E, 0x3B3D6EC6, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, r2.yyzy, l146\n"
"\n"
"dcl_literal l147, 0x00000000, 0x3D89F001, 0x3CA89915, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, r2.yyzy, l147\n"
"\n"
"dcl_literal l148, 0x00000000, 0x3D9E233F, 0x3EA51A66, 0x00000000\n"
"mad_ieee r2._yz_, r2.x, r2.yyzy, l148\n"
"mul_ieee r2.__z_, r2.x, r2.z\n"
"mad_ieee r2._y__, r1.z, r2.y, r2.z\n"
"\n"
"dcl_literal l149, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2._y__, r1.z_neg(xyzw), l149, r2.y\n"
"add r2._y__, r3.x, r2.y\n"
"cmov_logical r0.___w, r6.y, r2.y, r0.w\n"
"mul_ieee r2._y__, r1.z, r2.x\n"
"\n"
"dcl_literal l150, 0x39A57B6B, 0xB9A3F927, 0x39AFE9F7, 0x00000000\n"
"\n"
"dcl_literal l151, 0xBAB7F476, 0x3A66F867, 0xBA0D3085, 0x00000000\n"
"mad_ieee r5.xyz_, r2.y, l150, l151\n"
"\n"
"dcl_literal l152, 0x3BC7E707, 0xBB7177FE, 0x3B141699, 0x00000000\n"
"mad_ieee r5.xyz_, r2.y, r5.xyzx, l152\n"
"\n"
"dcl_literal l153, 0xBD064D47, 0x3C93373D, 0xBC28FCFE, 0x00000000\n"
"mad_ieee r5.xyz_, r2.y, r5.xyzx, l153\n"
"\n"
"dcl_literal l154, 0x3EF7B95E, 0xBE17213C, 0x3D845A15, 0x00000000\n"
"mad_ieee r5.xyz_, r2.y, r5.xyzx, l154\n"
"mad_ieee r2.__z_, r1.z, r5.z, r5.y\n"
"\n"
"dcl_literal l155, 0x31E61C52, 0x31E61C52, 0x31E61C52, 0x31E61C52\n"
"mad_ieee r2._y__, r2.y_neg(xyzw), r2.z, l155\n"
"mad_ieee r2.x___, r2.x, r5.x, r2.y_neg(xyzw)\n"
"add r2.x___, r3.x, r2.x\n"
"\n"
"dcl_literal l156, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD\n"
"add r2.x___, r2.x, l156\n"
"cmov_logical r0.___w, r6.z, r2.x, r0.w\n"
"\n"
"dcl_literal l157, 0x3C5B3C5E, 0x3B52D5DB, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l158, 0x3E6A7578, 0x3DD572AF, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, l157, l158\n"
"\n"
"dcl_literal l159, 0x3F7A4BB2, 0x3F44EFDF, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l159\n"
"\n"
"dcl_literal l160, 0x3FBA3AE7, 0x4008392D, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l160\n"
"\n"
"dcl_literal l161, 0x3F2200F4, 0x401D2EBE, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l161\n"
"\n"
"dcl_literal l162, 0xBD9E233F, 0x3F800000, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l162\n"
"mul_ieee r2.x___, r1.z, r2.x\n"
"div_zeroop(infinity) r2.x___, r2.x, r2.y\n"
"\n"
"dcl_literal l163, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"mad_ieee r1.__z_, r1.z, l163, r2.x\n"
"add r1.__z_, r3.x, r1.z\n"
"cmov_logical r0.___w, r6.w, r1.z, r0.w\n"
"cmov_logical r0.___w, r4.z, r1.y, r0.w\n"
"add r1._y__, r1.w, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l164, 0x00000000, 0x00000000, 0x1C800000, 0x4B000000\n"
"ige r1.__zw, r1.x, l164\n"
"\n"
"dcl_literal l165, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, l165, r1.x\n"
"and r1.__zw, r0.z, r1.zzzw\n"
"cmov_logical r0.___w, r1.z, r1.y, r0.w\n"
"and r1._y__, r4.w, r1.w\n"
"\n"
"dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0._y__, r0.y, l166\n"
"and r0._y__, r0.z, r0.y\n"
"ior r0._y__, r3.y, r0.y\n"
"\n"
"dcl_literal l167, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l167, r0.w\n"
"cmov_logical r0._y__, r3.z, r0.x, r0.y\n"
"\n"
"dcl_literal l168, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.__z_, r0.x, l168\n"
"\n"
"dcl_literal l169, 0x3F800000, 0x00000000, 0x00000000, 0x40000000\n"
"ieq r0.x__w, r0.x, l169\n"
"cmov_logical r0._y__, r1.x, r0.z, r0.y\n"
"\n"
"dcl_literal l170, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r1.y, l170, r0.y\n"
"ior r0.x___, r0.w, r0.x\n"
"\n"
"dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l171, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__lgamma_r_2f32f32",
"mdef(257)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x_neg(xyzw)\n"
"max r1.__z_, r0.x, r1.x\n"
"\n"
"dcl_literal l0, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r1.___w, r1.z, l0\n"
"if_logicalnz r1.w\n"
"    \n"
"    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r1.___w, r1.z, l1\n"
"    itof r1.___w, r1.w\n"
"    \n"
"    dcl_literal l2, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r2.xy__, r1.w, l2\n"
"    \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.___w, r2.x, l3\n"
"    \n"
"    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"    iadd r1.___w, r1.w, l4\n"
"    \n"
"    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.x___, r2.y, l5\n"
"    \n"
"    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r1.___w, l6, r1.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, l7, r1.w\n"
"    ishr r2.__z_, r2.x, r1.w\n"
"    inegate r1.___w, r1.w\n"
"    \n"
"    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1.___w, r1.w, l8\n"
"    iadd r1.___w, r2.x, r1.w\n"
"    cmov_logical r1.__z_, r2.y, r2.z, r1.w\n"
"    \n"
"    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7\n"
"    mov r1.___w, l9\n"
"else\n"
"    \n"
"    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r1.___w, l10\n"
"endif\n"
"\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r1.z, l11\n"
"iadd r1.___w, r2.x, r1.w\n"
"\n"
"dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1.___w, l12, r1.w\n"
"\n"
"dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.__z_, r1.z, l13\n"
"\n"
"dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r2.x___, l14, r1.z\n"
"\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r2.x___, r2.x, l15\n"
"\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r2._y__, r2.x, l16\n"
"ior r1.__z_, r1.z, r2.y\n"
"\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.x___, r2.x, l17\n"
"iadd r1.___w, r1.w, r2.x\n"
"itof r1.___w, r1.w\n"
"\n"
"dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r2.xy__, r1.z, l18\n"
"div_zeroop(infinity) r1.__z_, r2.x, r2.y\n"
"mul_ieee r2._y__, r1.z, r1.z\n"
"mul_ieee r2.__z_, r2.y, r2.y\n"
"\n"
"dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r2.z, l19, l20\n"
"\n"
"dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r2.z, r3.xyxx, l21\n"
"mul_ieee r2.___w, r2.z, r3.x\n"
"\n"
"dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r2.__z_, r2.z, r3.y, l22\n"
"mad_ieee r2._y__, r2.y, r2.z, r2.w\n"
"mul_ieee r2.__z_, r2.x, r2.x\n"
"\n"
"dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2._y__, r2.z, l23, r2.y\n"
"\n"
"dcl_literal l24, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r2.___w, r1.w, l24\n"
"mad_ieee r1.__z_, r1.z, r2.y, r2.w\n"
"\n"
"dcl_literal l25, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.__z_, r2.z, l25, r1.z_neg(xyzw)\n"
"add r1.__z_, r2.x_neg(xyzw), r1.z\n"
"\n"
"dcl_literal l26, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r1.__z_, r1.w, l26, r1.z_neg(xyzw)\n"
"\n"
"dcl_literal l27, 0x7F800000, 0x7FFFFFFF, 0x7FFFFFFF, 0x00000000\n"
"and r2.xyz_, r0.x, l27\n"
"frc r1.___w, r2.z\n"
"add r2.___w, r2.z, r1.w_neg(xyzw)\n"
"\n"
"dcl_literal l28, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r3.x___, r2.w, l28\n"
"frc r3.x___, r3.x\n"
"\n"
"dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r3.x___, r3.x, l29\n"
"add r3._y__, r2.z, r2.z\n"
"round_nearest r3._y__, r3.y\n"
"\n"
"dcl_literal l30, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r3.__z_, r2.z, l30, r3.y_neg(xyzw)\n"
"\n"
"dcl_literal l31, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mul_ieee r3._y__, r3.y, l31\n"
"frc r3._y__, r3.y\n"
"\n"
"dcl_literal l32, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"mul_ieee r3._y__, r3.y, l32\n"
"round_nearest r3._y__, r3.y\n"
"\n"
"dcl_literal l33, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"mul_ieee r3.__z_, r3.z, l33\n"
"mul_ieee r3.___w, r3.z, r3.z\n"
"mul_ieee r4.x___, r3.z, r3.w\n"
"\n"
"dcl_literal l34, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000\n"
"\n"
"dcl_literal l35, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000\n"
"mad_ieee r4._yz_, r3.w, l34, l35\n"
"\n"
"dcl_literal l36, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000\n"
"mad_ieee r4._yz_, r3.w, r4.yyzy, l36\n"
"\n"
"dcl_literal l37, 0x00000000, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000\n"
"mad_ieee r4._yz_, r3.w, r4.yyzy, l37\n"
"mad_ieee r3.__z_, r4.x, r4.y, r3.z\n"
"\n"
"dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"\n"
"dcl_literal l39, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r4.x___, r3.w_neg(xyzw), l38, l39\n"
"mul_ieee r3.___w, r3.w, r3.w\n"
"mad_ieee r3.___w, r3.w, r4.z, r4.x\n"
"\n"
"dcl_literal l40, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"eq r4, r3.y, l40\n"
"\n"
"dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ge r3._y__, r2.z, l41\n"
"and r4, r4, r3.y\n"
"and r3._y__, r3.z, r4.x\n"
"cmov_logical r3._y__, r4.y, r3.w, r3.y\n"
"cmov_logical r3._y__, r4.z, r3.z_neg(xyzw), r3.y\n"
"cmov_logical r3._y__, r4.w, r3.w_neg(xyzw), r3.y\n"
"\n"
"dcl_literal l42, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r3.__zw, r2.zzzx, l42\n"
"\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x7F800000, 0x00000000\n"
"ieq r4.xyz_, r2.xyzx, l43\n"
"and r2.x___, r3.z, r4.x\n"
"itof r2._y__, r2.z\n"
"\n"
"dcl_literal l44, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r2._y__, r2.y, l44\n"
"\n"
"dcl_literal l45, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF\n"
"and r4.x__w, r2.y, l45\n"
"\n"
"dcl_literal l46, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2._y__, r4.x, l46\n"
"\n"
"dcl_literal l47, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.__z_, r4.w, l47\n"
"\n"
"dcl_literal l48, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r2._y__, l48, r2.y_neg(xyzw)\n"
"\n"
"dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.x___, l49, r2.y\n"
"ishr r4.___w, r3.z, r2.y\n"
"inegate r2._y__, r2.y\n"
"\n"
"dcl_literal l50, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2._y__, r2.y, l50\n"
"iadd r2._y__, r3.z, r2.y\n"
"cmov_logical r2._y__, r4.x, r4.w, r2.y\n"
"cmov_logical r2.x___, r2.x, r2.y, r3.y\n"
"\n"
"dcl_literal l51, 0x32000000, 0x1C800000, 0x7F800000, 0x00000000\n"
"ilt r5.xyz_, r2.z, l51\n"
"and r2._y__, r3.w, r5.x\n"
"\n"
"dcl_literal l52, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r3._y__, r2.z, l52\n"
"cmov_logical r2.x___, r2.y, r3.y, r2.x\n"
"\n"
"dcl_literal l53, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ge r2._y__, r2.w, l53\n"
"\n"
"dcl_literal l54, 0x00000000, 0x00000000, 0x3F000000, 0x00000000\n"
"eq r3._yz_, r1.w, l54\n"
"and r1.___w, r2.y, r3.y\n"
"ior r1.___w, r4.y, r1.w\n"
"\n"
"dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.___w, r1.w, l55, r2.x\n"
"\n"
"dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"\n"
"dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r2.x___, r3.x, l56, l57\n"
"cmov_logical r1.___w, r3.z, r2.x, r1.w\n"
"\n"
"dcl_literal l58, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r0.x, l58\n"
"cmov_logical r1.___w, r2.x, r1.w_neg(xyzw), r1.w\n"
"mul_ieee r2._y__, r0.x, r1.w\n"
"\n"
"dcl_literal l59, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"div_zeroop(infinity) r3.___w, l59, r2.y_abs\n"
"\n"
"dcl_literal l60, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r2._y__, r3.w, l60\n"
"\n"
"dcl_literal l61, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r3.w, l61\n"
"itof r2.___w, r2.w\n"
"\n"
"dcl_literal l62, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF\n"
"and r4.x__w, r2.w, l62\n"
"\n"
"dcl_literal l63, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.___w, r4.x, l63\n"
"\n"
"dcl_literal l64, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"iadd r2.___w, r2.w, l64\n"
"\n"
"dcl_literal l65, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r4.x___, r4.w, l65\n"
"\n"
"dcl_literal l66, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r2.___w, l66, r2.w_neg(xyzw)\n"
"\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.___w, l67, r2.w\n"
"ishr r5.___w, r4.x, r2.w\n"
"inegate r2.___w, r2.w\n"
"\n"
"dcl_literal l68, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.___w, r2.w, l68\n"
"iadd r2.___w, r4.x, r2.w\n"
"cmov_logical r3._y__, r4.w, r5.w, r2.w\n"
"\n"
"dcl_literal l69, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000\n"
"mov r3.x_z_, l69\n"
"cmov_logical r2._y_w, r2.y, r3.xxxy, r3.zzzw\n"
"\n"
"dcl_literal l70, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r2.w, l70\n"
"iadd r2._y__, r3.x, r2.y\n"
"\n"
"dcl_literal l71, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2._y__, l71, r2.y\n"
"\n"
"dcl_literal l72, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r2.w, l72\n"
"\n"
"dcl_literal l73, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r3.x___, l73, r2.w\n"
"\n"
"dcl_literal l74, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r3.x___, r3.x, l74\n"
"\n"
"dcl_literal l75, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r3._y__, r3.x, l75\n"
"ior r2.___w, r2.w, r3.y\n"
"\n"
"dcl_literal l76, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r3.x, l76\n"
"iadd r2._y__, r2.y, r3.x\n"
"itof r2._y__, r2.y\n"
"\n"
"dcl_literal l77, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r3.xy__, r2.w, l77\n"
"div_zeroop(infinity) r2.___w, r3.x, r3.y\n"
"mul_ieee r3._y__, r2.w, r2.w\n"
"mul_ieee r3.__z_, r3.y, r3.y\n"
"\n"
"dcl_literal l78, 0x3E1CD04F, 0x00000000, 0x00000000, 0x3E178897\n"
"\n"
"dcl_literal l79, 0x3E638E29, 0x00000000, 0x00000000, 0x3E3A3325\n"
"mad_ieee r4.x__w, r3.z, l78, l79\n"
"\n"
"dcl_literal l80, 0x3ECCCCCD, 0x00000000, 0x00000000, 0x3E924925\n"
"mad_ieee r4.x__w, r3.z, r4.xxxw, l80\n"
"mul_ieee r3.___w, r3.z, r4.x\n"
"\n"
"dcl_literal l81, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r3.__z_, r3.z, r4.w, l81\n"
"mad_ieee r3._y__, r3.y, r3.z, r3.w\n"
"mul_ieee r3.__z_, r3.x, r3.x\n"
"\n"
"dcl_literal l82, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r3.z, l82, r3.y\n"
"\n"
"dcl_literal l83, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r3.___w, r2.y, l83\n"
"mad_ieee r2.___w, r2.w, r3.y, r3.w\n"
"\n"
"dcl_literal l84, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.___w, r3.z, l84, r2.w_neg(xyzw)\n"
"add r2.___w, r3.x_neg(xyzw), r2.w\n"
"\n"
"dcl_literal l85, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2._y__, r2.y, l85, r2.w_neg(xyzw)\n"
"mov r2.___w, r1.z_neg(xyzw)\n"
"\n"
"dcl_literal l86, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"mul_ieee r3.x___, r1.z, l86\n"
"cmov_logical r1._y__, r5.x, r3.x, r2.y\n"
"\n"
"dcl_literal l87, 0x00000000, 0x00000000, 0xFFFFFFE7, 0x00000000\n"
"mov r0._yz_, l87\n"
"cmov_logical r1.xy__, r2.x, r1.xyxx, r0.xyxx\n"
"\n"
"dcl_literal l88, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666\n"
"ge r0._y__, l88, r1.x\n"
"and r2._y__, r2.w, r0.y\n"
"\n"
"dcl_literal l89, 0x3F3B4A23, 0x3E6B851F, 0x00000000, 0x3F9D70A4\n"
"ge r3, r1.x, l89\n"
"and r0._y__, r0.y, r3.x\n"
"\n"
"dcl_literal l90, 0x3F800000, 0x00000000, 0x00000000, 0x40000000\n"
"add r4.x__w, r1.x_neg(xyzw), l90\n"
"and r0._y__, r0.y, r4.x\n"
"\n"
"dcl_literal l91, 0x3F3B4A23, 0x3E6B851F, 0x3F9D70A4, 0x3FDDA512\n"
"lt r6, r1.x, l91\n"
"and r3.xyz_, r3.yzwy, r6.xywx\n"
"\n"
"dcl_literal l92, 0xBEEC5B0C, 0xBF800000, 0xBFBB16C3, 0xBF000000\n"
"add r7, r1.x, l92\n"
"cmov_logical r0._y__, r3.x, r7.x, r0.y\n"
"\n"
"dcl_literal l93, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3.x___, r3.x, l93\n"
"cmov_logical r0._y__, r3.y, r1.x, r0.y\n"
"\n"
"dcl_literal l94, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666\n"
"lt r3.___w, l94, r1.x\n"
"and r3.___w, r6.z, r3.w\n"
"cmov_logical r0._y__, r3.w, r7.y, r0.y\n"
"ior r3._y__, r3.y, r3.w\n"
"\n"
"dcl_literal l95, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"cmov_logical r3.x___, r3.y, l95, r3.x\n"
"cmov_logical r0._y__, r3.z, r7.z, r0.y\n"
"\n"
"dcl_literal l96, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r3.x___, r3.z, l96, r3.x\n"
"\n"
"dcl_literal l97, 0x00000000, 0x3FDDA512, 0x41000000, 0x40000000\n"
"ge r3._yzw, r1.x, l97\n"
"\n"
"dcl_literal l98, 0x40000000, 0x5C800000, 0x41000000, 0x00000000\n"
"lt r6.xyz_, r1.x, l98\n"
"and r3._yzw, r3.yyzw, r6.xxyz\n"
"cmov_logical r0._y__, r3.y, r4.w, r0.y\n"
"\n"
"dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r3.y, l99, r3.x\n"
"mul_ieee r3._y__, r0.y, r0.y\n"
"\n"
"dcl_literal l100, 0x37D383A2, 0x00000000, 0x00000000, 0x383C2C75\n"
"\n"
"dcl_literal l101, 0x39679767, 0x00000000, 0x00000000, 0x38E28445\n"
"mad_ieee r4.x__w, r3.y, l100, l101\n"
"\n"
"dcl_literal l102, 0x3A9C54A1, 0x00000000, 0x00000000, 0x3A05B634\n"
"mad_ieee r4.x__w, r3.y, r4.xxxw, l102\n"
"\n"
"dcl_literal l103, 0x3BF2027E, 0x00000000, 0x00000000, 0x3B3D6EC6\n"
"mad_ieee r4.x__w, r3.y, r4.xxxw, l103\n"
"\n"
"dcl_literal l104, 0x3D89F001, 0x00000000, 0x00000000, 0x3CA89915\n"
"mad_ieee r4.x__w, r3.y, r4.xxxw, l104\n"
"\n"
"dcl_literal l105, 0x3D9E233F, 0x00000000, 0x00000000, 0x3EA51A66\n"
"mad_ieee r4.x__w, r3.y, r4.xxxw, l105\n"
"mul_ieee r4.___w, r3.y, r4.w\n"
"mad_ieee r4.x___, r0.y, r4.x, r4.w\n"
"\n"
"dcl_literal l106, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r4.x___, r0.y_neg(xyzw), l106, r4.x\n"
"add r4.x___, r2.y, r4.x\n"
"mul_ieee r4.___w, r0.y, r3.y\n"
"\n"
"dcl_literal l107, 0x00000000, 0x39A57B6B, 0xB9A3F927, 0x39AFE9F7\n"
"\n"
"dcl_literal l108, 0x00000000, 0xBAB7F476, 0x3A66F867, 0xBA0D3085\n"
"mad_ieee r6._yzw, r4.w, l107, l108\n"
"\n"
"dcl_literal l109, 0x00000000, 0x3BC7E707, 0xBB7177FE, 0x3B141699\n"
"mad_ieee r6._yzw, r4.w, r6.yyzw, l109\n"
"\n"
"dcl_literal l110, 0x00000000, 0xBD064D47, 0x3C93373D, 0xBC28FCFE\n"
"mad_ieee r6._yzw, r4.w, r6.yyzw, l110\n"
"\n"
"dcl_literal l111, 0x00000000, 0x3EF7B95E, 0xBE17213C, 0x3D845A15\n"
"mad_ieee r6._yzw, r4.w, r6.yyzw, l111\n"
"mad_ieee r5.x___, r0.y, r6.w, r6.z\n"
"\n"
"dcl_literal l112, 0x31E61C52, 0x31E61C52, 0x31E61C52, 0x31E61C52\n"
"mad_ieee r4.___w, r4.w_neg(xyzw), r5.x, l112\n"
"mad_ieee r3._y__, r3.y, r6.y, r4.w_neg(xyzw)\n"
"add r3._y__, r2.y, r3.y\n"
"\n"
"dcl_literal l113, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD\n"
"add r3._y__, r3.y, l113\n"
"\n"
"dcl_literal l114, 0x3C5B3C5E, 0x00000000, 0x00000000, 0x3B52D5DB\n"
"\n"
"dcl_literal l115, 0x3E6A7578, 0x00000000, 0x00000000, 0x3DD572AF\n"
"mad_ieee r5.x__w, r0.y, l114, l115\n"
"\n"
"dcl_literal l116, 0x3F7A4BB2, 0x00000000, 0x00000000, 0x3F44EFDF\n"
"mad_ieee r5.x__w, r0.y, r5.xxxw, l116\n"
"\n"
"dcl_literal l117, 0x3FBA3AE7, 0x00000000, 0x00000000, 0x4008392D\n"
"mad_ieee r5.x__w, r0.y, r5.xxxw, l117\n"
"\n"
"dcl_literal l118, 0x3F2200F4, 0x00000000, 0x00000000, 0x401D2EBE\n"
"mad_ieee r5.x__w, r0.y, r5.xxxw, l118\n"
"\n"
"dcl_literal l119, 0xBD9E233F, 0x00000000, 0x00000000, 0x3F800000\n"
"mad_ieee r5.x__w, r0.y, r5.xxxw, l119\n"
"mul_ieee r4.___w, r0.y, r5.x\n"
"div_zeroop(infinity) r4.___w, r4.w, r5.w\n"
"\n"
"dcl_literal l120, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"mad_ieee r0._y__, r0.y, l120, r4.w\n"
"add r0._y__, r2.y, r0.y\n"
"ftoi r2._y__, r1.x\n"
"round_z r4.___w, r1.x\n"
"add r4.___w, r1.x, r4.w_neg(xyzw)\n"
"\n"
"dcl_literal l121, 0x375943FE, 0x00000000, 0x00000000, 0x3A620FAB\n"
"\n"
"dcl_literal l122, 0x3B1F8219, 0x00000000, 0x00000000, 0x3CD01D14\n"
"mad_ieee r5.x__w, r4.w, l121, l122\n"
"\n"
"dcl_literal l123, 0x3D11C643, 0x00000000, 0x00000000, 0x3E53B452\n"
"mad_ieee r5.x__w, r5.xxxw, r4.w, l123\n"
"\n"
"dcl_literal l124, 0x3E11BDA2, 0x00000000, 0x00000000, 0x3F1E0B56\n"
"mad_ieee r5.x__w, r5.xxxw, r4.w, l124\n"
"\n"
"dcl_literal l125, 0x3E172A19, 0x00000000, 0x00000000, 0x3F1B09B3\n"
"mad_ieee r5.x__w, r5.xxxw, r4.w, l125\n"
"\n"
"dcl_literal l126, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9\n"
"mad_ieee r5.x___, r5.x, r4.w, l126\n"
"mul_ieee r5.x___, r4.w, r5.x\n"
"div_zeroop(infinity) r5.x___, r5.x, r5.w\n"
"\n"
"dcl_literal l127, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r5.x___, r4.w, l127, r5.x\n"
"\n"
"dcl_literal l128, 0x00000007, 0x00000006, 0x00000005, 0x00000004\n"
"ige r8, r2.y, l128\n"
"\n"
"dcl_literal l129, 0x40C00000, 0x40A00000, 0x40800000, 0x40400000\n"
"add r9, r4.w, l129\n"
"\n"
"dcl_literal l130, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r5.___w, r8.x, r9.x, l130\n"
"mul_ieee r6._y__, r9.y, r5.w\n"
"cmov_logical r5.___w, r8.y, r6.y, r5.w\n"
"mul_ieee r6._y__, r9.z, r5.w\n"
"cmov_logical r5.___w, r8.z, r6.y, r5.w\n"
"mul_ieee r6._y__, r9.w, r5.w\n"
"cmov_logical r5.___w, r8.w, r6.y, r5.w\n"
"\n"
"dcl_literal l131, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"ige r2._y__, r2.y, l131\n"
"\n"
"dcl_literal l132, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r4.___w, r4.w, l132\n"
"mul_ieee r4.___w, r5.w, r4.w\n"
"cmov_logical r6.__z_, r2.y, r4.w, r5.w\n"
"\n"
"dcl_literal l133, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r2._y__, r6.z, l133\n"
"\n"
"dcl_literal l134, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r4.___w, r6.z, l134\n"
"itof r4.___w, r4.w\n"
"\n"
"dcl_literal l135, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r7.xy__, r4.w, l135\n"
"\n"
"dcl_literal l136, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r4.___w, r7.x, l136\n"
"\n"
"dcl_literal l137, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"iadd r4.___w, r4.w, l137\n"
"\n"
"dcl_literal l138, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r5.___w, r7.y, l138\n"
"\n"
"dcl_literal l139, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r4.___w, l139, r4.w_neg(xyzw)\n"
"\n"
"dcl_literal l140, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r6.___w, l140, r4.w\n"
"ishr r7.x___, r5.w, r4.w\n"
"inegate r4.___w, r4.w\n"
"\n"
"dcl_literal l141, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r4.___w, r4.w, l141\n"
"iadd r4.___w, r5.w, r4.w\n"
"cmov_logical r0.___w, r6.w, r7.x, r4.w\n"
"\n"
"dcl_literal l142, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r6._y__, l142\n"
"cmov_logical r0.__zw, r2.y, r0.zzzw, r6.yyyz\n"
"\n"
"dcl_literal l143, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2._y__, r0.w, l143\n"
"iadd r0.__z_, r2.y, r0.z\n"
"\n"
"dcl_literal l144, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, l144, r0.z\n"
"\n"
"dcl_literal l145, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.___w, r0.w, l145\n"
"\n"
"dcl_literal l146, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r2._y__, l146, r0.w\n"
"\n"
"dcl_literal l147, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r2._y__, r2.y, l147\n"
"\n"
"dcl_literal l148, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r4.___w, r2.y, l148\n"
"ior r0.___w, r0.w, r4.w\n"
"\n"
"dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2._y__, r2.y, l149\n"
"iadd r0.__z_, r0.z, r2.y\n"
"itof r0.__z_, r0.z\n"
"\n"
"dcl_literal l150, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r6._yz_, r0.w, l150\n"
"div_zeroop(infinity) r0.___w, r6.y, r6.z\n"
"mul_ieee r2._y__, r0.w, r0.w\n"
"mul_ieee r4.___w, r2.y, r2.y\n"
"\n"
"dcl_literal l151, 0x00000000, 0x00000000, 0x3E1CD04F, 0x3E178897\n"
"\n"
"dcl_literal l152, 0x00000000, 0x00000000, 0x3E638E29, 0x3E3A3325\n"
"mad_ieee r6.__zw, r4.w, l151, l152\n"
"\n"
"dcl_literal l153, 0x00000000, 0x00000000, 0x3ECCCCCD, 0x3E924925\n"
"mad_ieee r6.__zw, r4.w, r6.zzzw, l153\n"
"mul_ieee r5.___w, r4.w, r6.z\n"
"\n"
"dcl_literal l154, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r4.___w, r4.w, r6.w, l154\n"
"mad_ieee r2._y__, r2.y, r4.w, r5.w\n"
"mul_ieee r4.___w, r6.y, r6.y\n"
"\n"
"dcl_literal l155, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2._y__, r4.w, l155, r2.y\n"
"\n"
"dcl_literal l156, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r5.___w, r0.z, l156\n"
"mad_ieee r0.___w, r0.w, r2.y, r5.w\n"
"\n"
"dcl_literal l157, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r4.w, l157, r0.w_neg(xyzw)\n"
"add r0.___w, r6.y_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l158, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0.__z_, r0.z, l158, r0.w_neg(xyzw)\n"
"add r0.__z_, r5.x, r0.z\n"
"\n"
"dcl_literal l159, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.___w, l159, r1.x\n"
"mul_ieee r2._y__, r0.w, r0.w\n"
"\n"
"dcl_literal l160, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8\n"
"\n"
"dcl_literal l161, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2\n"
"mad_ieee r4.___w, r2.y, l160, l161\n"
"\n"
"dcl_literal l162, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C\n"
"mad_ieee r4.___w, r2.y, r4.w, l162\n"
"\n"
"dcl_literal l163, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD\n"
"mad_ieee r4.___w, r2.y, r4.w, l163\n"
"\n"
"dcl_literal l164, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r4.___w, r2.y, r4.w, l164\n"
"\n"
"dcl_literal l165, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"mad_ieee r2._y__, r2.y, r4.w, l165\n"
"\n"
"dcl_literal l166, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D\n"
"mad_ieee r0.___w, r0.w, r2.y, l166\n"
"\n"
"dcl_literal l167, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.__z_, r1.z, l167\n"
"mad_ieee r0.___w, r7.w, r1.z, r0.w\n"
"mul_ieee r1.x___, r1.x, r1.z\n"
"cmov_logical r0.___w, r3.z, r0.w, r1.x\n"
"cmov_logical r0.__z_, r3.w, r0.z, r0.w\n"
"\n"
"dcl_literal l168, 0x00000000, 0x00000000, 0x00000001, 0x00000002\n"
"ieq r3.x_zw, r3.x, l168\n"
"and r3.x_zw, r6.x, r3.xxzw\n"
"cmov_logical r0.__z_, r3.x, r4.x, r0.z\n"
"cmov_logical r0.__z_, r3.z, r3.y, r0.z\n"
"cmov_logical r0._y__, r3.w, r0.y, r0.z\n"
"and r0.__z_, r5.y, r2.x\n"
"\n"
"dcl_literal l169, 0x1C800000, 0x4B000000, 0x7F800000, 0x00000000\n"
"ige r3.xyz_, r2.z, l169\n"
"and r1.x_z_, r2.x, r3.xxyx\n"
"\n"
"dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r1.w, l170\n"
"and r0.___w, r1.x, r0.w\n"
"ior r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"\n"
"dcl_literal l172, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.__z_, r0.z, l171, l172\n"
"cmov_logical r0._y__, r5.y, r2.w, r0.y\n"
"add r0.___w, r1.y, r0.y_neg(xyzw)\n"
"cmov_logical r0._y__, r1.x, r0.w, r0.y\n"
"\n"
"dcl_literal l173, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r1.w, l173\n"
"\n"
"dcl_literal l174, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.___w, r0.w, l174\n"
"and r0.___w, r2.x, r0.w\n"
"\n"
"dcl_literal l175, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.w, l175, r0.y\n"
"cmov_logical r0._y__, r4.z, r0.x, r0.y\n"
"\n"
"dcl_literal l176, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.___w, l176, r2.z\n"
"\n"
"dcl_literal l177, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l177\n"
"cmov_logical r0._y__, r0.w, r1.x, r0.y\n"
"and r0.___w, r5.z, r1.z\n"
"\n"
"dcl_literal l178, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.w, l178, r0.y\n"
"\n"
"dcl_literal l179, 0x3F800000, 0x00000000, 0x00000000, 0x40000000\n"
"ieq r0.x__w, r0.x, l179\n"
"ior r0.x___, r0.w, r0.x\n"
"\n"
"dcl_literal l180, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r0.x, l180, r0.y\n"
"ior r0.x___, r4.y, r3.z\n"
"\n"
"dcl_literal l181, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.x___, r0.x, l181, r0.z\n"
"mov r0.x___, r2.x\n"
"mov r0.y, r1.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_128bit_global",
"mdef(258)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, g[r0.x]\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_128bit_local",
"mdef(259)_out(1)_in(1)\n"
"mov r0, in0\n"
"lds_load_vec_id(0) r0, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_128bit_private",
"mdef(260)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, x0[r0.x]\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_128bit_uav",
"mdef(261)_out(1)_in(1)\n"
"mov r0, in0\n"
"uav_raw_load_id(0) r0, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_32bit_local",
"mdef(262)_out(1)_in(1)\n"
"mov r0, in0\n"
"lds_load_id(0) r0.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_32bit_uav",
"mdef(263)_out(1)_in(1)\n"
"mov r0, in0\n"
"uav_raw_load_id(0) r0.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_64bit_local",
"mdef(264)_out(1)_in(1)\n"
"mov r0, in0\n"
"lds_load_vec_id(0) r0.xy__, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_64bit_uav",
"mdef(265)_out(1)_in(1)\n"
"mov r0, in0\n"
"uav_raw_load_id(0) r0.xy, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_96bit_global",
"mdef(266)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xyz_, g[r0.x].xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_96bit_local",
"mdef(267)_out(1)_in(1)\n"
"mov r0, in0\n"
"lds_load_vec_id(0) r0.xyz_, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_96bit_private",
"mdef(268)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xyz_, x0[r0.x].xyz\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_96bit_uav",
"mdef(269)_out(1)_in(1)\n"
"mov r0, in0\n"
"uav_raw_load_id(0) r0.xyz, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_hi_64bit_global",
"mdef(270)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xy__, g[r0.x].zw\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_hi_64bit_private",
"mdef(271)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xy__, x0[r0.x].zw\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_lo_64bit_global",
"mdef(272)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xy__, g[r0.x].xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_lo_64bit_private",
"mdef(273)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.xy__, x0[r0.x].xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_w_32bit_global",
"mdef(274)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, g[r0.x].w\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_w_32bit_private",
"mdef(275)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, x0[r0.x].w\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_x_32bit_global",
"mdef(276)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, g[r0.x].x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_x_32bit_private",
"mdef(277)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, x0[r0.x].x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_y_32bit_global",
"mdef(278)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, g[r0.x].y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_y_32bit_private",
"mdef(279)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, x0[r0.x].y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_z_32bit_global",
"mdef(280)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, g[r0.x].z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__load_z_32bit_private",
"mdef(281)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0.x, x0[r0.x].z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__log10_f32",
"mdef(282)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00800000, 0x00000000, 0x00000000\n"
"ilt r0._yz_, r0.x, l0\n"
"if_logicalnz r0.y\n"
"    \n"
"    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0._y__, r0.x, l1\n"
"    itof r0._y__, r0.y\n"
"    \n"
"    dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r0._y_w, r0.y, l2\n"
"    \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0._y__, r0.y, l3\n"
"    \n"
"    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"    iadd r0._y__, r0.y, l4\n"
"    \n"
"    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r0.___w, r0.w, l5\n"
"    \n"
"    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0._y__, l6, r0.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, l7, r0.y\n"
"    ishr r1._y__, r0.w, r0.y\n"
"    inegate r0._y__, r0.y\n"
"    \n"
"    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l8\n"
"    iadd r0._y__, r0.w, r0.y\n"
"    cmov_logical r0._y__, r1.x, r1.y, r0.y\n"
"    \n"
"    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7\n"
"    mov r0.___w, l9\n"
"else\n"
"    \n"
"    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0.___w, l10\n"
"    mov r0._y__, r0.x\n"
"endif\n"
"\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r0.y, l11\n"
"iadd r0.___w, r1.x, r0.w\n"
"\n"
"dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, l12, r0.w\n"
"\n"
"dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0._y__, r0.y, l13\n"
"\n"
"dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1.x___, l14, r0.y\n"
"\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.x___, r1.x, l15\n"
"\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1._y__, r1.x, l16\n"
"ior r0._y__, r0.y, r1.y\n"
"\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l17\n"
"iadd r0.___w, r0.w, r1.x\n"
"itof r0.___w, r0.w\n"
"\n"
"dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r1.xy__, r0.y, l18\n"
"div_zeroop(infinity) r0._y__, r1.x, r1.y\n"
"mul_ieee r1._y__, r0.y, r0.y\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, l19, l20\n"
"\n"
"dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l21\n"
"mul_ieee r1.___w, r1.z, r2.x\n"
"\n"
"dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r1.__z_, r1.z, r2.y, l22\n"
"mad_ieee r1._y__, r1.y, r1.z, r1.w\n"
"mul_ieee r1.__z_, r1.x, r1.x\n"
"\n"
"dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.___w, r1.z, l23\n"
"\n"
"dcl_literal l24, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1._y__, r1.z, l24, r1.y\n"
"mad_ieee r0._y__, r0.y_neg(xyzw), r1.y, r1.w\n"
"add r0._y__, r1.x_neg(xyzw), r0.y\n"
"\n"
"dcl_literal l25, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9\n"
"mul_ieee r0._y__, r0.y, l25\n"
"\n"
"dcl_literal l26, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B\n"
"mad_ieee r0._y__, r0.w, l26, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l27, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l27\n"
"\n"
"dcl_literal l28, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0._y__, r0.w, r0.y, l28\n"
"\n"
"dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.x___, r0.w, l29\n"
"and r0.__z_, r0.z, r1.x\n"
"\n"
"dcl_literal l30, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.z, l30, r0.y\n"
"\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.x, l31\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l32, r0.w\n"
"\n"
"dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l33\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__log1p_f32",
"mdef(283)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x00000000, 0x40000000, 0x3F800000, 0x00000000\n"
"add r0._yz_, r0.x, l0\n"
"dcl_literal l1, 0x7F800000, 0x007FFFFF, 0x7FFFFFFF, 0x00000000\n"
"and r1.xyz_, r0.z, l1\n"
"dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"ior r0.___w, r1.y, l2\n"
"dcl_literal l3, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"dcl_literal l4, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1._y__, r0.w, l3, l4\n"
"round_z r1.___w, r1.y\n"
"ftoi r1._y__, r1.y\n"
"dcl_literal l5, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mul_ieee r2.x___, r1.w, l5\n"
"dcl_literal l6, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2._y__, r2.x, l6\n"
"dcl_literal l7, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r2.__z_, r1.w, l7, r2.y_neg(xyzw)\n"
"dcl_literal l8, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r0.___w, r1.w_neg(xyzw), l8, r0.w\n"
"add r1.___w, r0.w, cb0[1].x\n"
"div_zeroop(infinity) r2.___w, r0.w, r2.x\n"
"add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"dcl_literal l9, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r2.w, l9\n"
"mad_ieee r1.___w, r3.x, r2.y, r1.w_neg(xyzw)\n"
"mad_ieee r1.___w, r3.x, r2.z, r1.w\n"
"add r3.x___, r2.w, r3.x_neg(xyzw)\n"
"mad_ieee r1.___w, r3.x, r2.y, r1.w\n"
"mad_ieee r1.___w, r3.x, r2.z, r1.w\n"
"add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"div_zeroop(infinity) r0.___w, r0.w, r2.x\n"
"add r1.___w, r2.w, r0.w\n"
"dcl_literal l10, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000\n"
"dcl_literal l11, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925\n"
"mad_ieee r2.x___, r2.w_neg(xyzw), l10, l11\n"
"dcl_literal l12, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l12\n"
"dcl_literal l13, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD\n"
"mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l13\n"
"dcl_literal l14, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l14\n"
"dcl_literal l15, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l15\n"
"dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l16\n"
"mul_ieee r2._y__, r2.w_neg(xyzw), r2.w\n"
"add r2.__z_, r2.w, r1.w_neg(xyzw)\n"
"mad_ieee r2.___w, r2.x, r2.y, r1.w\n"
"add r1.___w, r1.w, r2.w_neg(xyzw)\n"
"mad_ieee r1.___w, r2.x, r2.y, r1.w\n"
"add r0.___w, r0.w, r2.z\n"
"add r0.___w, r1.w, r0.w\n"
"add r1.___w, r2.w, r0.w\n"
"add r2.x___, r2.w, r1.w_neg(xyzw)\n"
"add r0.___w, r0.w, r2.x\n"
"dcl_literal l17, 0xFFFFFFBF, 0xFFFFFFBF, 0xFFFFFFBF, 0xFFFFFFBF\n"
"iadd r1._y__, r1.y, l17\n"
"dcl_literal l18, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r2.x___, r1.y, l18\n"
"dcl_literal l19, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"and r1._y__, r1.y, l19\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l21, 0x31B0FC04, 0x33439E0D, 0x32F632DD, 0x32C01163\n"
"cmov_logical r3, r2.x, l20, l21\n"
"dcl_literal l22, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r4, r2.x, l22\n"
"dcl_literal l23, 0x33161BD2, 0x330AE56B, 0x32692B56, 0x32DC55E6\n"
"cmov_logical r3, r4.x, l23, r3\n"
"dcl_literal l24, 0x3379A11D, 0x33703FEA, 0x335996FA, 0x33614F28\n"
"cmov_logical r3, r4.y, l24, r3\n"
"dcl_literal l25, 0x30843642, 0x3267A2B6, 0x331D0180, 0x330F3534\n"
"cmov_logical r3, r4.z, l25, r3\n"
"dcl_literal l26, 0x335C55E6, 0x335ABC7C, 0x3309CE44, 0x332EAE98\n"
"cmov_logical r3, r4.w, l26, r3\n"
"dcl_literal l27, 0x00000005, 0x00000006, 0x00000007, 0x00000008\n"
"ieq r5, r2.x, l27\n"
"dcl_literal l28, 0x336F3DE6, 0x336B8475, 0x32AB4A2F, 0x310717B1\n"
"cmov_logical r3, r5.x, l28, r3\n"
"dcl_literal l29, 0x31E5BF06, 0x337D6027, 0x32F4D8A5, 0x335AEF40\n"
"cmov_logical r3, r5.y, l29, r3\n"
"dcl_literal l30, 0x336E0ABF, 0x31D8284B, 0x32E108B8, 0x3332FE61\n"
"cmov_logical r3, r5.z, l30, r3\n"
"dcl_literal l31, 0x32D4D042, 0x336F323E, 0x32ED38DC, 0x31F35344\n"
"cmov_logical r3, r5.w, l31, r3\n"
"dcl_literal l32, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C\n"
"ieq r6, r2.x, l32\n"
"dcl_literal l33, 0x337803AF, 0x31983894, 0x33075A1E, 0x32FD7837\n"
"cmov_logical r3, r6.x, l33, r3\n"
"dcl_literal l34, 0x32778F32, 0x3234BA20, 0x3360E6FA, 0x3204A550\n"
"cmov_logical r3, r6.y, l34, r3\n"
"dcl_literal l35, 0x33716A65, 0x3317A6AF, 0x33233E4B, 0x33738207\n"
"cmov_logical r3, r6.z, l35, r3\n"
"dcl_literal l36, 0x333DF5FA, 0x33144D89, 0x32D448E9, 0x331A7886\n"
"cmov_logical r3, r6.w, l36, r3\n"
"dcl_literal l37, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F\n"
"ieq r2._yzw, r2.x, l37\n"
"dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l39, 0x3C7E0540, 0x3CFC14C0, 0x3D3BA2C0, 0x3D785180\n"
"cmov_logical r7, r2.x, l38, l39\n"
"dcl_literal l40, 0x336CE70F, 0x331AB151, 0x32A71570, 0x3284672B\n"
"cmov_logical r3, r2.y, l40, r3\n"
"dcl_literal l41, 0x318717B1, 0x336D81F6, 0x330DBADE, 0x324B78B5\n"
"cmov_logical r3, r2.z, l41, r3\n"
"dcl_literal l42, 0x332D9F9D, 0x32C359F3, 0x32924167, 0x3377D1CF\n"
"cmov_logical r3, r2.w, l42, r3\n"
"dcl_literal l43, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r8.xyz_, r1.y, l43\n"
"cmov_logical r1._y__, r8.x, r3.y, r3.x\n"
"cmov_logical r1._y__, r8.y, r3.z, r1.y\n"
"cmov_logical r1._y__, r8.z, r3.w, r1.y\n"
"add r2.x___, r1.w, r1.y\n"
"add r1.___w, r1.w, r2.x_neg(xyzw)\n"
"add r1._y__, r1.y, r1.w\n"
"add r0.___w, r0.w, r1.y\n"
"add r1._y__, r2.x, r0.w\n"
"add r1.___w, r2.x, r1.y_neg(xyzw)\n"
"dcl_literal l44, 0x3D9A0EB8, 0x3DB78690, 0x3DD49368, 0x3DF13838\n"
"cmov_logical r3, r4.x, l44, r7\n"
"dcl_literal l45, 0x3E06BBF0, 0x3E14AA94, 0x3E226958, 0x3E2FF980\n"
"cmov_logical r3, r4.y, l45, r3\n"
"dcl_literal l46, 0x3E3D5C48, 0x3E4A92D4, 0x3E579E48, 0x3E647FBC\n"
"cmov_logical r3, r4.z, l46, r3\n"
"dcl_literal l47, 0x3E713838, 0x3E7DC8C0, 0x3E851926, 0x3E8B3AE4\n"
"cmov_logical r3, r4.w, l47, r3\n"
"dcl_literal l48, 0x3E914A0E, 0x3E974714, 0x3E9D3262, 0x3EA30C5E\n"
"cmov_logical r3, r5.x, l48, r3\n"
"dcl_literal l49, 0x3EA8D56C, 0x3EAE8DEC, 0x3EB43640, 0x3EB9CEBE\n"
"cmov_logical r3, r5.y, l49, r3\n"
"dcl_literal l50, 0x3EBF57C0, 0x3EC4D19C, 0x3ECA3CA0, 0x3ECF991E\n"
"cmov_logical r3, r5.z, l50, r3\n"
"dcl_literal l51, 0x3ED4E764, 0x3EDA27BA, 0x3EDF5A6C, 0x3EE47FBE\n"
"cmov_logical r3, r5.w, l51, r3\n"
"dcl_literal l52, 0x3EE997F2, 0x3EEEA350, 0x3EF3A212, 0x3EF8947A\n"
"cmov_logical r3, r6.x, l52, r3\n"
"dcl_literal l53, 0x3EFD7AC4, 0x3F012A95, 0x3F0391F2, 0x3F05F397\n"
"cmov_logical r3, r6.y, l53, r3\n"
"dcl_literal l54, 0x3F084F9C, 0x3F0AA61E, 0x3F0CF735, 0x3F0F42FA\n"
"cmov_logical r3, r6.z, l54, r3\n"
"dcl_literal l55, 0x3F118986, 0x3F13CAF0, 0x3F16074F, 0x3F183EB9\n"
"cmov_logical r3, r6.w, l55, r3\n"
"dcl_literal l56, 0x3F1A7144, 0x3F1C9F06, 0x3F1EC813, 0x3F20EC7F\n"
"cmov_logical r3, r2.y, l56, r3\n"
"dcl_literal l57, 0x3F230C5E, 0x3F2527C2, 0x3F273EC0, 0x3F295169\n"
"cmov_logical r3, r2.z, l57, r3\n"
"dcl_literal l58, 0x3F2B5FCE, 0x3F2D6A02, 0x3F2F7015, 0x3F317217\n"
"cmov_logical r2, r2.w, l58, r3\n"
"cmov_logical r2.x___, r8.x, r2.y, r2.x\n"
"cmov_logical r2.x___, r8.y, r2.z, r2.x\n"
"cmov_logical r2.x___, r8.z, r2.w, r2.x\n"
"add r2._y__, r1.y, r2.x\n"
"add r2.x___, r2.x, r2.y_neg(xyzw)\n"
"add r1._y__, r1.y, r2.x\n"
"add r0.___w, r0.w, r1.w\n"
"add r0.___w, r1.y, r0.w\n"
"add r1._y__, r2.y, r0.w\n"
"add r1.___w, r2.y, r1.y_neg(xyzw)\n"
"add r0.___w, r0.w, r1.w\n"
"dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l59\n"
"dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.__z_, l60, r1.z\n"
"dcl_literal l61, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1.x___, r1.x, l61\n"
"itof r1.x___, r1.x\n"
"dcl_literal l62, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r1.___w, r1.x, l62\n"
"dcl_literal l63, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mul_ieee r2.x___, r1.x, l63\n"
"dcl_literal l64, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000\n"
"mad_ieee r2._y__, r1.w, l64, r2.x_neg(xyzw)\n"
"add r2.__z_, r1.x, r1.w_neg(xyzw)\n"
"dcl_literal l65, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000\n"
"mad_ieee r2._y__, r2.z, l65, r2.y\n"
"dcl_literal l66, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001\n"
"mad_ieee r1.___w, r1.w, l66, r2.y\n"
"dcl_literal l67, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001\n"
"mad_ieee r1.___w, r2.z, l67, r1.w\n"
"dcl_literal l68, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1.x___, r1.x, l68, r1.w\n"
"add r1.___w, r2.x, r1.x\n"
"add r2.x___, r2.x, r1.w_neg(xyzw)\n"
"add r1.x___, r1.x, r2.x\n"
"add r2.x___, r1.y, r1.x\n"
"add r1._y__, r1.y, r2.x_neg(xyzw)\n"
"add r0.___w, r0.w, r1.y\n"
"add r0.___w, r1.x, r0.w\n"
"add r1.x___, r2.x, r0.w\n"
"add r1._y__, r2.x, r1.x_neg(xyzw)\n"
"add r2.x___, r1.w, r1.x\n"
"add r2._y__, r1.x, r2.x_neg(xyzw)\n"
"add r2._y__, r1.w, r2.y\n"
"add r2.__z_, r1.w, r2.x_neg(xyzw)\n"
"lt r1.___w, r1.w_abs, r1.x_abs\n"
"add r1.x___, r1.x, r2.z\n"
"cmov_logical r1.x___, r1.w, r2.y, r1.x\n"
"add r0.___w, r0.w, r1.y\n"
"add r0.___w, r1.x, r0.w\n"
"add r0.___w, r2.x, r0.w\n"
"div_zeroop(infinity) r0._y__, r0.x, r0.y\n"
"mul_ieee r1.x___, r0.y, r0.y\n"
"dcl_literal l69, 0x3E178897, 0x3E178897, 0x3E178897, 0x3E178897\n"
"dcl_literal l70, 0x3E1CD04F, 0x3E1CD04F, 0x3E1CD04F, 0x3E1CD04F\n"
"mad_ieee r1._y__, r1.x, l69, l70\n"
"dcl_literal l71, 0x3E3A3325, 0x3E3A3325, 0x3E3A3325, 0x3E3A3325\n"
"mad_ieee r1._y__, r1.x, r1.y, l71\n"
"dcl_literal l72, 0x3E638E29, 0x3E638E29, 0x3E638E29, 0x3E638E29\n"
"mad_ieee r1._y__, r1.x, r1.y, l72\n"
"dcl_literal l73, 0x3E924925, 0x3E924925, 0x3E924925, 0x3E924925\n"
"mad_ieee r1._y__, r1.x, r1.y, l73\n"
"dcl_literal l74, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD\n"
"mad_ieee r1._y__, r1.x, r1.y, l74\n"
"dcl_literal l75, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r1._y__, r1.x, r1.y, l75\n"
"mul_ieee r1.___w, r0.x, r0.x\n"
"dcl_literal l76, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r2.x___, r1.w, l76\n"
"dcl_literal l77, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), l77, r0.x\n"
"mad_ieee r1.x___, r1.x, r1.y, r2.x\n"
"mad_ieee r0._y__, r0.y_neg(xyzw), r1.x, r2.x\n"
"add r0._y__, r0.x, r0.y_neg(xyzw)\n"
"dcl_literal l78, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, l78, r0.x\n"
"dcl_literal l79, 0x3EB00000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.xy__, r0.x, l79\n"
"and r1.x___, r1.x, r2.x\n"
"dcl_literal l80, 0xBECA0000, 0xBECA0000, 0xBECA0000, 0xBECA0000\n"
"ige r1._y__, l80, r0.x\n"
"and r1._y__, r2.y, r1.y\n"
"ior r1.x___, r1.x, r1.y\n"
"cmov_logical r0._y__, r1.x, r0.y, r0.w\n"
"dcl_literal l81, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l81\n"
"dcl_literal l82, 0x24800000, 0x31000000, 0x00000000, 0x00000000\n"
"ilt r1.xy__, r0.w, l82\n"
"cmov_logical r0._y__, r1.x, r0.x, r0.y\n"
"dcl_literal l83, 0x24800000, 0x24800000, 0x24800000, 0x24800000\n"
"ige r1.x___, r0.w, l83\n"
"itof r0.___w, r0.w\n"
"and r1.x___, r1.y, r1.x\n"
"cmov_logical r0._y__, r1.x, r1.w, r0.y\n"
"dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r0.___w, r0.w, l84\n"
"cmov_logical r0._y__, r0.w, r0.x, r0.y\n"
"dcl_literal l85, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"eq r0.___w, r0.x, l85\n"
"dcl_literal l86, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"lt r0.x___, r0.x, l86\n"
"dcl_literal l87, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0._y__, r0.w, l87, r0.y\n"
"dcl_literal l88, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r0.x, l88, r0.y\n"
"dcl_literal l89, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0._y__, r0.z, l89\n"
"cmov_logical r0.x___, r0.y, r0.z, r0.x\n"
"dcl_literal l90, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0._y__, r0.z, l90\n"
"cmov_logical r0.x___, r1.z, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__log2_f32",
"mdef(284)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00800000, 0x00000000, 0x00000000\n"
"ilt r0._yz_, r0.x, l0\n"
"if_logicalnz r0.y\n"
"    \n"
"    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0._y__, r0.x, l1\n"
"    itof r0._y__, r0.y\n"
"    \n"
"    dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r0._y_w, r0.y, l2\n"
"    \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0._y__, r0.y, l3\n"
"    \n"
"    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"    iadd r0._y__, r0.y, l4\n"
"    \n"
"    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r0.___w, r0.w, l5\n"
"    \n"
"    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0._y__, l6, r0.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, l7, r0.y\n"
"    ishr r1._y__, r0.w, r0.y\n"
"    inegate r0._y__, r0.y\n"
"    \n"
"    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l8\n"
"    iadd r0._y__, r0.w, r0.y\n"
"    cmov_logical r0._y__, r1.x, r1.y, r0.y\n"
"    \n"
"    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7\n"
"    mov r0.___w, l9\n"
"else\n"
"    \n"
"    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0.___w, l10\n"
"    mov r0._y__, r0.x\n"
"endif\n"
"\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r0.y, l11\n"
"iadd r0.___w, r1.x, r0.w\n"
"\n"
"dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, l12, r0.w\n"
"\n"
"dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0._y__, r0.y, l13\n"
"\n"
"dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1.x___, l14, r0.y\n"
"\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.x___, r1.x, l15\n"
"\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1._y__, r1.x, l16\n"
"ior r0._y__, r0.y, r1.y\n"
"\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l17\n"
"iadd r0.___w, r0.w, r1.x\n"
"itof r0.___w, r0.w\n"
"\n"
"dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r1.xy__, r0.y, l18\n"
"div_zeroop(infinity) r0._y__, r1.x, r1.y\n"
"mul_ieee r1._y__, r0.y, r0.y\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, l19, l20\n"
"\n"
"dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l21\n"
"mul_ieee r1.___w, r1.z, r2.x\n"
"\n"
"dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r1.__z_, r1.z, r2.y, l22\n"
"mad_ieee r1._y__, r1.y, r1.z, r1.w\n"
"mul_ieee r1.__z_, r1.x, r1.x\n"
"\n"
"dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.___w, r1.z, l23\n"
"\n"
"dcl_literal l24, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1._y__, r1.z, l24, r1.y\n"
"mad_ieee r0._y__, r0.y_neg(xyzw), r1.y, r1.w\n"
"add r0._y__, r1.x_neg(xyzw), r0.y\n"
"\n"
"dcl_literal l25, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0._y__, r0.y_neg(xyzw), l25, r0.w\n"
"\n"
"dcl_literal l26, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l26\n"
"\n"
"dcl_literal l27, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0._y__, r0.w, r0.y, l27\n"
"\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.x___, r0.w, l28\n"
"and r0.__z_, r0.z, r1.x\n"
"\n"
"dcl_literal l29, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.z, l29, r0.y\n"
"\n"
"dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.x, l30\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l31, r0.w\n"
"\n"
"dcl_literal l32, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l32\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__logb_f32",
"mdef(285)_out(2)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.y, l1\n"
"dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l2\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l3\n"
"dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l4, r0.w_neg(xyzw)\n"
"dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l5\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l6\n"
"dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r0.___w, r0.y, r0.w, l7\n"
"dcl_literal l8, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.___w, r0.w_neg(xyzw), l8\n"
"itof r0.___w, r0.w\n"
"dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r1.x___, r0.y, l9\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1._y__, r0.y, l10\n"
"and r1.x___, r1.x, r1.y\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l11\n"
"itof r0.__z_, r0.z\n"
"dcl_literal l12, 0xC2FE0000, 0xC2FE0000, 0xC2FE0000, 0xC2FE0000\n"
"add r0.__z_, r0.z, l12\n"
"cmov_logical r0.__z_, r1.x, r0.w, r0.z\n"
"dcl_literal l13, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0.__z_, r0.y, r0.z, l13\n"
"dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l14\n"
"cmov_logical r0.__z_, r0.w, r0.y, r0.z\n"
"dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l15, r0.y\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mov out1, r1\n"
"mend\n"
,1,2
},
{ "__log_f32",
"mdef(286)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00800000, 0x00000000, 0x00000000\n"
"ilt r0._yz_, r0.x, l0\n"
"if_logicalnz r0.y\n"
"    \n"
"    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0._y__, r0.x, l1\n"
"    itof r0._y__, r0.y\n"
"    \n"
"    dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"    and r0._y_w, r0.y, l2\n"
"    \n"
"    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0._y__, r0.y, l3\n"
"    \n"
"    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"    iadd r0._y__, r0.y, l4\n"
"    \n"
"    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r0.___w, r0.w, l5\n"
"    \n"
"    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0._y__, l6, r0.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, l7, r0.y\n"
"    ishr r1._y__, r0.w, r0.y\n"
"    inegate r0._y__, r0.y\n"
"    \n"
"    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l8\n"
"    iadd r0._y__, r0.w, r0.y\n"
"    cmov_logical r0._y__, r1.x, r1.y, r0.y\n"
"    \n"
"    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7\n"
"    mov r0.___w, l9\n"
"else\n"
"    \n"
"    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0.___w, l10\n"
"    mov r0._y__, r0.x\n"
"endif\n"
"\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r0.y, l11\n"
"iadd r0.___w, r1.x, r0.w\n"
"\n"
"dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, l12, r0.w\n"
"\n"
"dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0._y__, r0.y, l13\n"
"\n"
"dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r1.x___, l14, r0.y\n"
"\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r1.x___, r1.x, l15\n"
"\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r1._y__, r1.x, l16\n"
"ior r0._y__, r0.y, r1.y\n"
"\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.x___, r1.x, l17\n"
"iadd r0.___w, r0.w, r1.x\n"
"itof r0.___w, r0.w\n"
"\n"
"dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r1.xy__, r0.y, l18\n"
"div_zeroop(infinity) r0._y__, r1.x, r1.y\n"
"mul_ieee r1._y__, r0.y, r0.y\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, l19, l20\n"
"\n"
"dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l21\n"
"mul_ieee r1.___w, r1.z, r2.x\n"
"\n"
"dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r1.__z_, r1.z, r2.y, l22\n"
"mad_ieee r1._y__, r1.y, r1.z, r1.w\n"
"mul_ieee r1.__z_, r1.x, r1.x\n"
"\n"
"dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r1._y__, r1.z, l23, r1.y\n"
"\n"
"dcl_literal l24, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r1.___w, r0.w, l24\n"
"mad_ieee r0._y__, r0.y, r1.y, r1.w\n"
"\n"
"dcl_literal l25, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0._y__, r1.z, l25, r0.y_neg(xyzw)\n"
"add r0._y__, r1.x_neg(xyzw), r0.y\n"
"\n"
"dcl_literal l26, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r0._y__, r0.w, l26, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l27, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l27\n"
"\n"
"dcl_literal l28, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0._y__, r0.w, r0.y, l28\n"
"\n"
"dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.x___, r0.w, l29\n"
"and r0.__z_, r0.z, r1.x\n"
"\n"
"dcl_literal l30, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.z, l30, r0.y\n"
"\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.__z_, r0.x, l31\n"
"cmov_logical r0._y__, r0.z, r0.x, r0.y\n"
"\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l32, r0.w\n"
"\n"
"dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l33\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__ltof_f32",
"mdef(287)_out(1)_in(1)\n"
"mov r0, in0\n"
"inot r0.__zw, r0.xxxy\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r1.x___, r0.z, l1\n"
"ult r0.__z_, r1.x, r0.z\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.__z_, r0.z, l2\n"
"iadd r0.__z_, r0.w, r0.z\n"
"dcl_literal l3, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r0.___w, r0.y, l3\n"
"cmov_logical r0._y__, r0.w, r0.z, r0.y\n"
"cmov_logical r0.x___, r0.w, r1.x, r0.x\n"
"dcl_literal l4, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r0.__z_, r0.y, l4\n"
"dcl_literal l5, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r1.x___, r0.x, l5\n"
"ior r0.__z_, r0.z, r1.x\n"
"dcl_literal l6, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.__z_, r0.z, l6\n"
"dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1.x___, r0.z, l7\n"
"dcl_literal l8, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.x___, r1.x, l8\n"
"dcl_literal l9, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l9\n"
"dcl_literal l10, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1.x___, l10, r1.x_neg(xyzw)\n"
"dcl_literal l11, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l11\n"
"dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1.x___, r1.x, l12\n"
"dcl_literal l13, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r1.x___, r1.x, l13\n"
"dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r0.__z_, r0.z, r1.x, l14\n"
"dcl_literal l15, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r1.x___, r0.y, l15\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1._y__, r1.x, l16\n"
"dcl_literal l17, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1._y__, r1.y, l17\n"
"dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1._y__, r1.y, l18\n"
"dcl_literal l19, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1._y__, l19, r1.y_neg(xyzw)\n"
"dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1._y__, r1.y, l20\n"
"dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1._y__, r1.y, l21\n"
"dcl_literal l22, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r1._y__, r1.y, l22\n"
"dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r1.x___, r1.x, r1.y, l23\n"
"iadd r0.__z_, r1.x, r0.z\n"
"dcl_literal l24, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r1._y__, r0.x, l24\n"
"dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1.__z_, r1.y, l25\n"
"dcl_literal l26, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.__z_, r1.z, l26\n"
"dcl_literal l27, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.__z_, r1.z, l27\n"
"dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1.__z_, l28, r1.z_neg(xyzw)\n"
"dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.__z_, r1.z, l29\n"
"dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1.__z_, r1.z, l30\n"
"dcl_literal l31, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r1.__z_, r1.z, l31\n"
"dcl_literal l32, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r1._y__, r1.y, r1.z, l32\n"
"iadd r1._y__, r0.z, r1.y\n"
"dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r1.__z_, r1.x, l33\n"
"cmov_logical r1.x___, r1.z, r0.z, r1.x\n"
"dcl_literal l34, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r0.__z_, r0.z, l34\n"
"cmov_logical r0.__z_, r0.z, r1.y, r1.x\n"
"dcl_literal l35, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"imin r1.x___, r0.z, l35\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r1.x___, r1.x, l36\n"
"dcl_literal l37, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"imin r1._y__, r1.x, l37\n"
"ishl r1._y__, r0.y, r1.y\n"
"dcl_literal l38, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r1.__z_, r1.x, l38\n"
"dcl_literal l39, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.___w, r1.x, l39\n"
"cmov_logical r1.__z_, r1.w, r1.z, r1.x\n"
"dcl_literal l40, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r2.x___, l40, r1.z_neg(xyzw)\n"
"ishl r1.__z_, r0.x, r1.z\n"
"ushr r2.x___, r0.x, r2.x\n"
"ior r1._y__, r1.y, r2.x\n"
"cmov_logical r1._y__, r1.w, r1.z, r1.y\n"
"dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.__z_, r1.w, l41, r1.z\n"
"cmov_logical r0.xy__, r1.x, r1.zyzz, r0.xyxx\n"
"dcl_literal l42, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r1.x___, r0.y, l42\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0._y__, r0.y, l43\n"
"dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ishl r1._y__, r1.x, l44\n"
"dcl_literal l45, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ushr r1.x___, r1.x, l45\n"
"dcl_literal l46, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ushr r1.__z_, r0.x, l46\n"
"ior r1._y__, r1.y, r1.z\n"
"dcl_literal l47, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ishl r1.__z_, r0.x, l47\n"
"dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.x___, r0.x, l48\n"
"dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r1.__z_, l49, r1.z\n"
"dcl_literal l50, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.__z_, r1.z, l50\n"
"ior r1._y__, r1.y, r1.z\n"
"dcl_literal l51, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ieq r1.__z_, r1.y, l51\n"
"dcl_literal l52, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ult r1._y__, l52, r1.y\n"
"dcl_literal l53, 0x000000BE, 0x000000BE, 0x000000BE, 0x000000BE\n"
"iadd r1.___w, r0.z_neg(xyzw), l53\n"
"dcl_literal l54, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F\n"
"iadd r0.__z_, l54, r0.z_neg(xyzw)\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1.___w, r1.w, l55\n"
"ior r1.x___, r1.x, r1.w\n"
"dcl_literal l56, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.___w, r1.x, l56\n"
"iadd r1.___w, r1.x, r1.w\n"
"cmov_logical r1.x___, r1.z, r1.w, r1.x\n"
"dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r1.__z_, r1.x, l57\n"
"cmov_logical r1.x___, r1.y, r1.z, r1.x\n"
"and r0.x___, r0.y, r0.x\n"
"dcl_literal l58, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"ilt r0._y__, r0.z, l58\n"
"ior r0.x___, r0.x, r0.y\n"
"dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l59, r1.x\n"
"ior r0.x___, r0.w, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__mad_f32",
"mdef(288)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mad_ieee r0.x___, r0.x, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__mad_f64",
"mdef(289)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"dmad r0.xy__, r0.xy, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__max_f32",
"mdef(290)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"max r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__min_f32",
"mdef(291)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"min r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__mix_f32",
"mdef(292)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"add r0.___w, r0.x_neg(xyzw), r1.x\n"
"mad_ieee r0.x___, r0.w, r2.x, r0.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__modf_2f32f32",
"mdef(293)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.___w, r0.x\n"
"round_z r0._y__, r0.x\n"
"add r0.__z_, r0.x, r0.y_neg(xyzw)\n"
"dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x00000000\n"
"and r1.xyz_, r0.x, l0\n"
"ior r0.x___, r0.z, r1.y\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r1.x, l1\n"
"dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x00000000\n"
"ieq r2.xy__, r1.zxzz, l2\n"
"and r0.___w, r0.w, r2.x\n"
"ior r0.__z_, r0.y, r1.y\n"
"cmov_logical r0.xy__, r0.w, r1.wyww, r0.xzxx\n"
"cmov_logical r0.xy__, r2.y, r1.ywyy, r0.xyxx\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l3, r1.x\n"
"dcl_literal l4, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r0.z, l4, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__mul_i64",
"mdef(294)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul r2.xy, r0.yx, r1.xy\n"
"iadd r4.x, r2.x, r3.y\n"
"imul_high r5.x, r0.x, r1.x\n"
"umul r6.x, r4.x, r5.x\n"
"umul r7.x, r0.x, r1.x\n"
"iadd r0.xy, r7.x0, r6.0x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__mul_v2i64",
"mdef(295)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"umul r2, r0.yxwz, r1.xyzw\n"
"iadd r4.x_z, r2.x0z, r3.y0w\n"
"imul_high r5.x_z, r0.x0z, r1.x0z\n"
"umul r6.x_z, r4.x0z, r5.x0z\n"
"umul r7.x_z, r0.x0z, r1.x0z\n"
"iadd r0, r7.x0z0, r6.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__nan_u32",
"mdef(296)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l0, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.x___, r0.x, l0\n"
"dcl_literal l1, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l1\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_cos_f32",
"mdef(297)_out(1)_in(1)\n"
"mov r0, in0\n"
"cos_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_divide_2f32",
"mdef(298)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"div_zeroop(infinity) r0.xy__, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__native_divide_4f32",
"mdef(299)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"div_zeroop(infinity) r0, r0, r1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__native_divide_f32",
"mdef(300)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"div_zeroop(infinity) r0.x___, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__native_exp10_2f32",
"mdef(301)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78\n"
"mul_ieee r1.xy__, r0.xy, l0\n"
"exp_vec r0.xy__, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp10_4f32",
"mdef(302)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78\n"
"mul_ieee r1, r0, l0\n"
"exp_vec r0, r1\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp10_f32",
"mdef(303)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78\n"
"mul_ieee r1.x___, r0.x, l0\n"
"exp_vec r0.x___, r1.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp2_2f32",
"mdef(304)_out(1)_in(1)\n"
"mov r0, in0\n"
"exp_vec r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp2_4f32",
"mdef(305)_out(1)_in(1)\n"
"mov r0, in0\n"
"exp_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp2_f32",
"mdef(306)_out(1)_in(1)\n"
"mov r0, in0\n"
"exp_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp_2f32",
"mdef(307)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r1.xy__, r0.xy, l0\n"
"exp_vec r0.xy__, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp_4f32",
"mdef(308)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r1, r0, l0\n"
"exp_vec r0, r1\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_exp_f32",
"mdef(309)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r0._y__, r0.x, l0\n"
"exp_vec r0.x___, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log10_2f32",
"mdef(310)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r1.xy__, r0.x\n"
"\n"
"dcl_literal l0, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B\n"
"mul_ieee r0.xy__, r1.xy, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log10_4f32",
"mdef(311)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r1, r0\n"
"\n"
"dcl_literal l0, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B\n"
"mul_ieee r0, r1, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log10_f32",
"mdef(312)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r1.x___, r0.x\n"
"\n"
"dcl_literal l0, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B\n"
"mul_ieee r0.x___, r1.x, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log2_2f32",
"mdef(313)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log2_4f32",
"mdef(314)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log2_f32",
"mdef(315)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log_2f32",
"mdef(316)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r1.xy__, r0.xy\n"
"\n"
"dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r0.xy__, r1.xy, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log_4f32",
"mdef(317)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r1, r0\n"
"\n"
"dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r0, r1, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_log_f32",
"mdef(318)_out(1)_in(1)\n"
"mov r0, in0\n"
"log_vec r1.x___, r0.x\n"
"\n"
"dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r0.x___, r1.x, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_powr_2f32",
"mdef(319)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"log_vec r2.xy, r0.xy\n"
"mul_ieee r3.xy, r1.xy, r2.xy\n"
"exp_vec r3.xy, r3.xy\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r4.xy, r0.xy_abs, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy, r4.xy, l1, r3.xy\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__native_powr_4f32",
"mdef(320)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"log_vec r2, r0\n"
"mul_ieee r3, r1, r2\n"
"exp_vec r3, r3\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r4, r0_abs, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0, r4, l1, r3\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__native_powr_f32",
"mdef(321)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"log_vec r2.x, r0.x\n"
"mul_ieee r3.x, r1.x, r2.x\n"
"exp_vec r3.x, r3.x\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r4.x, r0.x_abs, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x, r4.x, l1, r3.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__native_recip_2f32",
"mdef(322)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.xy__, l0, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_recip_4f32",
"mdef(323)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0, l0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_recip_f32",
"mdef(324)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.x___, l0, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_rsqrt_2f32",
"mdef(325)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_rsqrt_4f32",
"mdef(326)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_rsqrt_f32",
"mdef(327)_out(1)_in(1)\n"
"mov r0, in0\n"
"rsq_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_sin_2f32",
"mdef(328)_out(1)_in(1)\n"
"mov r0, in0\n"
"sin_vec r0.xy, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_sin_4f32",
"mdef(329)_out(1)_in(1)\n"
"mov r0, in0\n"
"sin_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_sin_f32",
"mdef(330)_out(1)_in(1)\n"
"mov r0, in0\n"
"sin_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_sqrt_2f32",
"mdef(331)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0.xy__, r0.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_sqrt_4f32",
"mdef(332)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_sqrt_f32",
"mdef(333)_out(1)_in(1)\n"
"mov r0, in0\n"
"sqrt_vec r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_tan_2f32",
"mdef(334)_out(1)_in(1)\n"
"mov r0, in0\n"
"sin_vec r1.xy__, r0.xy\n"
"cos_vec r2.xy__, r0.xy\n"
"div_zeroop(infinity) r0.xy__, r1.xy, r2.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_tan_4f32",
"mdef(335)_out(1)_in(1)\n"
"mov r0, in0\n"
"sin_vec r1, r0\n"
"cos_vec r2, r0\n"
"div_zeroop(infinity) r0, r1, r2\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__native_tan_f32",
"mdef(336)_out(1)_in(1)\n"
"mov r0, in0\n"
"sin_vec r1.x___, r0.x\n"
"cos_vec r2.x___, r0.x\n"
"div_zeroop(infinity) r0.x___, r1.x, r2.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__nextafter_f32",
"mdef(337)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__zw, r0.xxxy, l0\n"
"and r0.__z_, r0.w, r0.z\n"
"ilt r0.___w, r0.x, r0.y\n"
"and r0.__z_, r0.z, r0.w\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, l1, r0.x\n"
"and r0.___w, r0.w, r1.x\n"
"ior r0.__z_, r0.z, r0.w\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r0.__z_, r0.z, l2, l3\n"
"iadd r0.__z_, r0.x, r0.z\n"
"dcl_literal l4, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x00000000\n"
"and r1.xyz_, r0.xyyx, l4\n"
"ine r0.___w, r1.x, r1.y\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r1.___w, r1.x, l5\n"
"and r0.___w, r0.w, r1.w\n"
"dcl_literal l6, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ior r1.__z_, r1.z, l6\n"
"cmov_logical r0.__z_, r0.w, r1.z, r0.z\n"
"ieq r0.x___, r0.x, r0.y\n"
"ieq r0.___w, r1.x, r1.y\n"
"dcl_literal l7, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ult r1.xy__, l7, r1.xyxx\n"
"and r0.___w, r1.w, r0.w\n"
"ior r0.x___, r0.x, r0.w\n"
"cmov_logical r0.x___, r0.x, r0.y, r0.z\n"
"ior r0._y__, r1.y, r1.x\n"
"dcl_literal l8, 0x7FC00001, 0x7FC00001, 0x7FC00001, 0x7FC00001\n"
"cmov_logical r0.x___, r0.y, l8, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__normalize_2f32",
"mdef(338)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r2.x___, r0.xyxx, r0.xyxx\n"
"rsq_vec r2._y__, r2.x\n"
"mov r2.__zw, r0.xxxy_abs\n"
"\n"
"dcl_literal l7, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ilt r2.__zw, l7, r2.zzzw\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000001, 0x00000001\n"
"and r2.__zw, r2.zzzw, l8\n"
"iadd r2.__z_, r2.z, r2.w\n"
"mul_ieee r2._y_w, r0.xxxy, r2.y\n"
"\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r2.x___, r2.x, l9\n"
"\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.xy__, r2.x, l10, r2.ywyy\n"
"\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.__z_, l11, r2.z\n"
"\n"
"dcl_literal l12, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r2.z, l12, r2.xyxx\n"
"\n"
"\n"
"mov r0.__zw, l13\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__normalize_4f32",
"mdef(339)_out(1)_in(1)\n"
"mov r0, in0\n"
"dp2_ieee r2.x___, r0.xyxx, r0.xyxx\n"
"mad_ieee r2.x___, r0.z, r0.z, r2.x\n"
"mad_ieee r2.x___, r0.w, r0.w, r2.x\n"
"rsq_vec r2._y__, r2.x\n"
"mov r3, r0_abs\n"
"\n"
"dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r3, l14, r3\n"
"\n"
"dcl_literal l15, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3, r3, l15\n"
"iadd r2.__z_, r3.x, r3.y\n"
"iadd r2.__z_, r2.z, r3.z\n"
"iadd r2.__z_, r2.z, r3.w\n"
"mul_ieee r0, r0, r2.y\n"
"\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r2.x___, r2.x, l16\n"
"\n"
"dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0, r2.x, l17, r0\n"
"\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, l18, r2.z\n"
"\n"
"dcl_literal l19, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0, r2.x, l19, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__normalize_f32",
"mdef(340)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r2.x___, r0.x_abs\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r2.__z_, l1, r2.x\n"
"and r2._y__, r2.y, r2.z\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"uge r2.x___, l2, r2.x\n"
"and r2._y__, r2.y, r2.x\n"
"\n"
"dcl_literal l3, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r2._y__, r2.y, l3, r0.x\n"
"\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, l4, r0.x\n"
"and r2.__z_, r2.z, r2.w\n"
"and r2.x___, r2.x, r2.z\n"
"\n"
"dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l5, r2.y\n"
"\n"
"\n"
"mov r0._yzw, l6\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__pown_f32i32",
"mdef(341)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x80000000, 0x00000001\n"
"and r1, r0.xxyy, l0\n"
"itof r0.__z_, r1.x\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r0.__zw, r0.z, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0.___w, r0.w, l3\n"
"dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024\n"
"iadd r0.__z_, r0.z, l4\n"
"dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.__z_, l5, r0.z_neg(xyzw)\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r2.x___, l6, r0.z\n"
"dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.__z_, r2.x, l7, r0.z\n"
"inegate r2.x___, r0.z\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r2.x, l8\n"
"iadd r2.x___, r0.w, r2.x\n"
"ishr r0.___w, r0.w, r0.z\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l9, r0.z\n"
"cmov_logical r0.__z_, r0.z, r0.w, r2.x\n"
"dcl_literal l10, 0x00800000, 0x3F800000, 0x00000000, 0x00000000\n"
"ilt r2.xy__, r1.x, l10\n"
"cmov_logical r0.__z_, r2.x, r0.z, r1.x\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r0.__zw, r0.z, l11\n"
"dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"ior r0.___w, r0.w, l12\n"
"dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l13\n"
"dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.__z_, r0.w, l14, l15\n"
"round_z r2.___w, r2.z\n"
"ftoi r2.__z_, r2.z\n"
"dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r0.___w, r2.w_neg(xyzw), l16, r0.w\n"
"add r3.x___, r0.w, cb0[1].x\n"
"add r3._y__, r0.w, r3.x_neg(xyzw)\n"
"dcl_literal l17, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mul_ieee r3.__z_, r2.w, l17\n"
"dcl_literal l18, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.___w, r3.z, l18\n"
"dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r2.___w, r2.w, l19, r3.w_neg(xyzw)\n"
"div_zeroop(infinity) r0.___w, r0.w, r3.z\n"
"dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r4.x___, r0.w, l20\n"
"mad_ieee r3.x___, r4.x, r3.w, r3.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.x, r2.w, r3.x\n"
"add r4.x___, r0.w, r4.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.x, r3.w, r3.x\n"
"mad_ieee r2.___w, r4.x, r2.w, r3.x\n"
"add r2.___w, r3.y, r2.w_neg(xyzw)\n"
"div_zeroop(infinity) r2.___w, r2.w, r3.z\n"
"add r3.x___, r0.w, r2.w\n"
"dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000\n"
"dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925\n"
"mad_ieee r3._y__, r0.w_neg(xyzw), l21, l22\n"
"dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l23\n"
"dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD\n"
"mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l24\n"
"dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l25\n"
"dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l26\n"
"dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l27\n"
"mul_ieee r3.__z_, r0.w_neg(xyzw), r0.w\n"
"add r0.___w, r0.w, r3.x_neg(xyzw)\n"
"mad_ieee r3.___w, r3.y, r3.z, r3.x\n"
"add r3.x___, r3.x, r3.w_neg(xyzw)\n"
"mad_ieee r3.x___, r3.y, r3.z, r3.x\n"
"add r0.___w, r2.w, r0.w\n"
"add r0.___w, r3.x, r0.w\n"
"add r2.___w, r3.w, r0.w\n"
"add r3.x___, r3.w, r2.w_neg(xyzw)\n"
"add r0.___w, r0.w, r3.x\n"
"dcl_literal l28, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r2.w, l28\n"
"add r3._y__, r2.w, r3.x_neg(xyzw)\n"
"dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r2.___w, r2.w, l29\n"
"dcl_literal l30, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r3.__z_, r3.x, l30, r2.w_neg(xyzw)\n"
"dcl_literal l31, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r3.__z_, r3.y, l31, r3.z\n"
"dcl_literal l32, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.x___, r3.x, l32, r3.z\n"
"dcl_literal l33, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.x___, r3.y, l33, r3.x\n"
"dcl_literal l34, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0.___w, r0.w, l34, r3.x\n"
"add r3.x___, r2.w, r0.w\n"
"add r2.___w, r2.w, r3.x_neg(xyzw)\n"
"add r0.___w, r0.w, r2.w\n"
"dcl_literal l35, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0\n"
"iadd r2.__z_, r2.z, l35\n"
"dcl_literal l36, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r2.___w, r2.z, l36\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l38, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD\n"
"cmov_logical r4, r2.w, l37, l38\n"
"dcl_literal l39, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r5, r2.w, l39\n"
"dcl_literal l40, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87\n"
"cmov_logical r4, r5.x, l40, r4\n"
"dcl_literal l41, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597\n"
"cmov_logical r4, r5.y, l41, r4\n"
"dcl_literal l42, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF\n"
"cmov_logical r4, r5.z, l42, r4\n"
"dcl_literal l43, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715\n"
"cmov_logical r4, r5.w, l43, r4\n"
"dcl_literal l44, 0x00000005, 0x00000006, 0x00000007, 0x00000008\n"
"ieq r6, r2.w, l44\n"
"dcl_literal l45, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5\n"
"cmov_logical r4, r6.x, l45, r4\n"
"dcl_literal l46, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998\n"
"cmov_logical r4, r6.y, l46, r4\n"
"dcl_literal l47, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E\n"
"cmov_logical r4, r6.z, l47, r4\n"
"dcl_literal l48, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355\n"
"cmov_logical r4, r6.w, l48, r4\n"
"dcl_literal l49, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C\n"
"ieq r7, r2.w, l49\n"
"dcl_literal l50, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D\n"
"cmov_logical r4, r7.x, l50, r4\n"
"dcl_literal l51, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817\n"
"cmov_logical r4, r7.y, l51, r4\n"
"dcl_literal l52, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0\n"
"cmov_logical r4, r7.z, l52, r4\n"
"dcl_literal l53, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D\n"
"cmov_logical r4, r7.w, l53, r4\n"
"dcl_literal l54, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F\n"
"ieq r3._yzw, r2.w, l54\n"
"dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l56, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4\n"
"cmov_logical r8, r2.w, l55, l56\n"
"dcl_literal l57, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999\n"
"cmov_logical r4, r3.y, l57, r4\n"
"dcl_literal l58, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014\n"
"cmov_logical r4, r3.z, l58, r4\n"
"dcl_literal l59, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12\n"
"cmov_logical r4, r3.w, l59, r4\n"
"dcl_literal l60, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"and r2.___w, r2.z, l60\n"
"dcl_literal l61, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"ieq r2.__z_, r2.z, l61\n"
"dcl_literal l62, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r9.xyz_, r2.w, l62\n"
"cmov_logical r2.___w, r9.x, r4.y, r4.x\n"
"cmov_logical r2.___w, r9.y, r4.z, r2.w\n"
"cmov_logical r2.___w, r9.z, r4.w, r2.w\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r2.z, l63, r2.w\n"
"add r4.x___, r3.x, r2.w\n"
"add r3.x___, r3.x, r4.x_neg(xyzw)\n"
"add r2.___w, r2.w, r3.x\n"
"add r0.___w, r0.w, r2.w\n"
"add r2.___w, r4.x, r0.w\n"
"add r3.x___, r4.x, r2.w_neg(xyzw)\n"
"dcl_literal l64, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F\n"
"cmov_logical r4, r5.x, l64, r8\n"
"dcl_literal l65, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72\n"
"cmov_logical r4, r5.y, l65, r4\n"
"dcl_literal l66, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926\n"
"cmov_logical r4, r5.z, l66, r4\n"
"dcl_literal l67, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B\n"
"cmov_logical r4, r5.w, l67, r4\n"
"dcl_literal l68, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D\n"
"cmov_logical r4, r6.x, l68, r4\n"
"dcl_literal l69, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4\n"
"cmov_logical r4, r6.y, l69, r4\n"
"dcl_literal l70, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E\n"
"cmov_logical r4, r6.z, l70, r4\n"
"dcl_literal l71, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83\n"
"cmov_logical r4, r6.w, l71, r4\n"
"dcl_literal l72, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F\n"
"cmov_logical r4, r7.x, l72, r4\n"
"dcl_literal l73, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7\n"
"cmov_logical r4, r7.y, l73, r4\n"
"dcl_literal l74, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6\n"
"cmov_logical r4, r7.z, l74, r4\n"
"dcl_literal l75, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209\n"
"cmov_logical r4, r7.w, l75, r4\n"
"dcl_literal l76, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6\n"
"cmov_logical r4, r3.y, l76, r4\n"
"dcl_literal l77, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1\n"
"cmov_logical r4, r3.z, l77, r4\n"
"dcl_literal l78, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70\n"
"cmov_logical r4, r3.w, l78, r4\n"
"cmov_logical r3._y__, r9.x, r4.y, r4.x\n"
"cmov_logical r3._y__, r9.y, r4.z, r3.y\n"
"cmov_logical r3._y__, r9.z, r4.w, r3.y\n"
"dcl_literal l79, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r2.__z_, r2.z, l79, r3.y\n"
"add r3._y__, r2.w, r2.z\n"
"add r2.__z_, r2.z, r3.y_neg(xyzw)\n"
"add r2.__z_, r2.w, r2.z\n"
"add r0.___w, r0.w, r3.x\n"
"add r0.___w, r2.z, r0.w\n"
"add r2.__z_, r3.y, r0.w\n"
"add r2.___w, r3.y, r2.z_neg(xyzw)\n"
"add r0.___w, r0.w, r2.w\n"
"dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l80\n"
"dcl_literal l81, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC\n"
"and r2.x___, r2.x, l81\n"
"iadd r0.__z_, r0.z, r2.x\n"
"itof r0.__z_, r0.z\n"
"add r2.x___, r2.z, r0.z\n"
"add r0.__z_, r0.z, r2.x_neg(xyzw)\n"
"add r0.__z_, r2.z, r0.z\n"
"add r0.__z_, r0.w, r0.z\n"
"add r0.___w, r2.x, r0.z\n"
"add r2.x___, r2.x, r0.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r2.x\n"
"dcl_literal l82, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r0.y, l82\n"
"inegate r2.__z_, r0.y\n"
"cmov_logical r2.x___, r2.x, r2.z, r0.y\n"
"dcl_literal l83, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishr r2.__z_, r2.x, l83\n"
"itof r2.__z_, r2.z\n"
"dcl_literal l84, 0x43800000, 0x43800000, 0x43800000, 0x43800000\n"
"mul_ieee r2.__z_, r2.z, l84\n"
"itof r2.___w, r2.x\n"
"dcl_literal l85, 0x01000000, 0x01000000, 0x01000000, 0x01000000\n"
"ilt r3.x___, l85, r2.x\n"
"dcl_literal l86, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r2.x___, r2.x, l86\n"
"cmov_logical r2.__z_, r3.x, r2.z, r2.w\n"
"ior r2.__z_, r1.z, r2.z\n"
"mul_ieee r2.___w, r0.z, r2.z\n"
"add r0.__z_, r0.w, r0.z\n"
"itof r2.x___, r2.x\n"
"and r2.x___, r3.x, r2.x\n"
"dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r3.x___, r2.x, l87\n"
"ior r1.__z_, r1.z, r2.x\n"
"cmov_logical r1.__z_, r3.x, r1.z, r2.x\n"
"mad_ieee r2.x___, r0.w, r1.z, r2.w\n"
"add r1.__z_, r2.z, r1.z\n"
"dcl_literal l88, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2.___w, r0.w, l88\n"
"mul_ieee r3.x___, r0.w, r2.z\n"
"add r0.___w, r0.w, r2.w_neg(xyzw)\n"
"dcl_literal l89, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3._y__, r2.z, l89\n"
"add r2.__z_, r2.z, r3.y_neg(xyzw)\n"
"mad_ieee r3.__z_, r2.w, r3.y, r3.x_neg(xyzw)\n"
"mad_ieee r2.___w, r2.w, r2.z, r3.z\n"
"mad_ieee r2.___w, r0.w, r3.y, r2.w\n"
"mad_ieee r0.___w, r0.w, r2.z, r2.w\n"
"add r0.___w, r2.x, r0.w\n"
"add r2.x___, r3.x, r0.w\n"
"add r2.__z_, r3.x, r2.x_neg(xyzw)\n"
"add r0.___w, r0.w, r2.z\n"
"add r2.__z_, r2.x, r0.w\n"
"round_z r2.___w, r2.z\n"
"ftoi r2.__z_, r2.z\n"
"dcl_literal l90, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"lt r3.x___, l90, r2.w_abs\n"
"ftoi r3._y__, r2.w_abs\n"
"dcl_literal l91, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"cmov_logical r3.x___, r3.x, l91, r3.y\n"
"inegate r3._y__, r3.x\n"
"dcl_literal l92, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r3.__z_, r2.w, l92\n"
"cmov_logical r3.x___, r3.z, r3.y, r3.x\n"
"dcl_literal l93, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r3._y__, r3.x, l93\n"
"add r3.__z_, r2.x, r2.w_neg(xyzw)\n"
"add r2.x___, r2.x, r3.z_neg(xyzw)\n"
"add r2.x___, r2.w_neg(xyzw), r2.x\n"
"add r0.___w, r0.w, r2.x\n"
"add r2.x___, r3.z, r0.w\n"
"add r2.___w, r3.z, r2.x_neg(xyzw)\n"
"add r0.___w, r0.w, r2.w\n"
"add r0.___w, r2.x, r0.w\n"
"dcl_literal l94, 0x3F317218, 0x00000000, 0x00000000, 0x42000000\n"
"mul_ieee r2.x__w, r0.w, l94\n"
"dcl_literal l95, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x0FFFF000\n"
"and r3.__zw, r0.w, l95\n"
"dcl_literal l96, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r4.x___, r3.w, l96, r2.x_neg(xyzw)\n"
"dcl_literal l97, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r4.x___, r3.w, l97, r4.x\n"
"add r3.___w, r0.w, r3.w_neg(xyzw)\n"
"dcl_literal l98, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B\n"
"lt r3.__z_, r3.z, l98\n"
"dcl_literal l99, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r4.x___, r3.w, l99, r4.x\n"
"dcl_literal l100, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r3.___w, r3.w, l100, r4.x\n"
"dcl_literal l101, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r4.x___, r0.w, l101, r3.w\n"
"dcl_literal l102, 0x00000000, 0x34904540, 0x3A1BECC5, 0x00000000\n"
"dcl_literal l103, 0x00000000, 0x3CC2F57D, 0xBC42EEB9, 0x00000000\n"
"mad_ieee r4._yz_, r4.x, l102, l103\n"
"dcl_literal l104, 0x00000000, 0x37874471, 0x3DDB50CA, 0x00000000\n"
"mad_ieee r4._yz_, r4.yyzy, r4.x, l104\n"
"dcl_literal l105, 0x00000000, 0x3F7FE378, 0xBEFFE15B, 0x00000000\n"
"mad_ieee r4._yz_, r4.yyzy, r4.x, l105\n"
"dcl_literal l106, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378\n"
"mad_ieee r4.x___, r4.z, r4.x, l106\n"
"div_zeroop(infinity) r4.x___, r4.y, r4.x\n"
"mul_ieee r3.___w, r3.w, r4.x\n"
"mad_ieee r2.x___, r4.x, r2.x, r3.w\n"
"dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, l107, r2.w\n"
"dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.x___, r2.x, l108\n"
"dcl_literal l109, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r2.x, l109\n"
"cmov_logical r2.x___, r4.z, r3.x, r3.y\n"
"itof r3.x___, r3.x\n"
"dcl_literal l110, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3._y__, r2.x, l110\n"
"itof r3.___w, r4.w\n"
"cmov_logical r3.___w, r4.z, r4.x, r3.w\n"
"iadd r3._y__, r3.w, r3.y\n"
"dcl_literal l111, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r4.x_z_, r3.w, l111\n"
"dcl_literal l112, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.___w, r4.x, l112\n"
"dcl_literal l113, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r4.x___, r4.z, l113\n"
"iadd r2.x___, r3.w, r2.x\n"
"dcl_literal l114, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l114\n"
"dcl_literal l115, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3.___w, l115, r2.x\n"
"dcl_literal l116, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.x___, l116, r2.x_neg(xyzw)\n"
"dcl_literal l117, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r3._y__, r3.w, l117, r3.y\n"
"dcl_literal l118, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"ilt r4.__zw, l118, r2.x\n"
"dcl_literal l119, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r3.___w, r4.z, l119, r2.x\n"
"dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, r2.x, l120\n"
"dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r2.x, l121, r3.w\n"
"ishr r2.x___, r4.x, r2.x\n"
"cmov_logical r2.x___, r4.w, r2.x, r3.y\n"
"dcl_literal l122, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"lt r3.x___, l122, r3.x\n"
"dcl_literal l123, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.x___, r3.x, l123, r2.x\n"
"ior r2.x___, r4.y, r2.x\n"
"dcl_literal l124, 0x42000000, 0x42000000, 0x00000000, 0x00000000\n"
"dcl_literal l125, 0x3F000000, 0xBF000000, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r0.w, l124, l125\n"
"ftoi r3.xy__, r3.xyxx\n"
"cmov_logical r2.___w, r2.w, r3.x, r3.y\n"
"itof r3.x___, r2.w\n"
"dcl_literal l126, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000\n"
"mad_ieee r0.___w, r3.x_neg(xyzw), l126, r0.w\n"
"dcl_literal l127, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820\n"
"dcl_literal l128, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3.x___, r0.w, l127, l128\n"
"dcl_literal l129, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r0.___w, r0.w, l129\n"
"mul_ieee r3._y__, r0.w, r0.w\n"
"mad_ieee r0.___w, r3.y, r3.x, r0.w\n"
"dcl_literal l130, 0x0000001F, 0x00000003, 0x00000000, 0x00000000\n"
"and r3.xy__, r2.w, l130\n"
"iadd r2.___w, r2.w, r3.x_neg(xyzw)\n"
"dcl_literal l131, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r4.xyz_, r3.y, l131\n"
"dcl_literal l132, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r3.x___, r3.x, l132\n"
"dcl_literal l133, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l134, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000\n"
"cmov_logical r5, r3.x, l133, l134\n"
"dcl_literal l135, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r6, r3.x, l135\n"
"dcl_literal l136, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000\n"
"cmov_logical r5, r6.x, l136, r5\n"
"dcl_literal l137, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000\n"
"cmov_logical r5, r6.y, l137, r5\n"
"dcl_literal l138, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000\n"
"cmov_logical r5, r6.z, l138, r5\n"
"dcl_literal l139, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000\n"
"cmov_logical r5, r6.w, l139, r5\n"
"dcl_literal l140, 0x00000005, 0x00000006, 0x00000007, 0x00000000\n"
"ieq r7.xyz_, r3.x, l140\n"
"dcl_literal l141, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l142, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404\n"
"cmov_logical r8, r3.x, l141, l142\n"
"dcl_literal l143, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000\n"
"cmov_logical r5, r7.x, l143, r5\n"
"dcl_literal l144, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000\n"
"cmov_logical r5, r7.y, l144, r5\n"
"dcl_literal l145, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000\n"
"cmov_logical r5, r7.z, l145, r5\n"
"cmov_logical r3.x___, r4.x, r5.y, r5.x\n"
"cmov_logical r3.x___, r4.y, r5.z, r3.x\n"
"cmov_logical r3.x___, r4.z, r5.w, r3.x\n"
"dcl_literal l146, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3\n"
"cmov_logical r5, r6.x, l146, r8\n"
"dcl_literal l147, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C\n"
"cmov_logical r5, r6.y, l147, r5\n"
"dcl_literal l148, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607\n"
"cmov_logical r5, r6.z, l148, r5\n"
"dcl_literal l149, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329\n"
"cmov_logical r5, r6.w, l149, r5\n"
"dcl_literal l150, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647\n"
"cmov_logical r5, r7.x, l150, r5\n"
"dcl_literal l151, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D\n"
"cmov_logical r5, r7.y, l151, r5\n"
"dcl_literal l152, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0\n"
"cmov_logical r5, r7.z, l152, r5\n"
"cmov_logical r3._y__, r4.x, r5.y, r5.x\n"
"cmov_logical r3._y__, r4.y, r5.z, r3.y\n"
"cmov_logical r3._y__, r4.z, r5.w, r3.y\n"
"add r3.___w, r3.x, r3.y\n"
"mad_ieee r0.___w, r3.w, r0.w, r3.y\n"
"add r0.___w, r3.x, r0.w\n"
"dcl_literal l153, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r0.w, l153\n"
"dcl_literal l154, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ixor r0.___w, r2.w, l154\n"
"imax r2.___w, r2.w, r2.w_neg(xyzw)\n"
"dcl_literal l155, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r0.___w, r0.w, l155\n"
"dcl_literal l156, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"udiv r2.___w, r2.w, l156\n"
"inegate r3.x___, r2.w\n"
"cmov_logical r0.___w, r0.w, r3.x, r2.w\n"
"iadd r0.___w, r0.w, r2.z\n"
"itof r0.___w, r0.w\n"
"dcl_literal l157, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"lt r2.__z_, l157, r0.w_abs\n"
"ftoi r2.___w, r0.w_abs\n"
"dcl_literal l158, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r0.w, l158\n"
"dcl_literal l159, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"cmov_logical r2.__z_, r2.z, l159, r2.w\n"
"inegate r2.___w, r2.z\n"
"cmov_logical r0.___w, r0.w, r2.w, r2.z\n"
"dcl_literal l160, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.__z_, r0.w, l160\n"
"cmov_logical r2.__z_, r4.z, r0.w, r2.z\n"
"itof r0.___w, r0.w\n"
"dcl_literal l161, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.___w, r2.z, l161\n"
"itof r3.x___, r4.w\n"
"cmov_logical r3.x___, r4.z, r4.x, r3.x\n"
"iadd r2.___w, r3.x, r2.w\n"
"dcl_literal l162, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r3.xy__, r3.x, l162\n"
"dcl_literal l163, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r3.x, l163\n"
"dcl_literal l164, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3._y__, r3.y, l164\n"
"iadd r2.__z_, r3.x, r2.z\n"
"dcl_literal l165, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.__z_, r2.z, l165\n"
"dcl_literal l166, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3.x___, l166, r2.z\n"
"dcl_literal l167, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.__z_, l167, r2.z_neg(xyzw)\n"
"dcl_literal l168, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.___w, r3.x, l168, r2.w\n"
"dcl_literal l169, 0x00000017, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.x__w, l169, r2.z\n"
"dcl_literal l170, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r3.x___, r3.x, l170, r2.z\n"
"dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.__z_, r2.z, l171\n"
"dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r2.z, l172, r3.x\n"
"ishr r2.__z_, r3.y, r2.z\n"
"cmov_logical r2.__z_, r3.w, r2.z, r2.w\n"
"dcl_literal l173, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"lt r0.___w, l173, r0.w\n"
"dcl_literal l174, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r0.w, l174, r2.z\n"
"ior r0.___w, r4.y, r0.w\n"
"cmov_logical r0.___w, r3.z, r2.x, r0.w\n"
"dcl_literal l175, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r2.x___, r1.z, l175\n"
"dcl_literal l176, 0x2E800000, 0x2E800000, 0x2E800000, 0x2E800000\n"
"ilt r2.x___, r2.x, l176\n"
"dcl_literal l177, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.__z_, r1.z, l177\n"
"mul_ieee r0.__z_, r0.z, r1.z\n"
"cmov_logical r0.___w, r2.x, r2.z, r0.w\n"
"itof r0._y__, r0.y\n"
"dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r1.__z_, r0.y, l178\n"
"dcl_literal l179, 0x7FFFFFFF, 0x00000000, 0x80000000, 0x00000000\n"
"and r2.x_z_, r0.y, l179\n"
"cmov_logical r0._y__, r1.z, r1.x, r0.w\n"
"dcl_literal l180, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"lt r0.___w, l180, r0.z\n"
"dcl_literal l181, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r1.__z_, r0.z, l181\n"
"dcl_literal l182, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000\n"
"lt r0.__z_, r0.z, l182\n"
"dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r1.__z_, l183, r1.z\n"
"and r0.__zw, r0.zzzw, r1.z\n"
"dcl_literal l184, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.w, l184, r0.y\n"
"dcl_literal l185, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.z, l185, r0.y\n"
"dcl_literal l186, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l186, r2.x\n"
"inot r0.___w, r0.z\n"
"dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r1.__z_, r2.x, l187\n"
"inot r2.___w, r1.z\n"
"and r0.___w, r0.w, r2.w\n"
"dcl_literal l188, 0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l189, 0x00000000, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"cmov_logical r3.xy__, r1.x, l188, l189\n"
"dcl_literal l190, 0x00000000, 0x80000000, 0x00000000, 0x00000000\n"
"ine r1._y_w, r1.yyyw, l190\n"
"inot r2.___w, r1.y\n"
"and r3.__zw, r3.xxxy, r2.w\n"
"and r3.__z_, r0.w, r3.z\n"
"and r1.___w, r0.w, r1.w\n"
"and r0.___w, r0.w, r3.y\n"
"and r3.__z_, r3.z, r1.w\n"
"cmov_logical r0._y__, r3.z, r0.y_neg(xyzw), r0.y\n"
"and r3.__z_, r3.y, r1.y\n"
"dcl_literal l191, 0x00000000, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"dcl_literal l192, 0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.xy__, r2.x, l191, l192\n"
"dcl_literal l193, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ine r2.x___, r2.z, l193\n"
"and r2.__z_, r3.z, r4.y\n"
"and r2.__z_, r1.w, r2.z\n"
"inot r3.__z_, r2.x\n"
"and r2.__z_, r2.z, r3.z\n"
"dcl_literal l194, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r2.z, l194, r0.y\n"
"and r2.__z_, r3.w, r4.y\n"
"and r2.__z_, r1.w, r2.z\n"
"and r2.__z_, r3.z, r2.z\n"
"dcl_literal l195, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0._y__, r2.z, l195, r0.y\n"
"inot r2.__z_, r1.w\n"
"and r3._y__, r3.y, r4.y\n"
"and r2._y__, r2.y, r3.x\n"
"and r3.x___, r2.z, r3.y\n"
"and r3._y__, r3.z, r3.x\n"
"and r3.x___, r2.x, r3.x\n"
"dcl_literal l196, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r3.y, l196, r0.y\n"
"and r0.___w, r0.w, r4.y\n"
"and r0.___w, r1.w, r0.w\n"
"and r0.___w, r2.x, r0.w\n"
"cmov_logical r0.x___, r0.w, r0.x, r0.y\n"
"dcl_literal l197, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r3.x, l197, r0.x\n"
"dcl_literal l198, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r0._y__, r1.x, l198\n"
"and r0.___w, r1.y, r0.y\n"
"and r0._y__, r2.w, r0.y\n"
"ior r3.x___, r4.x, r0.w\n"
"inot r0.___w, r0.w\n"
"dcl_literal l199, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r3.x, l199, r0.x\n"
"dcl_literal l200, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r3.x___, r1.x, l200\n"
"dcl_literal l201, 0x00000000, 0x7F800000, 0x00000000, 0x3F800000\n"
"ilt r3._y_w, l201, r1.x\n"
"and r1.x___, r2.w, r3.x\n"
"and r1.x___, r4.y, r1.x\n"
"and r1.___w, r1.w, r1.x\n"
"and r1.x___, r2.z, r1.x\n"
"and r2.__z_, r3.z, r1.w\n"
"and r1.___w, r2.x, r1.w\n"
"dcl_literal l202, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.x___, r2.z, l202, r0.x\n"
"dcl_literal l203, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0.x___, r1.w, l203, r0.x\n"
"and r1.___w, r3.z, r1.x\n"
"and r1.x___, r2.x, r1.x\n"
"dcl_literal l204, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r1.w, l204, r0.x\n"
"dcl_literal l205, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.x, l205, r0.x\n"
"and r1.x___, r1.y, r3.x\n"
"inot r1._y__, r3.x\n"
"and r1.x___, r4.y, r1.x\n"
"and r1.___w, r4.y, r3.y\n"
"and r2.__z_, r3.z, r1.x\n"
"and r1.x___, r2.x, r1.x\n"
"dcl_literal l206, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r2.z, l206, r0.x\n"
"dcl_literal l207, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.x, l207, r0.x\n"
"and r0._y__, r1.z, r0.y\n"
"dcl_literal l208, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r0.y, l208, r0.x\n"
"and r0._y__, r1.z, r2.y\n"
"and r1.x___, r3.z, r0.y\n"
"and r0._y__, r2.x, r0.y\n"
"dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.x, l209, r0.x\n"
"inot r1.x___, r3.y\n"
"and r1.x___, r1.y, r1.x\n"
"and r1.x___, r3.w, r1.x\n"
"and r1.x___, r1.z, r1.x\n"
"and r1._y__, r3.z, r1.x\n"
"and r1.x___, r2.x, r1.x\n"
"ior r0._y__, r0.y, r1.y\n"
"dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.y, l210, r0.x\n"
"and r0._y__, r0.z, r0.w\n"
"ior r0._y__, r1.w, r0.y\n"
"dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.x, l211, r0.x\n"
"dcl_literal l212, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l212, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__powr_f32",
"mdef(342)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7FFFFFFF, 0x80000000\n"
"and r1, r0.xxyy, l0\n"
"itof r0.x___, r1.x\n"
"dcl_literal l1, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r0.x_z_, r0.x, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.x___, r0.x, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0.__z_, r0.z, l3\n"
"dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024\n"
"iadd r0.x___, r0.x, l4\n"
"dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.x___, l5, r0.x_neg(xyzw)\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r0.___w, l6, r0.x\n"
"dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.x___, r0.w, l7, r0.x\n"
"inegate r0.___w, r0.x\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.___w, r0.w, l8\n"
"iadd r0.___w, r0.z, r0.w\n"
"ishr r0.__z_, r0.z, r0.x\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, l9, r0.x\n"
"cmov_logical r0.x___, r0.x, r0.z, r0.w\n"
"dcl_literal l10, 0x00800000, 0x2E800000, 0x3F800000, 0x00000000\n"
"ilt r2.xyz_, r1.xzxx, l10\n"
"cmov_logical r0.x___, r2.x, r0.x, r1.x\n"
"dcl_literal l11, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r0.x_z_, r0.x, l11\n"
"dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"ior r0.__z_, r0.z, l12\n"
"dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.x___, r0.x, l13\n"
"dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r0.z, l14, l15\n"
"round_z r2.___w, r0.w\n"
"ftoi r0.___w, r0.w\n"
"dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r0.__z_, r2.w_neg(xyzw), l16, r0.z\n"
"add r3.x___, r0.z, cb0[1].x\n"
"add r3._y__, r0.z, r3.x_neg(xyzw)\n"
"dcl_literal l17, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mul_ieee r3.__z_, r2.w, l17\n"
"dcl_literal l18, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.___w, r3.z, l18\n"
"dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r2.___w, r2.w, l19, r3.w_neg(xyzw)\n"
"div_zeroop(infinity) r0.__z_, r0.z, r3.z\n"
"dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r4.x___, r0.z, l20\n"
"mad_ieee r3.x___, r4.x, r3.w, r3.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.x, r2.w, r3.x\n"
"add r4.x___, r0.z, r4.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.x, r3.w, r3.x\n"
"mad_ieee r2.___w, r4.x, r2.w, r3.x\n"
"add r2.___w, r3.y, r2.w_neg(xyzw)\n"
"div_zeroop(infinity) r2.___w, r2.w, r3.z\n"
"add r3.x___, r0.z, r2.w\n"
"dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000\n"
"dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), l21, l22\n"
"dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l23\n"
"dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l24\n"
"dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l25\n"
"dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l26\n"
"dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l27\n"
"mul_ieee r3.__z_, r0.z_neg(xyzw), r0.z\n"
"add r0.__z_, r0.z, r3.x_neg(xyzw)\n"
"mad_ieee r3.___w, r3.y, r3.z, r3.x\n"
"add r3.x___, r3.x, r3.w_neg(xyzw)\n"
"mad_ieee r3.x___, r3.y, r3.z, r3.x\n"
"add r0.__z_, r2.w, r0.z\n"
"add r0.__z_, r3.x, r0.z\n"
"add r2.___w, r3.w, r0.z\n"
"add r3.x___, r3.w, r2.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r3.x\n"
"dcl_literal l28, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r2.w, l28\n"
"add r3._y__, r2.w, r3.x_neg(xyzw)\n"
"dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r2.___w, r2.w, l29\n"
"dcl_literal l30, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r3.__z_, r3.x, l30, r2.w_neg(xyzw)\n"
"dcl_literal l31, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r3.__z_, r3.y, l31, r3.z\n"
"dcl_literal l32, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.x___, r3.x, l32, r3.z\n"
"dcl_literal l33, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.x___, r3.y, l33, r3.x\n"
"dcl_literal l34, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0.__z_, r0.z, l34, r3.x\n"
"add r3.x___, r2.w, r0.z\n"
"add r2.___w, r2.w, r3.x_neg(xyzw)\n"
"add r0.__z_, r0.z, r2.w\n"
"dcl_literal l35, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0\n"
"iadd r0.___w, r0.w, l35\n"
"dcl_literal l36, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r2.___w, r0.w, l36\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l38, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD\n"
"cmov_logical r4, r2.w, l37, l38\n"
"dcl_literal l39, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r5, r2.w, l39\n"
"dcl_literal l40, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87\n"
"cmov_logical r4, r5.x, l40, r4\n"
"dcl_literal l41, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597\n"
"cmov_logical r4, r5.y, l41, r4\n"
"dcl_literal l42, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF\n"
"cmov_logical r4, r5.z, l42, r4\n"
"dcl_literal l43, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715\n"
"cmov_logical r4, r5.w, l43, r4\n"
"dcl_literal l44, 0x00000005, 0x00000006, 0x00000007, 0x00000008\n"
"ieq r6, r2.w, l44\n"
"dcl_literal l45, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5\n"
"cmov_logical r4, r6.x, l45, r4\n"
"dcl_literal l46, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998\n"
"cmov_logical r4, r6.y, l46, r4\n"
"dcl_literal l47, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E\n"
"cmov_logical r4, r6.z, l47, r4\n"
"dcl_literal l48, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355\n"
"cmov_logical r4, r6.w, l48, r4\n"
"dcl_literal l49, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C\n"
"ieq r7, r2.w, l49\n"
"dcl_literal l50, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D\n"
"cmov_logical r4, r7.x, l50, r4\n"
"dcl_literal l51, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817\n"
"cmov_logical r4, r7.y, l51, r4\n"
"dcl_literal l52, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0\n"
"cmov_logical r4, r7.z, l52, r4\n"
"dcl_literal l53, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D\n"
"cmov_logical r4, r7.w, l53, r4\n"
"dcl_literal l54, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F\n"
"ieq r3._yzw, r2.w, l54\n"
"dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l56, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4\n"
"cmov_logical r8, r2.w, l55, l56\n"
"dcl_literal l57, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999\n"
"cmov_logical r4, r3.y, l57, r4\n"
"dcl_literal l58, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014\n"
"cmov_logical r4, r3.z, l58, r4\n"
"dcl_literal l59, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12\n"
"cmov_logical r4, r3.w, l59, r4\n"
"dcl_literal l60, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"and r2.___w, r0.w, l60\n"
"dcl_literal l61, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"ieq r0.___w, r0.w, l61\n"
"dcl_literal l62, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r9.xyz_, r2.w, l62\n"
"cmov_logical r2.___w, r9.x, r4.y, r4.x\n"
"cmov_logical r2.___w, r9.y, r4.z, r2.w\n"
"cmov_logical r2.___w, r9.z, r4.w, r2.w\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r0.w, l63, r2.w\n"
"add r4.x___, r3.x, r2.w\n"
"add r3.x___, r3.x, r4.x_neg(xyzw)\n"
"add r2.___w, r2.w, r3.x\n"
"add r0.__z_, r0.z, r2.w\n"
"add r2.___w, r4.x, r0.z\n"
"add r3.x___, r4.x, r2.w_neg(xyzw)\n"
"dcl_literal l64, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F\n"
"cmov_logical r4, r5.x, l64, r8\n"
"dcl_literal l65, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72\n"
"cmov_logical r4, r5.y, l65, r4\n"
"dcl_literal l66, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926\n"
"cmov_logical r4, r5.z, l66, r4\n"
"dcl_literal l67, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B\n"
"cmov_logical r4, r5.w, l67, r4\n"
"dcl_literal l68, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D\n"
"cmov_logical r4, r6.x, l68, r4\n"
"dcl_literal l69, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4\n"
"cmov_logical r4, r6.y, l69, r4\n"
"dcl_literal l70, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E\n"
"cmov_logical r4, r6.z, l70, r4\n"
"dcl_literal l71, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83\n"
"cmov_logical r4, r6.w, l71, r4\n"
"dcl_literal l72, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F\n"
"cmov_logical r4, r7.x, l72, r4\n"
"dcl_literal l73, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7\n"
"cmov_logical r4, r7.y, l73, r4\n"
"dcl_literal l74, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6\n"
"cmov_logical r4, r7.z, l74, r4\n"
"dcl_literal l75, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209\n"
"cmov_logical r4, r7.w, l75, r4\n"
"dcl_literal l76, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6\n"
"cmov_logical r4, r3.y, l76, r4\n"
"dcl_literal l77, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1\n"
"cmov_logical r4, r3.z, l77, r4\n"
"dcl_literal l78, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70\n"
"cmov_logical r4, r3.w, l78, r4\n"
"cmov_logical r3._y__, r9.x, r4.y, r4.x\n"
"cmov_logical r3._y__, r9.y, r4.z, r3.y\n"
"cmov_logical r3._y__, r9.z, r4.w, r3.y\n"
"dcl_literal l79, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.___w, r0.w, l79, r3.y\n"
"add r3._y__, r2.w, r0.w\n"
"add r0.___w, r0.w, r3.y_neg(xyzw)\n"
"add r0.___w, r2.w, r0.w\n"
"add r0.__z_, r0.z, r3.x\n"
"add r0.__z_, r0.w, r0.z\n"
"add r0.___w, r3.y, r0.z\n"
"add r2.___w, r3.y, r0.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r2.w\n"
"dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.x___, r0.x, l80\n"
"dcl_literal l81, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC\n"
"and r2.x___, r2.x, l81\n"
"iadd r0.x___, r0.x, r2.x\n"
"itof r0.x___, r0.x\n"
"add r2.x___, r0.w, r0.x\n"
"add r0.x___, r0.x, r2.x_neg(xyzw)\n"
"add r0.x___, r0.w, r0.x\n"
"add r0.x___, r0.z, r0.x\n"
"add r0.__z_, r2.x, r0.x\n"
"add r0.___w, r2.x, r0.z_neg(xyzw)\n"
"dcl_literal l82, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2.x___, r0.z, l82\n"
"mul_ieee r2.___w, r0.z, r0.y\n"
"dcl_literal l83, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r0.y, l83\n"
"mad_ieee r3._y__, r2.x, r3.x, r2.w_neg(xyzw)\n"
"add r3.__z_, r0.y, r3.x_neg(xyzw)\n"
"mad_ieee r3._y__, r2.x, r3.z, r3.y\n"
"add r2.x___, r0.z, r2.x_neg(xyzw)\n"
"mad_ieee r3.x___, r2.x, r3.x, r3.y\n"
"mad_ieee r2.x___, r2.x, r3.z, r3.x\n"
"add r0.x___, r0.x, r0.w\n"
"mad_ieee r0.___w, r0.x, r0.y, r2.x\n"
"add r0.x___, r0.z, r0.x\n"
"add r0.__z_, r2.w, r0.w\n"
"add r2.x___, r2.w, r0.z_neg(xyzw)\n"
"add r0.___w, r0.w, r2.x\n"
"add r2.x___, r0.z, r0.w\n"
"round_z r2.___w, r2.x\n"
"ftoi r2.x___, r2.x\n"
"add r3.x___, r0.z, r2.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r3.x_neg(xyzw)\n"
"add r0.__z_, r2.w_neg(xyzw), r0.z\n"
"add r0.__z_, r0.w, r0.z\n"
"add r0.___w, r3.x, r0.z\n"
"add r3.x___, r3.x, r0.w_neg(xyzw)\n"
"add r0.__z_, r0.z, r3.x\n"
"add r0.__z_, r0.w, r0.z\n"
"dcl_literal l84, 0x42000000, 0x42000000, 0x00000000, 0x00000000\n"
"dcl_literal l85, 0x3F000000, 0xBF000000, 0x00000000, 0x00000000\n"
"mad_ieee r3.xy__, r0.z, l84, l85\n"
"ftoi r3.xy__, r3.xyxx\n"
"dcl_literal l86, 0x00000000, 0x00000000, 0x3F317218, 0x42000000\n"
"mul_ieee r3.__zw, r0.z, l86\n"
"dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, l87, r3.w\n"
"cmov_logical r0.___w, r0.w, r3.x, r3.y\n"
"itof r3.x___, r0.w\n"
"dcl_literal l88, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000\n"
"mad_ieee r3.x___, r3.x_neg(xyzw), l88, r0.z\n"
"dcl_literal l89, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820\n"
"dcl_literal l90, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r3.x, l89, l90\n"
"dcl_literal l91, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r3.x___, r3.x, l91\n"
"mul_ieee r3.___w, r3.x, r3.x\n"
"mad_ieee r3.x___, r3.w, r3.y, r3.x\n"
"dcl_literal l92, 0x00000000, 0x0000001F, 0x00000000, 0x00000003\n"
"and r3._y_w, r0.w, l92\n"
"iadd r0.___w, r0.w, r3.y_neg(xyzw)\n"
"dcl_literal l93, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r4.xyz_, r3.w, l93\n"
"dcl_literal l94, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r3._y__, r3.y, l94\n"
"dcl_literal l95, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l96, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000\n"
"cmov_logical r5, r3.y, l95, l96\n"
"dcl_literal l97, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r6, r3.y, l97\n"
"dcl_literal l98, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000\n"
"cmov_logical r5, r6.x, l98, r5\n"
"dcl_literal l99, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000\n"
"cmov_logical r5, r6.y, l99, r5\n"
"dcl_literal l100, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000\n"
"cmov_logical r5, r6.z, l100, r5\n"
"dcl_literal l101, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000\n"
"cmov_logical r5, r6.w, l101, r5\n"
"dcl_literal l102, 0x00000005, 0x00000006, 0x00000007, 0x00000000\n"
"ieq r7.xyz_, r3.y, l102\n"
"dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l104, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404\n"
"cmov_logical r8, r3.y, l103, l104\n"
"dcl_literal l105, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000\n"
"cmov_logical r5, r7.x, l105, r5\n"
"dcl_literal l106, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000\n"
"cmov_logical r5, r7.y, l106, r5\n"
"dcl_literal l107, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000\n"
"cmov_logical r5, r7.z, l107, r5\n"
"cmov_logical r3._y__, r4.x, r5.y, r5.x\n"
"cmov_logical r3._y__, r4.y, r5.z, r3.y\n"
"cmov_logical r3._y__, r4.z, r5.w, r3.y\n"
"dcl_literal l108, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3\n"
"cmov_logical r5, r6.x, l108, r8\n"
"dcl_literal l109, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C\n"
"cmov_logical r5, r6.y, l109, r5\n"
"dcl_literal l110, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607\n"
"cmov_logical r5, r6.z, l110, r5\n"
"dcl_literal l111, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329\n"
"cmov_logical r5, r6.w, l111, r5\n"
"dcl_literal l112, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647\n"
"cmov_logical r5, r7.x, l112, r5\n"
"dcl_literal l113, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D\n"
"cmov_logical r5, r7.y, l113, r5\n"
"dcl_literal l114, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0\n"
"cmov_logical r5, r7.z, l114, r5\n"
"cmov_logical r3.___w, r4.x, r5.y, r5.x\n"
"cmov_logical r3.___w, r4.y, r5.z, r3.w\n"
"cmov_logical r3.___w, r4.z, r5.w, r3.w\n"
"add r4.x___, r3.y, r3.w\n"
"mad_ieee r3.x___, r4.x, r3.x, r3.w\n"
"add r3.x___, r3.y, r3.x\n"
"dcl_literal l115, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r3.x, l115\n"
"dcl_literal l116, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ixor r3.x___, r0.w, l116\n"
"imax r0.___w, r0.w, r0.w_neg(xyzw)\n"
"dcl_literal l117, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r3.x___, r3.x, l117\n"
"dcl_literal l118, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"udiv r0.___w, r0.w, l118\n"
"inegate r3._y__, r0.w\n"
"cmov_logical r0.___w, r3.x, r3.y, r0.w\n"
"iadd r0.___w, r0.w, r2.x\n"
"dcl_literal l119, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.x___, r0.w, l119\n"
"cmov_logical r2.x___, r4.z, r0.w, r2.x\n"
"itof r0.___w, r0.w\n"
"dcl_literal l120, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3.x___, r2.x, l120\n"
"itof r3._y__, r4.w\n"
"cmov_logical r3._y__, r4.z, r4.x, r3.y\n"
"iadd r3.x___, r3.y, r3.x\n"
"dcl_literal l121, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r3._y_w, r3.y, l121\n"
"dcl_literal l122, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3._y__, r3.y, l122\n"
"dcl_literal l123, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.___w, r3.w, l123\n"
"iadd r2.x___, r3.y, r2.x\n"
"dcl_literal l124, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.x___, r2.x, l124\n"
"dcl_literal l125, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3._y__, l125, r2.x\n"
"dcl_literal l126, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.x___, l126, r2.x_neg(xyzw)\n"
"dcl_literal l127, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r3.x___, r3.y, l127, r3.x\n"
"dcl_literal l128, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r3._y__, l128, r2.x\n"
"dcl_literal l129, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2.x___, r3.y, l129, r2.x\n"
"dcl_literal l130, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r2.x___, r2.x, l130\n"
"ishr r3._y__, r3.w, r2.x\n"
"dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.x___, l131, r2.x\n"
"cmov_logical r2.x___, r2.x, r3.y, r3.x\n"
"dcl_literal l132, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r0.___w, l132, r0.w\n"
"dcl_literal l133, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r0.w, l133, r2.x\n"
"ior r0.___w, r4.y, r0.w\n"
"dcl_literal l134, 0x7FFFFFFF, 0x0FFFF000, 0x00000000, 0x00000000\n"
"and r3.xy__, r0.z, l134\n"
"dcl_literal l135, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r2.x___, r3.y, l135, r3.z_neg(xyzw)\n"
"dcl_literal l136, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r2.x___, r3.y, l136, r2.x\n"
"add r3._y__, r0.z, r3.y_neg(xyzw)\n"
"dcl_literal l137, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B\n"
"lt r3.x___, r3.x, l137\n"
"dcl_literal l138, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r2.x___, r3.y, l138, r2.x\n"
"dcl_literal l139, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r2.x___, r3.y, l139, r2.x\n"
"dcl_literal l140, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r0.__z_, r0.z, l140, r2.x\n"
"dcl_literal l141, 0x00000000, 0x34904540, 0x00000000, 0x3A1BECC5\n"
"dcl_literal l142, 0x00000000, 0x3CC2F57D, 0x00000000, 0xBC42EEB9\n"
"mad_ieee r3._y_w, r0.z, l141, l142\n"
"dcl_literal l143, 0x00000000, 0x37874471, 0x00000000, 0x3DDB50CA\n"
"mad_ieee r3._y_w, r3.yyyw, r0.z, l143\n"
"dcl_literal l144, 0x00000000, 0x3F7FE378, 0x00000000, 0xBEFFE15B\n"
"mad_ieee r3._y_w, r3.yyyw, r0.z, l144\n"
"dcl_literal l145, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378\n"
"mad_ieee r0.__z_, r3.w, r0.z, l145\n"
"div_zeroop(infinity) r0.__z_, r3.y, r0.z\n"
"mul_ieee r2.x___, r2.x, r0.z\n"
"mad_ieee r0.__z_, r0.z, r3.z, r2.x\n"
"dcl_literal l146, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.__z_, r0.z, l146\n"
"dcl_literal l147, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r0.z, l147\n"
"ftoi r0.__z_, r2.w\n"
"dcl_literal l148, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r2.x___, l148, r2.w\n"
"dcl_literal l149, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.___w, r0.z, l149\n"
"cmov_logical r0.__z_, r4.z, r0.z, r2.w\n"
"dcl_literal l150, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.___w, r0.z, l150\n"
"itof r3._y__, r4.w\n"
"cmov_logical r3._y__, r4.z, r4.x, r3.y\n"
"iadd r2.___w, r3.y, r2.w\n"
"dcl_literal l151, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r3._yz_, r3.y, l151\n"
"dcl_literal l152, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3._y__, r3.y, l152\n"
"dcl_literal l153, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.__z_, r3.z, l153\n"
"iadd r0.__z_, r3.y, r0.z\n"
"dcl_literal l154, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l154\n"
"dcl_literal l155, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3._y__, l155, r0.z\n"
"dcl_literal l156, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.__z_, l156, r0.z_neg(xyzw)\n"
"dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.___w, r3.y, l157, r2.w\n"
"dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r3._y__, l158, r0.z\n"
"dcl_literal l159, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.__z_, r3.y, l159, r0.z\n"
"dcl_literal l160, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.__z_, r0.z, l160\n"
"ishr r3._y__, r3.z, r0.z\n"
"dcl_literal l161, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l161, r0.z\n"
"cmov_logical r0.__z_, r0.z, r3.y, r2.w\n"
"dcl_literal l162, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r2.x, l162, r0.z\n"
"ior r0.__z_, r4.y, r0.z\n"
"cmov_logical r0.__z_, r3.x, r0.z, r0.w\n"
"dcl_literal l163, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.y, l163\n"
"cmov_logical r0.__z_, r2.y, r0.w, r0.z\n"
"dcl_literal l164, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r0.___w, r0.y, l164\n"
"mul_ieee r0.x___, r0.y, r0.x\n"
"cmov_logical r0._y__, r0.w, r1.x, r0.z\n"
"dcl_literal l165, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"lt r0.__z_, l165, r0.x\n"
"dcl_literal l166, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.x, l166\n"
"dcl_literal l167, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000\n"
"lt r0.x___, r0.x, l167\n"
"dcl_literal l168, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r0.___w, l168, r0.w\n"
"and r0.x_z_, r0.xxzx, r0.w\n"
"dcl_literal l169, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.z, l169, r0.y\n"
"dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l170, r0.y\n"
"dcl_literal l171, 0x00000000, 0x80000000, 0x80000000, 0x00000000\n"
"ine r0._yz_, r1.yywy, l171\n"
"inot r1._y_w, r0.zzzy\n"
"dcl_literal l172, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l173, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"cmov_logical r3, r1.xzzx, l172, l173\n"
"and r2.xy__, r1.ywyy, r3.xwxx\n"
"and r0.___w, r3.z, r2.x\n"
"dcl_literal l174, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.w, l174, r0.x\n"
"and r2.x__w, r0.zzzy, r3.xxxw\n"
"and r0.___w, r3.z, r2.x\n"
"dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.w, l175, r0.x\n"
"dcl_literal l176, 0x7F800000, 0x7F800000, 0x3F800000, 0x00000000\n"
"ilt r4.xyz_, l176, r1.xzxx\n"
"inot r0.___w, r4.x\n"
"dcl_literal l177, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ieq r1.__zw, r1.xxxz, l177\n"
"dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r1.x___, r1.x, l178\n"
"inot r5.xy__, r1.zwzz\n"
"and r0.___w, r0.w, r5.x\n"
"and r2.x___, r2.w, r0.w\n"
"and r0.___w, r4.z, r0.w\n"
"ior r2.___w, r4.y, r4.x\n"
"and r2.x___, r3.y, r2.x\n"
"dcl_literal l179, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l179, r0.x\n"
"ior r2.x___, r3.x, r1.z\n"
"and r2.x___, r3.y, r2.x\n"
"dcl_literal l180, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r2.x, l180, r0.x\n"
"and r1.x___, r0.y, r1.x\n"
"and r2.x___, r5.y, r1.x\n"
"and r1.x___, r1.w, r1.x\n"
"and r2.x___, r3.z, r2.x\n"
"dcl_literal l181, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l181, r0.x\n"
"dcl_literal l182, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r1.x, l182, r0.x\n"
"and r1.x_z_, r0.yyzy, r1.z\n"
"and r0._y__, r1.y, r1.x\n"
"and r1.x___, r3.z, r1.z\n"
"and r0._y__, r3.z, r0.y\n"
"and r1.__z_, r2.z, r3.w\n"
"dcl_literal l183, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.y, l183, r0.x\n"
"and r0._y__, r1.w, r1.z\n"
"and r0.___w, r1.w, r0.w\n"
"and r1.__z_, r1.y, r0.y\n"
"and r0._yz_, r0.z, r0.yywy\n"
"and r0.___w, r1.y, r0.w\n"
"dcl_literal l184, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.z, l184, r0.x\n"
"ior r0._y__, r0.y, r0.w\n"
"dcl_literal l185, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.y, l185, r0.x\n"
"ior r0._y__, r1.x, r0.z\n"
"dcl_literal l186, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.y, l186, r0.x\n"
"ior r0._y__, r2.y, r2.w\n"
"dcl_literal l187, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l187, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__pow_f32",
"mdef(343)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7FFFFFFF, 0x80000000\n"
"and r1, r0.xxyy, l0\n"
"itof r0.__z_, r1.x\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r0.__zw, r0.z, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r0.___w, r0.w, l3\n"
"dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024\n"
"iadd r0.__z_, r0.z, l4\n"
"dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.__z_, l5, r0.z_neg(xyzw)\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r2.x___, l6, r0.z\n"
"dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.__z_, r2.x, l7, r0.z\n"
"inegate r2.x___, r0.z\n"
"dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r2.x, l8\n"
"iadd r2.x___, r0.w, r2.x\n"
"ishr r0.___w, r0.w, r0.z\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, l9, r0.z\n"
"cmov_logical r0.__z_, r0.z, r0.w, r2.x\n"
"dcl_literal l10, 0x00800000, 0x2E800000, 0x3F800000, 0x00000000\n"
"ilt r2.xyz_, r1.xzxx, l10\n"
"cmov_logical r0.__z_, r2.x, r0.z, r1.x\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r0.__zw, r0.z, l11\n"
"dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"ior r0.___w, r0.w, l12\n"
"dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r0.z, l13\n"
"dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.___w, r0.w, l14, l15\n"
"round_z r3.x___, r2.w\n"
"ftoi r2.___w, r2.w\n"
"dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mul_ieee r3._y__, r3.x, l16\n"
"dcl_literal l17, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.__z_, r3.y, l17\n"
"dcl_literal l18, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r3.___w, r3.x, l18, r3.z_neg(xyzw)\n"
"dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"mad_ieee r0.___w, r3.x_neg(xyzw), l19, r0.w\n"
"add r3.x___, r0.w, cb0[1].x\n"
"div_zeroop(infinity) r4.x___, r0.w, r3.y\n"
"add r0.___w, r0.w, r3.x_neg(xyzw)\n"
"dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r4._y__, r4.x, l20\n"
"mad_ieee r3.x___, r4.y, r3.z, r3.x_neg(xyzw)\n"
"mad_ieee r3.x___, r4.y, r3.w, r3.x\n"
"add r4._y__, r4.x, r4.y_neg(xyzw)\n"
"mad_ieee r3.x___, r4.y, r3.z, r3.x\n"
"mad_ieee r3.x___, r4.y, r3.w, r3.x\n"
"add r0.___w, r0.w, r3.x_neg(xyzw)\n"
"div_zeroop(infinity) r0.___w, r0.w, r3.y\n"
"add r3.x___, r4.x, r0.w\n"
"dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000\n"
"dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925\n"
"mad_ieee r3._y__, r4.x_neg(xyzw), l21, l22\n"
"dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l23\n"
"dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD\n"
"mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l24\n"
"dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l25\n"
"dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l26\n"
"dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l27\n"
"mul_ieee r3.__z_, r4.x_neg(xyzw), r4.x\n"
"add r3.___w, r4.x, r3.x_neg(xyzw)\n"
"mad_ieee r4.x___, r3.y, r3.z, r3.x\n"
"add r3.x___, r3.x, r4.x_neg(xyzw)\n"
"mad_ieee r3.x___, r3.y, r3.z, r3.x\n"
"add r0.___w, r0.w, r3.w\n"
"add r0.___w, r3.x, r0.w\n"
"add r3.x___, r4.x, r0.w\n"
"add r3._y__, r4.x, r3.x_neg(xyzw)\n"
"dcl_literal l28, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.__z_, r3.x, l28\n"
"add r3.___w, r3.x, r3.z_neg(xyzw)\n"
"dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mul_ieee r3.x___, r3.x, l29\n"
"dcl_literal l30, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r4.x___, r3.z, l30, r3.x_neg(xyzw)\n"
"dcl_literal l31, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000\n"
"mad_ieee r4.x___, r3.w, l31, r4.x\n"
"dcl_literal l32, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.__z_, r3.z, l32, r4.x\n"
"dcl_literal l33, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296\n"
"mad_ieee r3.__z_, r3.w, l33, r3.z\n"
"add r0.___w, r0.w, r3.y\n"
"dcl_literal l34, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r0.___w, r0.w, l34, r3.z\n"
"add r3._y__, r3.x, r0.w\n"
"add r3.x___, r3.x, r3.y_neg(xyzw)\n"
"add r0.___w, r0.w, r3.x\n"
"dcl_literal l35, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0\n"
"iadd r2.___w, r2.w, l35\n"
"dcl_literal l36, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r3.x___, r2.w, l36\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l38, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD\n"
"cmov_logical r4, r3.x, l37, l38\n"
"dcl_literal l39, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r5, r3.x, l39\n"
"dcl_literal l40, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87\n"
"cmov_logical r4, r5.x, l40, r4\n"
"dcl_literal l41, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597\n"
"cmov_logical r4, r5.y, l41, r4\n"
"dcl_literal l42, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF\n"
"cmov_logical r4, r5.z, l42, r4\n"
"dcl_literal l43, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715\n"
"cmov_logical r4, r5.w, l43, r4\n"
"dcl_literal l44, 0x00000005, 0x00000006, 0x00000007, 0x00000008\n"
"ieq r6, r3.x, l44\n"
"dcl_literal l45, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5\n"
"cmov_logical r4, r6.x, l45, r4\n"
"dcl_literal l46, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998\n"
"cmov_logical r4, r6.y, l46, r4\n"
"dcl_literal l47, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E\n"
"cmov_logical r4, r6.z, l47, r4\n"
"dcl_literal l48, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355\n"
"cmov_logical r4, r6.w, l48, r4\n"
"dcl_literal l49, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C\n"
"ieq r7, r3.x, l49\n"
"dcl_literal l50, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D\n"
"cmov_logical r4, r7.x, l50, r4\n"
"dcl_literal l51, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817\n"
"cmov_logical r4, r7.y, l51, r4\n"
"dcl_literal l52, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0\n"
"cmov_logical r4, r7.z, l52, r4\n"
"dcl_literal l53, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D\n"
"cmov_logical r4, r7.w, l53, r4\n"
"dcl_literal l54, 0x0000000D, 0x0000000E, 0x0000000F, 0x00000000\n"
"ieq r8.xyz_, r3.x, l54\n"
"dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l56, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4\n"
"cmov_logical r9, r3.x, l55, l56\n"
"dcl_literal l57, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999\n"
"cmov_logical r4, r8.x, l57, r4\n"
"dcl_literal l58, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014\n"
"cmov_logical r4, r8.y, l58, r4\n"
"dcl_literal l59, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12\n"
"cmov_logical r4, r8.z, l59, r4\n"
"dcl_literal l60, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"and r3.x___, r2.w, l60\n"
"dcl_literal l61, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"ieq r2.___w, r2.w, l61\n"
"dcl_literal l62, 0x00000001, 0x00000000, 0x00000002, 0x00000003\n"
"ieq r3.x_zw, r3.x, l62\n"
"cmov_logical r4.x___, r3.x, r4.y, r4.x\n"
"cmov_logical r4.x___, r3.z, r4.z, r4.x\n"
"cmov_logical r4.x___, r3.w, r4.w, r4.x\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.x___, r2.w, l63, r4.x\n"
"add r4._y__, r3.y, r4.x\n"
"add r3._y__, r3.y, r4.y_neg(xyzw)\n"
"add r3._y__, r4.x, r3.y\n"
"add r0.___w, r0.w, r3.y\n"
"add r3._y__, r4.y, r0.w\n"
"add r4.x___, r4.y, r3.y_neg(xyzw)\n"
"dcl_literal l64, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F\n"
"cmov_logical r9, r5.x, l64, r9\n"
"dcl_literal l65, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72\n"
"cmov_logical r9, r5.y, l65, r9\n"
"dcl_literal l66, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926\n"
"cmov_logical r9, r5.z, l66, r9\n"
"dcl_literal l67, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B\n"
"cmov_logical r5, r5.w, l67, r9\n"
"dcl_literal l68, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D\n"
"cmov_logical r5, r6.x, l68, r5\n"
"dcl_literal l69, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4\n"
"cmov_logical r5, r6.y, l69, r5\n"
"dcl_literal l70, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E\n"
"cmov_logical r5, r6.z, l70, r5\n"
"dcl_literal l71, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83\n"
"cmov_logical r5, r6.w, l71, r5\n"
"dcl_literal l72, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F\n"
"cmov_logical r5, r7.x, l72, r5\n"
"dcl_literal l73, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7\n"
"cmov_logical r5, r7.y, l73, r5\n"
"dcl_literal l74, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6\n"
"cmov_logical r5, r7.z, l74, r5\n"
"dcl_literal l75, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209\n"
"cmov_logical r5, r7.w, l75, r5\n"
"dcl_literal l76, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6\n"
"cmov_logical r5, r8.x, l76, r5\n"
"dcl_literal l77, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1\n"
"cmov_logical r5, r8.y, l77, r5\n"
"dcl_literal l78, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70\n"
"cmov_logical r5, r8.z, l78, r5\n"
"cmov_logical r3.x___, r3.x, r5.y, r5.x\n"
"cmov_logical r3.x___, r3.z, r5.z, r3.x\n"
"cmov_logical r3.x___, r3.w, r5.w, r3.x\n"
"dcl_literal l79, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r2.___w, r2.w, l79, r3.x\n"
"add r3.x___, r3.y, r2.w\n"
"add r2.___w, r2.w, r3.x_neg(xyzw)\n"
"add r2.___w, r3.y, r2.w\n"
"add r0.___w, r0.w, r4.x\n"
"add r0.___w, r2.w, r0.w\n"
"add r2.___w, r3.x, r0.w\n"
"add r3.x___, r3.x, r2.w_neg(xyzw)\n"
"dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.__z_, r0.z, l80\n"
"dcl_literal l81, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC\n"
"and r2.x___, r2.x, l81\n"
"iadd r0.__z_, r0.z, r2.x\n"
"itof r0.__z_, r0.z\n"
"add r2.x___, r2.w, r0.z\n"
"add r0.__z_, r0.z, r2.x_neg(xyzw)\n"
"add r0.__z_, r2.w, r0.z\n"
"add r0.___w, r0.w, r3.x\n"
"add r0.__z_, r0.z, r0.w\n"
"add r0.___w, r2.x, r0.z\n"
"add r2.x___, r2.x, r0.w_neg(xyzw)\n"
"dcl_literal l82, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r2.___w, r0.w, l82\n"
"mul_ieee r3.x___, r0.w, r0.y\n"
"dcl_literal l83, 0x00000000, 0xFFFFF000, 0x7F800000, 0x00000000\n"
"and r3._yz_, r0.y, l83\n"
"mad_ieee r3.___w, r2.w, r3.y, r3.x_neg(xyzw)\n"
"add r4.x___, r0.y, r3.y_neg(xyzw)\n"
"mad_ieee r3.___w, r2.w, r4.x, r3.w\n"
"add r2.___w, r0.w, r2.w_neg(xyzw)\n"
"mad_ieee r3._y__, r2.w, r3.y, r3.w\n"
"mad_ieee r2.___w, r2.w, r4.x, r3.y\n"
"dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3._y__, r3.z, l84\n"
"add r0.__z_, r0.z, r2.x\n"
"mad_ieee r2.x___, r0.z, r0.y, r2.w\n"
"add r0.__z_, r0.w, r0.z\n"
"add r0.___w, r3.x, r2.x\n"
"add r2.___w, r3.x, r0.w_neg(xyzw)\n"
"add r2.x___, r2.x, r2.w\n"
"add r2.___w, r0.w, r2.x\n"
"round_z r3.x___, r2.w\n"
"ftoi r2.___w, r2.w\n"
"add r3.__z_, r0.w, r3.x_neg(xyzw)\n"
"add r0.___w, r0.w, r3.z_neg(xyzw)\n"
"add r0.___w, r3.x_neg(xyzw), r0.w\n"
"add r0.___w, r2.x, r0.w\n"
"add r2.x___, r3.z, r0.w\n"
"add r3.__z_, r3.z, r2.x_neg(xyzw)\n"
"add r0.___w, r0.w, r3.z\n"
"add r0.___w, r2.x, r0.w\n"
"dcl_literal l85, 0x00000000, 0x00000000, 0x42000000, 0x42000000\n"
"dcl_literal l86, 0x00000000, 0x00000000, 0x3F000000, 0xBF000000\n"
"mad_ieee r3.__zw, r0.w, l85, l86\n"
"ftoi r3.__zw, r3.zzzw\n"
"dcl_literal l87, 0x3F317218, 0x42000000, 0x00000000, 0x00000000\n"
"mul_ieee r4.xy__, r0.w, l87\n"
"dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.x___, l88, r4.y\n"
"cmov_logical r2.x___, r2.x, r3.z, r3.w\n"
"itof r3.__z_, r2.x\n"
"dcl_literal l89, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000\n"
"mad_ieee r3.__z_, r3.z_neg(xyzw), l89, r0.w\n"
"dcl_literal l90, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820\n"
"dcl_literal l91, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3.___w, r3.z, l90, l91\n"
"dcl_literal l92, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mul_ieee r3.__z_, r3.z, l92\n"
"mul_ieee r4._y__, r3.z, r3.z\n"
"mad_ieee r3.__z_, r4.y, r3.w, r3.z\n"
"dcl_literal l93, 0x00000000, 0x0000001F, 0x00000003, 0x00000000\n"
"and r4._yz_, r2.x, l93\n"
"iadd r2.x___, r2.x, r4.y_neg(xyzw)\n"
"dcl_literal l94, 0x00000001, 0x00000002, 0x00000003, 0x00000000\n"
"ieq r5.xyz_, r4.z, l94\n"
"dcl_literal l95, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"ishr r3.___w, r4.y, l95\n"
"dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l97, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000\n"
"cmov_logical r6, r3.w, l96, l97\n"
"dcl_literal l98, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"ieq r7, r3.w, l98\n"
"dcl_literal l99, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000\n"
"cmov_logical r6, r7.x, l99, r6\n"
"dcl_literal l100, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000\n"
"cmov_logical r6, r7.y, l100, r6\n"
"dcl_literal l101, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000\n"
"cmov_logical r6, r7.z, l101, r6\n"
"dcl_literal l102, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000\n"
"cmov_logical r6, r7.w, l102, r6\n"
"dcl_literal l103, 0x00000000, 0x00000005, 0x00000006, 0x00000007\n"
"ieq r4._yzw, r3.w, l103\n"
"dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l105, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404\n"
"cmov_logical r8, r3.w, l104, l105\n"
"dcl_literal l106, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000\n"
"cmov_logical r6, r4.y, l106, r6\n"
"dcl_literal l107, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000\n"
"cmov_logical r6, r4.z, l107, r6\n"
"dcl_literal l108, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000\n"
"cmov_logical r6, r4.w, l108, r6\n"
"cmov_logical r3.___w, r5.x, r6.y, r6.x\n"
"cmov_logical r3.___w, r5.y, r6.z, r3.w\n"
"cmov_logical r3.___w, r5.z, r6.w, r3.w\n"
"dcl_literal l109, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3\n"
"cmov_logical r6, r7.x, l109, r8\n"
"dcl_literal l110, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C\n"
"cmov_logical r6, r7.y, l110, r6\n"
"dcl_literal l111, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607\n"
"cmov_logical r6, r7.z, l111, r6\n"
"dcl_literal l112, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329\n"
"cmov_logical r6, r7.w, l112, r6\n"
"dcl_literal l113, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647\n"
"cmov_logical r6, r4.y, l113, r6\n"
"dcl_literal l114, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D\n"
"cmov_logical r6, r4.z, l114, r6\n"
"dcl_literal l115, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0\n"
"cmov_logical r6, r4.w, l115, r6\n"
"cmov_logical r4._y__, r5.x, r6.y, r6.x\n"
"cmov_logical r4._y__, r5.y, r6.z, r4.y\n"
"cmov_logical r4._y__, r5.z, r6.w, r4.y\n"
"add r4.__z_, r3.w, r4.y\n"
"mad_ieee r3.__z_, r4.z, r3.z, r4.y\n"
"add r3.__z_, r3.w, r3.z\n"
"dcl_literal l116, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r5, r3.z, l116\n"
"dcl_literal l117, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ixor r3.__z_, r2.x, l117\n"
"imax r2.x___, r2.x, r2.x_neg(xyzw)\n"
"dcl_literal l118, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r3.__z_, r3.z, l118\n"
"dcl_literal l119, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"udiv r2.x___, r2.x, l119\n"
"inegate r3.___w, r2.x\n"
"cmov_logical r2.x___, r3.z, r3.w, r2.x\n"
"iadd r2.x___, r2.x, r2.w\n"
"dcl_literal l120, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r2.___w, r2.x, l120\n"
"cmov_logical r2.___w, r5.z, r2.x, r2.w\n"
"itof r2.x___, r2.x\n"
"dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3.__z_, r2.w, l121\n"
"itof r3.___w, r5.w\n"
"cmov_logical r3.___w, r5.z, r5.x, r3.w\n"
"iadd r3.__z_, r3.w, r3.z\n"
"dcl_literal l122, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r4._yz_, r3.w, l122\n"
"dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.___w, r4.y, l123\n"
"dcl_literal l124, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r4._y__, r4.z, l124\n"
"iadd r2.___w, r3.w, r2.w\n"
"dcl_literal l125, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.___w, r2.w, l125\n"
"dcl_literal l126, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3.___w, l126, r2.w\n"
"dcl_literal l127, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.___w, l127, r2.w_neg(xyzw)\n"
"dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r3.__z_, r3.w, l128, r3.z\n"
"dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r3.___w, l129, r2.w\n"
"dcl_literal l130, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2.___w, r3.w, l130, r2.w\n"
"dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r2.___w, r2.w, l131\n"
"ishr r3.___w, r4.y, r2.w\n"
"dcl_literal l132, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.___w, l132, r2.w\n"
"cmov_logical r2.___w, r2.w, r3.w, r3.z\n"
"dcl_literal l133, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r2.x___, l133, r2.x\n"
"dcl_literal l134, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.x___, r2.x, l134, r2.w\n"
"ior r2.x___, r5.y, r2.x\n"
"dcl_literal l135, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x0FFFF000\n"
"and r3.__zw, r0.w, l135\n"
"dcl_literal l136, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r2.___w, r3.w, l136, r4.x_neg(xyzw)\n"
"dcl_literal l137, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r2.___w, r3.w, l137, r2.w\n"
"add r3.___w, r0.w, r3.w_neg(xyzw)\n"
"dcl_literal l138, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B\n"
"lt r3.__z_, r3.z, l138\n"
"dcl_literal l139, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r2.___w, r3.w, l139, r2.w\n"
"dcl_literal l140, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E\n"
"mad_ieee r2.___w, r3.w, l140, r2.w\n"
"dcl_literal l141, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"mad_ieee r0.___w, r0.w, l141, r2.w\n"
"dcl_literal l142, 0x00000000, 0x34904540, 0x3A1BECC5, 0x00000000\n"
"dcl_literal l143, 0x00000000, 0x3CC2F57D, 0xBC42EEB9, 0x00000000\n"
"mad_ieee r4._yz_, r0.w, l142, l143\n"
"dcl_literal l144, 0x00000000, 0x37874471, 0x3DDB50CA, 0x00000000\n"
"mad_ieee r4._yz_, r4.yyzy, r0.w, l144\n"
"dcl_literal l145, 0x00000000, 0x3F7FE378, 0xBEFFE15B, 0x00000000\n"
"mad_ieee r4._yz_, r4.yyzy, r0.w, l145\n"
"dcl_literal l146, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378\n"
"mad_ieee r0.___w, r4.z, r0.w, l146\n"
"div_zeroop(infinity) r0.___w, r4.y, r0.w\n"
"mul_ieee r2.___w, r2.w, r0.w\n"
"mad_ieee r0.___w, r0.w, r4.x, r2.w\n"
"dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.w, l147\n"
"dcl_literal l148, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r4, r0.w, l148\n"
"ftoi r0.___w, r3.x\n"
"dcl_literal l149, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r2.___w, l149, r3.x\n"
"dcl_literal l150, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r3.x___, r0.w, l150\n"
"cmov_logical r0.___w, r4.z, r0.w, r3.x\n"
"dcl_literal l151, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3.x___, r0.w, l151\n"
"itof r3.___w, r4.w\n"
"cmov_logical r3.___w, r4.z, r4.x, r3.w\n"
"iadd r3.x___, r3.w, r3.x\n"
"dcl_literal l152, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r4.x_z_, r3.w, l152\n"
"dcl_literal l153, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.___w, r4.x, l153\n"
"dcl_literal l154, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r4.x___, r4.z, l154\n"
"iadd r0.___w, r3.w, r0.w\n"
"dcl_literal l155, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l155\n"
"dcl_literal l156, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r3.___w, l156, r0.w\n"
"dcl_literal l157, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.___w, l157, r0.w_neg(xyzw)\n"
"dcl_literal l158, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r3.x___, r3.w, l158, r3.x\n"
"dcl_literal l159, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r3.___w, l159, r0.w\n"
"dcl_literal l160, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.___w, r3.w, l160, r0.w\n"
"dcl_literal l161, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.___w, r0.w, l161\n"
"ishr r3.___w, r4.x, r0.w\n"
"dcl_literal l162, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l162, r0.w\n"
"cmov_logical r0.___w, r0.w, r3.w, r3.x\n"
"dcl_literal l163, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.___w, r2.w, l163, r0.w\n"
"ior r0.___w, r4.y, r0.w\n"
"cmov_logical r0.___w, r3.z, r0.w, r2.x\n"
"dcl_literal l164, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.x___, r0.y, l164\n"
"cmov_logical r0.___w, r2.y, r2.x, r0.w\n"
"dcl_literal l165, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r2.x___, r0.y, l165\n"
"cmov_logical r0.___w, r2.x, r1.x, r0.w\n"
"mul_ieee r0._y__, r0.y, r0.z\n"
"dcl_literal l166, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"lt r0.__z_, l166, r0.y\n"
"dcl_literal l167, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r2.x___, r0.y, l167\n"
"dcl_literal l168, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000\n"
"lt r0._y__, r0.y, l168\n"
"dcl_literal l169, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r2.x___, l169, r2.x\n"
"and r0._yz_, r0.yyzy, r2.x\n"
"dcl_literal l170, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r0.z, l170, r0.w\n"
"dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.y, l171, r0.z\n"
"round_neginf r0.__z_, r1.z\n"
"ne r0.___w, r0.z, r1.z\n"
"eq r0.__z_, r0.z, r1.z\n"
"dcl_literal l172, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"lt r2.x___, r1.z, l172\n"
"ior r0.___w, r0.w, r2.x\n"
"dcl_literal l173, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r2.x___, r3.y, l173\n"
"dcl_literal l174, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ige r2.x___, l174, r2.x\n"
"dcl_literal l175, 0x7F800000, 0x7F800000, 0x3F800000, 0x00000000\n"
"ilt r3.xyz_, l175, r1.xzxx\n"
"inot r2._y_w, r3.xxxy\n"
"dcl_literal l176, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"ieq r4.xy__, r1.xzxx, l176\n"
"inot r4.__zw, r4.xxxy\n"
"and r2._y_w, r2.yyyw, r4.zzzw\n"
"and r2.x___, r2.x, r2.w\n"
"and r0.__zw, r0.zzzw, r2.x\n"
"dcl_literal l177, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"dcl_literal l178, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"cmov_logical r0.___w, r0.w, l177, l178\n"
"dcl_literal l179, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r2.x___, r1.z, l179\n"
"frc r2.x___, r2.x\n"
"dcl_literal l180, 0x3DCCCCCD, 0x3DCCCCCD, 0x3DCCCCCD, 0x3DCCCCCD\n"
"lt r3.___w, l180, r2.x\n"
"dcl_literal l181, 0x3A83126F, 0x3A83126F, 0x3A83126F, 0x3A83126F\n"
"lt r2.x___, r2.x, l181\n"
"and r3.___w, r0.z, r3.w\n"
"dcl_literal l182, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r3.w, l182, r0.w\n"
"dcl_literal l183, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ge r3.___w, r1.z, l183\n"
"and r0.__z_, r0.z, r3.w\n"
"and r0.__z_, r2.x, r0.z\n"
"dcl_literal l184, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"cmov_logical r0.__z_, r0.z, l184, r0.w\n"
"dcl_literal l185, 0x00000001, 0x00000000, 0x00000002, 0x00000000\n"
"ieq r5.xyz_, r0.z, l185\n"
"dcl_literal l186, 0x00000000, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF\n"
"dcl_literal l187, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF, 0x00000000\n"
"cmov_logical r6, r1.xxzz, l186, l187\n"
"dcl_literal l188, 0x00000000, 0x00000000, 0x80000000, 0x80000000\n"
"ine r0.__zw, r1.yyyw, l188\n"
"dcl_literal l189, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"eq r1.x___, r1.x, l189\n"
"inot r1._yz_, r0.zzwz\n"
"and r4.__zw, r6.yyyx, r1.y\n"
"and r1.___w, r2.w, r4.z\n"
"and r2.x___, r6.w, r4.w\n"
"and r1.___w, r5.x, r1.w\n"
"cmov_logical r0._y__, r1.w, r0.y_neg(xyzw), r0.y\n"
"and r1.___w, r6.x, r0.z\n"
"and r1.___w, r6.w, r1.w\n"
"and r1.___w, r5.x, r1.w\n"
"and r1.___w, r1.z, r1.w\n"
"dcl_literal l190, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r1.w, l190, r0.y\n"
"and r1.___w, r5.x, r2.x\n"
"and r1.___w, r1.z, r1.w\n"
"dcl_literal l191, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0._y__, r1.w, l191, r0.y\n"
"ior r1.___w, r5.z, r5.y\n"
"and r2.x___, r6.w, r6.x\n"
"and r2.x___, r1.w, r2.x\n"
"and r3.___w, r1.z, r2.x\n"
"and r2.x___, r0.w, r2.x\n"
"dcl_literal l192, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r3.w, l192, r0.y\n"
"and r3.___w, r2.w, r6.x\n"
"and r3.___w, r6.w, r3.w\n"
"and r3.___w, r5.x, r3.w\n"
"and r3.___w, r0.w, r3.w\n"
"cmov_logical r0.x___, r3.w, r0.x, r0.y\n"
"dcl_literal l193, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r2.x, l193, r0.x\n"
"and r0._y__, r0.z, r1.x\n"
"and r1.x___, r1.x, r1.y\n"
"ior r2.x___, r6.z, r0.y\n"
"inot r0._y__, r0.y\n"
"dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r2.x, l194, r0.x\n"
"and r2.x___, r4.x, r1.y\n"
"and r2.x___, r6.w, r2.x\n"
"and r3.___w, r5.x, r2.x\n"
"and r1.___w, r1.w, r2.x\n"
"and r2.x___, r1.z, r3.w\n"
"and r3.___w, r0.w, r3.w\n"
"dcl_literal l195, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.x___, r2.x, l195, r0.x\n"
"dcl_literal l196, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"cmov_logical r0.x___, r3.w, l196, r0.x\n"
"and r2.x___, r1.z, r1.w\n"
"and r1.___w, r0.w, r1.w\n"
"dcl_literal l197, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r2.x, l197, r0.x\n"
"dcl_literal l198, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.w, l198, r0.x\n"
"and r0.__z_, r4.x, r0.z\n"
"and r0.__z_, r6.w, r0.z\n"
"and r1.___w, r1.z, r0.z\n"
"and r0.__z_, r0.w, r0.z\n"
"dcl_literal l199, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r1.w, l199, r0.x\n"
"dcl_literal l200, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.z, l200, r0.x\n"
"and r0.__z_, r4.y, r1.x\n"
"dcl_literal l201, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r0.z, l201, r0.x\n"
"and r0.__z_, r2.z, r6.y\n"
"and r0.__z_, r4.y, r0.z\n"
"and r1.x___, r1.z, r0.z\n"
"and r0.__z_, r0.w, r0.z\n"
"dcl_literal l202, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r1.x, l202, r0.x\n"
"and r1.x___, r3.z, r2.y\n"
"and r1.x___, r4.y, r1.x\n"
"and r1.__z_, r1.z, r1.x\n"
"and r0.___w, r0.w, r1.x\n"
"and r1.x___, r2.y, r1.y\n"
"ior r0.__z_, r0.z, r1.z\n"
"dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l203, r0.x\n"
"and r0._y__, r3.y, r0.y\n"
"and r0.__z_, r3.x, r6.w\n"
"ior r0._y__, r0.y, r0.z\n"
"and r0.__z_, r6.y, r1.x\n"
"and r0.__z_, r6.w, r0.z\n"
"and r0.__z_, r2.w, r0.z\n"
"and r0.__z_, r5.y, r0.z\n"
"ior r0._y__, r0.y, r0.z\n"
"dcl_literal l204, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.x___, r0.w, l204, r0.x\n"
"dcl_literal l205, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l205, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__radians_f32",
"mdef(344)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x3C8EFA35, 0x3F800000, 0x00000000, 0x00000000\n"
"mul_ieee r0.x___, r0.x, l0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__reciprocal_f32",
"mdef(345)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r1.x___, r0.x\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x41E00000, 0x00000000\n"
"mov r0.__zw, l0\n"
"dcl_literal l1, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF\n"
"and r2, r1.x, l1\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1._y__, r2.x, l2\n"
"dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r1.__z_, r2.x, l3\n"
"and r1._y__, r1.y, r1.z\n"
"dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r2.y, l4\n"
"dcl_literal l5, 0xFFFFFF81, 0xFFFFFF9D, 0x00000000, 0x00000000\n"
"iadd r0.xy__, r1.z, l5\n"
"cmov_logical r0.xy__, r1.y, r0.yzyy, r0.xwxx\n"
"dcl_literal l6, 0x41600000, 0x41600000, 0x41600000, 0x41600000\n"
"dcl_literal l7, 0xC1600000, 0xC1600000, 0xC1600000, 0xC1600000\n"
"cmov_logical r0.__z_, r1.y, l6, l7\n"
"dcl_literal l8, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r0.___w, l8, r0.x\n"
"dcl_literal l9, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r0.x___, l9, r0.x\n"
"and r0.x___, r0.w, r0.x\n"
"cmov_logical r0.x___, r0.x, r0.z, r0.y\n"
"ftoi r0._y__, r0.x\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0.x___, r0.x, l10\n"
"dcl_literal l11, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"iadd r0.__z_, r0.y, l11\n"
"cmov_logical r0.___w, r2.y, r0.y, r0.z\n"
"dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1._y__, r0.w, l12\n"
"itof r1.__z_, r2.w\n"
"cmov_logical r1.__z_, r2.y, r2.x, r1.z\n"
"iadd r1._y__, r1.z, r1.y\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r1.__zw, r1.z, l13\n"
"dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r1.z, l14\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l15\n"
"iadd r0.___w, r1.z, r0.w\n"
"dcl_literal l16, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r0.w, l16\n"
"dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.__z_, l17, r0.w\n"
"dcl_literal l18, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0.___w, l18, r0.w_neg(xyzw)\n"
"dcl_literal l19, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1._y__, r1.z, l19, r1.y\n"
"dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.__z_, l20, r0.w\n"
"dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0.___w, r1.z, l21, r0.w\n"
"dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.___w, r0.w, l22\n"
"ishr r1.__z_, r1.w, r0.w\n"
"dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l23, r0.w\n"
"cmov_logical r0.___w, r0.w, r1.z, r1.y\n"
"ior r0.___w, r2.z, r0.w\n"
"cmov_logical r0.___w, r0.x, r0.w, r1.x\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.___w, l24, r0.w\n"
"dcl_literal l25, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r1, r0.w, l25\n"
"cmov_logical r0._y__, r1.z, r0.y, r0.z\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r0.__z_, r0.y, l26\n"
"itof r1.___w, r1.w\n"
"cmov_logical r1.__z_, r1.z, r1.x, r1.w\n"
"iadd r0.__z_, r1.z, r0.z\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r1.__zw, r1.z, l27\n"
"dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.__z_, r1.z, l28\n"
"dcl_literal l29, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r1.w, l29\n"
"iadd r0._y__, r1.z, r0.y\n"
"dcl_literal l30, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0._y__, r0.y, l30\n"
"dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ilt r1.__z_, l31, r0.y\n"
"dcl_literal l32, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"iadd r0._y__, l32, r0.y_neg(xyzw)\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r1.z, l33, r0.z\n"
"dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r1.__z_, l34, r0.y\n"
"dcl_literal l35, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r0._y__, r1.z, l35, r0.y\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0._y__, r0.y, l36\n"
"ishr r1.__z_, r1.w, r0.y\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0._y__, l37, r0.y\n"
"cmov_logical r0._y__, r0.y, r1.z, r0.z\n"
"ior r0._y__, r1.y, r0.y\n"
"dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, r1.x, l38\n"
"and r0.x___, r0.x, r0.z\n"
"cmov_logical r0.x___, r0.x, r0.y, r0.w\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__remainder_f32",
"mdef(346)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x7F800000\n"
"and r1, r0.xyxy, l0\n"
"dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__z_, r1.w, l1\n"
"dcl_literal l2, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ilt r0.___w, r0.z, l2\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.___w, r1.y, l3\n"
"and r0.___w, r0.w, r1.w\n"
"dcl_literal l4, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"iadd r0.__z_, l4, r0.z_neg(xyzw)\n"
"and r0.__z_, r0.w, r0.z\n"
"itof r0.___w, r0.z\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r2.x___, r0.w, l5\n"
"if_logicalnz r2.x\n"
"   \n"
"    dcl_literal l6, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF\n"
"    and r2._yzw, r0.y, l6\n"
"    itof r2.___w, r2.w\n"
"    cmov_logical r2._y__, r2.z, r2.y, r2.w\n"
"   \n"
"    dcl_literal l7, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.___w, r0.z, l7\n"
"    cmov_logical r2.__z_, r2.z, r0.z, r2.w\n"
"   \n"
"    dcl_literal l8, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r3.xy__, r2.y, l8\n"
"   \n"
"    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r3.x, l9\n"
"    iadd r2.___w, r2.w, r2.z\n"
"   \n"
"    dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.__z_, r2.z, l10\n"
"    iadd r2._y__, r2.y, r2.z\n"
"   \n"
"    dcl_literal l11, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.__z_, r2.w, l11\n"
"   \n"
"    dcl_literal l12, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.___w, l12, r2.z\n"
"   \n"
"    dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2._y__, r2.w, l13, r2.y\n"
"   \n"
"    dcl_literal l14, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.__z_, l14, r2.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r3.y, l15\n"
"   \n"
"    dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.x___, l16, r2.z\n"
"   \n"
"    dcl_literal l17, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.__z_, r3.x, l17, r2.z\n"
"   \n"
"    dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.__z_, r2.z, l18\n"
"    ishr r2.___w, r2.w, r2.z\n"
"   \n"
"    dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, l19, r2.z\n"
"    cmov_logical r2._y__, r2.z, r2.w, r2.y\n"
"else\n"
"    mov r2._y__, r1.y\n"
"endif\n"
"dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.__z_, r2.y, l20\n"
"dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.z, l21\n"
"dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r2.___w, r0.x, l22\n"
"dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.___w, r2.w, l23\n"
"ige r3.x___, r2.z, r2.w\n"
"iadd r2.__z_, r2.w, r2.z_neg(xyzw)\n"
"itof r2.__z_, r2.z\n"
"dcl_literal l24, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"mul_ieee r2.__z_, r2.z, l24\n"
"round_neginf r2.__z_, r2.z\n"
"dcl_literal l25, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r3.x, l25, r2.z\n"
"ftoi r2.___w, r2.z\n"
"dcl_literal l26, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"imul r3.x___, r2.w, l26\n"
"dcl_literal l27, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r3.x___, r3.x, l27\n"
"dcl_literal l28, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"imad r3._y__, r2.w, l28, r3.x_neg(xyzw)\n"
"dcl_literal l29, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r3.x___, r3.x, l29\n"
"dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3.x___, r3.x, l30\n"
"mul_ieee r3.x___, r2.y, r3.x\n"
"dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r3._y__, r3.y, l31\n"
"dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3._y__, r3.y, l32\n"
"mul_ieee r3.x___, r3.x, r3.y\n"
"dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r2.__z_, r2.z, l33\n"
"cmov_logical r2._y__, r2.z, r2.y, r3.x\n"
"dcl_literal l34, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"dcl_literal l35, 0x39800000, 0x39800000, 0x39800000, 0x39800000\n"
"cmov_logical r2.__z_, r2.z, l34, l35\n"
"dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.x___, r2.y, l36\n"
"dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r3.x, l37\n"
"dcl_literal l38, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r3.x___, r3.x, l38\n"
"dcl_literal l39, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3._y__, r2.y, l39\n"
"dcl_literal l40, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r3.__z_, l40, r3.x\n"
"dcl_literal l41, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r3.x___, l41, r3.x\n"
"and r3.x___, r3.z, r3.x\n"
"dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3.__z_, r3.x, l42\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.___w, l43, r2.w\n"
"and r3.x___, r3.x, r3.w\n"
"cmov_logical r3.x___, r3.x, r3.y, r2.y\n"
"mov r3._y__, r1.x\n"
"mov r3.___w, r3.x\n"
"dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r4.x___, l44\n"
"mov r4._y__, r2.y\n"
"mov r4.__z_, r3.z\n"
"whileloop\n"
"    ige r4.___w, r4.x, r2.w\n"
"    break_logicalnz r4.w\n"
"    div_zeroop(infinity) r4.___w, r3.y, r3.w\n"
"   \n"
"    dcl_literal l45, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"    mul_ieee r5.x___, r4.w, l45\n"
"    cmov_logical r4.___w, r4.z, r5.x, r4.w\n"
"    round_neginf r4.___w, r4.w\n"
"   \n"
"    dcl_literal l46, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r5.x___, r4.y, l46\n"
"    add r5._y__, r4.y, r5.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l47, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r5.__z_, r4.w, l47\n"
"    add r5.___w, r4.w, r5.z_neg(xyzw)\n"
"    mul_ieee r4.___w, r4.y, r4.w\n"
"    mad_ieee r6.x___, r5.x, r5.z, r4.w_neg(xyzw)\n"
"    mad_ieee r5.x___, r5.x, r5.w, r6.x\n"
"    mad_ieee r5.x___, r5.y, r5.z, r5.x\n"
"    mad_ieee r5.x___, r5.y, r5.w, r5.x\n"
"    add r5._y__, r3.y, r4.w_neg(xyzw)\n"
"    add r5.__z_, r3.y, r5.y_neg(xyzw)\n"
"    add r4.___w, r4.w_neg(xyzw), r5.z\n"
"    add r4.___w, r5.x_neg(xyzw), r4.w\n"
"    add r4.___w, r5.y, r4.w\n"
"   \n"
"    dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r5.x___, r4.w, l48\n"
"    add r5._y__, r4.y, r4.w\n"
"    cmov_logical r4.___w, r5.x, r5.y, r4.w\n"
"   \n"
"    dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r5.x___, r4.w, l49\n"
"    add r5._y__, r4.y, r4.w\n"
"    cmov_logical r4.___w, r5.x, r5.y, r4.w\n"
"    ge r5.x___, r4.w, r4.y\n"
"    add r5._y__, r4.y_neg(xyzw), r4.w\n"
"    cmov_logical r3._y__, r5.x, r5.y, r4.w\n"
"    mul_ieee r4._y__, r2.z, r4.y\n"
"   \n"
"    dcl_literal l50, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    iadd r4.x___, r4.x, l50\n"
"    mov r3.___w, r4.y\n"
"   \n"
"    dcl_literal l51, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r4.__z_, l51\n"
"endloop\n"
"mov r2._yzw, r3.wwyw\n"
"dcl_literal l52, 0x7F800000, 0x7F800000, 0xFFFFF000, 0x00000000\n"
"and r3.xyz_, r2.zwyz, l52\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.xy__, r3.xyxx, l53\n"
"dcl_literal l54, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2.___w, r3.y, l54\n"
"dcl_literal l55, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3._y__, r2.y, l55\n"
"dcl_literal l56, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r3.___w, l56, r2.w\n"
"dcl_literal l57, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r2.___w, l57, r2.w\n"
"and r2.___w, r3.w, r2.w\n"
"cmov_logical r3._y__, r2.w, r3.y, r2.y\n"
"div_zeroop(infinity) r3._y__, r2.z, r3.y\n"
"dcl_literal l58, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3.___w, r3.y, l58\n"
"cmov_logical r2.___w, r2.w, r3.w, r3.y\n"
"round_neginf r2.___w, r2.w\n"
"add r3._y__, r2.y, r3.z_neg(xyzw)\n"
"dcl_literal l59, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.___w, r2.w, l59\n"
"add r4.x___, r2.w, r3.w_neg(xyzw)\n"
"mul_ieee r4._y__, r2.y, r2.w\n"
"mad_ieee r4.__z_, r3.z, r3.w, r4.y_neg(xyzw)\n"
"mad_ieee r3.__z_, r3.z, r4.x, r4.z\n"
"mad_ieee r3.__z_, r3.y, r3.w, r3.z\n"
"mad_ieee r3._y__, r3.y, r4.x, r3.z\n"
"add r3.__z_, r2.z, r4.y_neg(xyzw)\n"
"add r3.___w, r2.z, r3.z_neg(xyzw)\n"
"add r3.___w, r4.y_neg(xyzw), r3.w\n"
"add r3._y__, r3.y_neg(xyzw), r3.w\n"
"add r3._y__, r3.z, r3.y\n"
"ftoi r3.__z_, r2.w\n"
"dcl_literal l60, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, r3.y, l60\n"
"add r4.x___, r2.y, r3.y\n"
"dcl_literal l61, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4._y__, r3.z, l61\n"
"cmov_logical r3._yz_, r2.w, r4.xxyx, r3.yyzy\n"
"dcl_literal l62, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, r3.y, l62\n"
"add r4.x___, r2.y, r3.y\n"
"dcl_literal l63, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4._y__, r3.z, l63\n"
"cmov_logical r3._yz_, r2.w, r4.xxyx, r3.yyzy\n"
"ge r2.___w, r3.y, r2.y\n"
"add r4.x___, r2.y_neg(xyzw), r3.y\n"
"dcl_literal l64, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r4._y__, r3.z, l64\n"
"cmov_logical r3._yz_, r2.w, r4.xxyx, r3.yyzy\n"
"cmov_logical r2.__z_, r3.x, r3.y, r2.z\n"
"dcl_literal l65, 0x41F00000, 0x41F00000, 0x41F00000, 0x41F00000\n"
"lt r0.___w, l65, r0.w\n"
"ishl r0.__z_, r3.z, r0.z\n"
"dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r0.w, l66, r0.z\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r2.z, l67\n"
"and r0.___w, r2.x, r0.w\n"
"if_logicalnz r0.w\n"
"   \n"
"    dcl_literal l68, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF\n"
"    and r3, r2.z, l68\n"
"   \n"
"    dcl_literal l69, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ior r0.___w, r3.x, l69\n"
"   \n"
"    dcl_literal l70, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r0.___w, r0.w, l70\n"
"   \n"
"    dcl_literal l71, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.___w, r0.w, l71\n"
"   \n"
"    dcl_literal l72, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    iadd r0.___w, l72, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.___w, r0.w, l73\n"
"   \n"
"    dcl_literal l74, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ushr r0.___w, r0.w, l74\n"
"   \n"
"    dcl_literal l75, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    cmov_logical r0.___w, r3.x, r0.w, l75\n"
"   \n"
"    dcl_literal l76, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0.___w, r0.w_neg(xyzw), l76\n"
"   \n"
"    dcl_literal l77, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r2.x___, r3.x, l77\n"
"   \n"
"    dcl_literal l78, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ine r2.___w, r3.x, l78\n"
"    and r2.x___, r2.x, r2.w\n"
"   \n"
"    dcl_literal l79, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r3.y, l79\n"
"   \n"
"    dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.___w, r2.w, l80\n"
"    cmov_logical r0.___w, r2.x, r0.w, r2.w\n"
"   \n"
"    dcl_literal l81, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r4.xyz_, r0.y, l81\n"
"   \n"
"    dcl_literal l82, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ior r0._y__, r4.x, l82\n"
"   \n"
"    dcl_literal l83, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r0._y__, r0.y, l83\n"
"   \n"
"    dcl_literal l84, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0._y__, r0.y, l84\n"
"   \n"
"    dcl_literal l85, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    iadd r0._y__, l85, r0.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l86, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0._y__, r0.y, l86\n"
"   \n"
"    dcl_literal l87, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ushr r0._y__, r0.y, l87\n"
"   \n"
"    dcl_literal l88, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    cmov_logical r0._y__, r4.x, r0.y, l88\n"
"   \n"
"    dcl_literal l89, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0._y__, r0.y_neg(xyzw), l89\n"
"   \n"
"    dcl_literal l90, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r2.x___, r4.x, l90\n"
"   \n"
"    dcl_literal l91, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ine r2.___w, r4.x, l91\n"
"    and r2.x___, r2.x, r2.w\n"
"   \n"
"    dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r4.y, l92\n"
"   \n"
"    dcl_literal l93, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.___w, r2.w, l93\n"
"    cmov_logical r0._y__, r2.x, r0.y, r2.w\n"
"    inegate r2.x___, r0.y\n"
"    itof r2.___w, r2.x\n"
"    itof r4.__z_, r4.z\n"
"    cmov_logical r4.x___, r4.y, r4.x, r4.z\n"
"   \n"
"    dcl_literal l94, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r4.__z_, r2.x, l94\n"
"    cmov_logical r4.__z_, r4.y, r2.x, r4.z\n"
"   \n"
"    dcl_literal l95, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r5.xy__, r4.x, l95\n"
"   \n"
"    dcl_literal l96, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4.___w, r5.x, l96\n"
"   \n"
"    dcl_literal l97, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4.___w, r4.w, l97\n"
"   \n"
"    dcl_literal l98, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r5.x___, r4.z, l98\n"
"    iadd r5.x___, r4.x, r5.x\n"
"    iadd r4.__z_, r4.w, r4.z\n"
"   \n"
"    dcl_literal l99, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r5.__z_, l99, r4.z\n"
"   \n"
"    dcl_literal l100, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r5.x___, r5.z, l100, r5.x\n"
"   \n"
"    dcl_literal l101, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r4.__z_, l101, r4.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l102, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r5._y__, r5.y, l102\n"
"   \n"
"    dcl_literal l103, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r5.__z_, l103, r4.z\n"
"   \n"
"    dcl_literal l104, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r4.__z_, r5.z, l104, r4.z\n"
"   \n"
"    dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r4.__z_, r4.z, l105\n"
"    ishr r5.__z_, r5.y, r4.z\n"
"   \n"
"    dcl_literal l106, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.__z_, l106, r4.z\n"
"    cmov_logical r4.__z_, r4.z, r5.z, r5.x\n"
"   \n"
"    dcl_literal l107, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r2.___w, l107, r2.w\n"
"   \n"
"    dcl_literal l108, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.___w, r2.w, l108, r4.z\n"
"    inegate r4.__z_, r0.w\n"
"    itof r5.x___, r4.z\n"
"    itof r3.___w, r3.w\n"
"    cmov_logical r3.x___, r3.y, r3.x, r3.w\n"
"   \n"
"    dcl_literal l109, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r3.___w, r4.z, l109\n"
"    cmov_logical r3._y__, r3.y, r4.z, r3.w\n"
"   \n"
"    dcl_literal l110, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"    and r5.__zw, r3.x, l110\n"
"   \n"
"    dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.___w, r5.z, l111\n"
"    iadd r3.___w, r3.w, r3.y\n"
"   \n"
"    dcl_literal l112, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3._y__, r3.y, l112\n"
"    iadd r3.x___, r3.x, r3.y\n"
"   \n"
"    dcl_literal l113, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3._y__, r3.w, l113\n"
"   \n"
"    dcl_literal l114, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.___w, l114, r3.y\n"
"   \n"
"    dcl_literal l115, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r3.x___, r3.w, l115, r3.x\n"
"   \n"
"    dcl_literal l116, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3._y__, l116, r3.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l117, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.___w, r5.w, l117\n"
"   \n"
"    dcl_literal l118, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l118, r3.y\n"
"   \n"
"    dcl_literal l119, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3._y__, r4.z, l119, r3.y\n"
"   \n"
"    dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r3._y__, r3.y, l120\n"
"    ishr r3.___w, r3.w, r3.y\n"
"   \n"
"    dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3._y__, l121, r3.y\n"
"    cmov_logical r3.x___, r3.y, r3.w, r3.x\n"
"   \n"
"    dcl_literal l122, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r3._y__, l122, r5.x\n"
"   \n"
"    dcl_literal l123, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r3.x___, r3.y, l123, r3.x\n"
"    ior r3.x___, r3.z, r3.x\n"
"    iadd r0.___w, r0.w, r2.x\n"
"    mov r3._y__, r3.x\n"
"   \n"
"    dcl_literal l124, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r3.__z_, l124\n"
"    mov r2.x___, r0.w\n"
"    whileloop\n"
"       \n"
"        dcl_literal l125, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ige r3.___w, l125, r2.x\n"
"        break_logicalnz r3.w\n"
"       \n"
"        dcl_literal l126, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r3.___w, r3.z, l126\n"
"        ge r4.__z_, r3.y, r2.w\n"
"        add r5.x___, r2.w_neg(xyzw), r3.y\n"
"        cmov_logical r5.x___, r4.z, r5.x, r3.y\n"
"       \n"
"        dcl_literal l127, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r5.__z_, r3.w, l127\n"
"        cmov_logical r3.__z_, r4.z, r5.z, r3.w\n"
"        add r3._y__, r5.x, r5.x\n"
"       \n"
"        dcl_literal l128, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r2.x___, r2.x, l128\n"
"    endloop\n"
"   \n"
"    dcl_literal l129, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    ishl r2.x___, r3.z, l129\n"
"    ge r3.x___, r3.y, r2.w\n"
"    add r2.___w, r2.w_neg(xyzw), r3.y\n"
"    cmov_logical r2.___w, r3.x, r2.w, r3.y\n"
"   \n"
"    dcl_literal l130, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    iadd r3._y__, r2.x, l130\n"
"    cmov_logical r2.x___, r3.x, r3.y, r2.x\n"
"    itof r3.x___, r0.y\n"
"   \n"
"    dcl_literal l131, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r6, r2.w, l131\n"
"    itof r2.___w, r6.w\n"
"    cmov_logical r2.___w, r6.z, r6.x, r2.w\n"
"   \n"
"    dcl_literal l132, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r3._y__, r0.y, l132\n"
"    cmov_logical r0._y__, r6.z, r0.y, r3.y\n"
"   \n"
"    dcl_literal l133, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3._yz_, r2.w, l133\n"
"   \n"
"    dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l134\n"
"    iadd r3._y__, r3.y, r0.y\n"
"   \n"
"    dcl_literal l135, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l135\n"
"    iadd r0._y__, r2.w, r0.y\n"
"   \n"
"    dcl_literal l136, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.___w, r3.y, l136\n"
"   \n"
"    dcl_literal l137, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3._y__, l137, r2.w\n"
"   \n"
"    dcl_literal l138, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r3.y, l138, r0.y\n"
"   \n"
"    dcl_literal l139, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.___w, l139, r2.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l140, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.z, l140\n"
"   \n"
"    dcl_literal l141, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.__z_, l141, r2.w\n"
"   \n"
"    dcl_literal l142, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.___w, r3.z, l142, r2.w\n"
"   \n"
"    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.___w, r2.w, l143\n"
"    ishr r3._y__, r3.y, r2.w\n"
"   \n"
"    dcl_literal l144, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.___w, l144, r2.w\n"
"    cmov_logical r0._y__, r2.w, r3.y, r0.y\n"
"   \n"
"    dcl_literal l145, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r2.___w, l145, r3.x\n"
"   \n"
"    dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r2.w, l146, r0.y\n"
"    ior r0._y__, r6.y, r0.y\n"
"   \n"
"    dcl_literal l147, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ige r0.___w, r0.w, l147\n"
"    cmov_logical r2.__z_, r0.w, r0.y, r2.z\n"
"    and r0._y__, r2.x, r0.w\n"
"    iadd r0.__z_, r0.z, r0.y\n"
"   \n"
"    dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0._y__, r2.z, l148\n"
"   \n"
"    dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0._y__, r0.y, l149\n"
"   \n"
"    dcl_literal l150, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    ilt r0._y__, r0.y, l150\n"
"    if_logicalnz r0.y\n"
"       \n"
"        dcl_literal l151, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"        and r3, r2.z, l151\n"
"        itof r0._y__, r3.w\n"
"        cmov_logical r0._y__, r3.z, r3.x, r0.y\n"
"       \n"
"        dcl_literal l152, 0x00000030, 0x00000000, 0x00000000, 0x18000000\n"
"       \n"
"        dcl_literal l153, 0xFFFFFF9B, 0x00000000, 0x00000000, 0xCD800000\n"
"        cmov_logical r2.x__w, r3.z, l152, l153\n"
"       \n"
"        dcl_literal l154, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"        and r3.x_z_, r0.y, l154\n"
"       \n"
"        dcl_literal l155, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.___w, r3.x, l155\n"
"        iadd r0._y_w, r0.yyyw, r2.wwwx\n"
"       \n"
"        dcl_literal l156, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"        iadd r0.___w, r0.w, l156\n"
"       \n"
"        dcl_literal l157, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2.x___, l157, r0.w\n"
"       \n"
"        dcl_literal l158, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r0._y__, r2.x, l158, r0.y\n"
"       \n"
"        dcl_literal l159, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r0.___w, l159, r0.w_neg(xyzw)\n"
"       \n"
"        dcl_literal l160, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.x___, r3.z, l160\n"
"       \n"
"        dcl_literal l161, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.___w, l161, r0.w\n"
"       \n"
"        dcl_literal l162, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0.___w, r2.w, l162, r0.w\n"
"       \n"
"        dcl_literal l163, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        imax r0.___w, r0.w, l163\n"
"        ishr r2.x___, r2.x, r0.w\n"
"       \n"
"        dcl_literal l164, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r0.___w, l164, r0.w\n"
"        cmov_logical r0._y__, r0.w, r2.x, r0.y\n"
"        ior r2.__z_, r3.y, r0.y\n"
"       \n"
"        dcl_literal l165, 0x00000000, 0x00000030, 0x00000000, 0x18000000\n"
"       \n"
"        dcl_literal l166, 0x00000000, 0xFFFFFF9B, 0x00000000, 0xCD800000\n"
"        cmov_logical r0._y_w, r4.y, l165, l166\n"
"        iadd r0._y_w, r4.wwwx, r0.yyyw\n"
"       \n"
"        dcl_literal l167, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2.x___, l167, r0.y\n"
"       \n"
"        dcl_literal l168, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r0.___w, r2.x, l168, r0.w\n"
"       \n"
"        dcl_literal l169, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r0._y__, l169, r0.y_neg(xyzw)\n"
"       \n"
"        dcl_literal l170, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.x___, l170, r0.y\n"
"       \n"
"        dcl_literal l171, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0._y__, r2.x, l171, r0.y\n"
"       \n"
"        dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        imax r0._y__, r0.y, l172\n"
"        ishr r2.x___, r5.y, r0.y\n"
"       \n"
"        dcl_literal l173, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r0._y__, l173, r0.y\n"
"        cmov_logical r2._y__, r0.y, r2.x, r0.w\n"
"       \n"
"        dcl_literal l174, 0xC2400000, 0xC2400000, 0xC2400000, 0xC2400000\n"
"        mov r0._y__, l174\n"
"    else\n"
"        mov r2._y__, r1.y\n"
"       \n"
"        dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r0._y__, l175\n"
"    endif\n"
"else\n"
"   \n"
"    dcl_literal l176, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0._y__, l176\n"
"endif\n"
"add r0.___w, r2.z, r2.z\n"
"lt r2.x___, r2.y, r0.w\n"
"eq r0.___w, r0.w, r2.y\n"
"dcl_literal l177, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.__z_, r0.z, l177\n"
"dcl_literal l178, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r0.z, l178\n"
"and r0.__z_, r0.w, r0.z\n"
"ior r0.__z_, r2.x, r0.z\n"
"add r0.___w, r2.y_neg(xyzw), r2.z\n"
"cmov_logical r0.__z_, r0.z, r0.w, r2.z\n"
"dcl_literal l179, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0.___w, r0.y, l179\n"
"if_logicalnz r0.w\n"
"    ftoi r0._y__, r0.y\n"
"   \n"
"    dcl_literal l180, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r2, r0.z, l180\n"
"    itof r0.___w, r2.w\n"
"    cmov_logical r0.___w, r2.z, r2.x, r0.w\n"
"   \n"
"    dcl_literal l181, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.x___, r0.y, l181\n"
"    cmov_logical r0._y__, r2.z, r0.y, r2.x\n"
"   \n"
"    dcl_literal l182, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r2.x_z_, r0.w, l182\n"
"   \n"
"    dcl_literal l183, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.x___, r2.x, l183\n"
"    iadd r2.x___, r2.x, r0.y\n"
"   \n"
"    dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0._y__, r0.y, l184\n"
"    iadd r0._y__, r0.w, r0.y\n"
"   \n"
"    dcl_literal l185, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0.___w, r2.x, l185\n"
"   \n"
"    dcl_literal l186, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.x___, l186, r0.w\n"
"   \n"
"    dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0._y__, r2.x, l187, r0.y\n"
"   \n"
"    dcl_literal l188, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0.___w, l188, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l189, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.x___, r2.z, l189\n"
"   \n"
"    dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.__z_, l190, r0.w\n"
"   \n"
"    dcl_literal l191, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.___w, r2.z, l191, r0.w\n"
"   \n"
"    dcl_literal l192, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r0.___w, r0.w, l192\n"
"    ishr r2.x___, r2.x, r0.w\n"
"   \n"
"    dcl_literal l193, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r0.___w, l193, r0.w\n"
"    cmov_logical r0._y__, r0.w, r2.x, r0.y\n"
"    ior r0.__z_, r2.y, r0.y\n"
"endif\n"
"dcl_literal l194, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ixor r0._y__, r0.z, l194\n"
"cmov_logical r0._y__, r1.z, r0.y, r0.z\n"
"dcl_literal l195, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ilt r0.__zw, l195, r1.xxxy\n"
"ior r2.x___, r0.w, r0.z\n"
"dcl_literal l196, 0x7FC00001, 0x7FC00001, 0x7FC00001, 0x7FC00001\n"
"cmov_logical r0._y__, r2.x, l196, r0.y\n"
"dcl_literal l197, 0x00000000, 0x7F800000, 0x7F800000, 0x00000000\n"
"ieq r2, r1.yxyx, l197\n"
"ior r2.x___, r2.y, r2.x\n"
"dcl_literal l198, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r2.x, l198, r0.y\n"
"inot r2.xy__, r2.yzyy\n"
"and r2.x___, r2.z, r2.x\n"
"inot r0.__zw, r0.zzzw\n"
"and r0.__z_, r2.x, r0.z\n"
"and r0.___w, r1.w, r0.w\n"
"and r1.___w, r2.w, r0.w\n"
"ior r0.__z_, r0.z, r1.w\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"ieq r0._y__, r1.x, r1.y\n"
"and r0.__z_, r2.y, r0.w\n"
"and r0._y__, r0.y, r0.z\n"
"cmov_logical r0.x___, r0.y, r1.z, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__remquo_2f32f32",
"mdef(347)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l0, 0x80000000, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000\n"
"and r1, r0.xxyy, l0\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"and r0.__zw, r0.yyyx, l1\n"
"dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.__zw, r0.zzzw, l2\n"
"dcl_literal l3, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ilt r2.x___, r0.z, l3\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2._y__, r1.z, l4\n"
"and r2.x___, r2.x, r2.y\n"
"dcl_literal l5, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"iadd r0.__z_, l5, r0.z_neg(xyzw)\n"
"and r0.__z_, r2.x, r0.z\n"
"itof r2.x___, r0.z\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r2.__z_, r2.x, l6\n"
"if_logicalnz r2.z\n"
"   \n"
"    dcl_literal l7, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3.xyz_, r0.y, l7\n"
"    itof r2.___w, r3.z\n"
"    cmov_logical r2.___w, r3.y, r3.x, r2.w\n"
"   \n"
"    dcl_literal l8, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r3.x___, r0.z, l8\n"
"    cmov_logical r3.x___, r3.y, r0.z, r3.x\n"
"   \n"
"    dcl_literal l9, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3._yz_, r2.w, l9\n"
"   \n"
"    dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l10\n"
"    iadd r3._y__, r3.y, r3.x\n"
"   \n"
"    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.x___, r3.x, l11\n"
"    iadd r2.___w, r2.w, r3.x\n"
"   \n"
"    dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3.x___, r3.y, l12\n"
"   \n"
"    dcl_literal l13, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3._y__, l13, r3.x\n"
"   \n"
"    dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.___w, r3.y, l14, r2.w\n"
"   \n"
"    dcl_literal l15, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.x___, l15, r3.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.z, l16\n"
"   \n"
"    dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.__z_, l17, r3.x\n"
"   \n"
"    dcl_literal l18, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.x___, r3.z, l18, r3.x\n"
"   \n"
"    dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r3.x___, r3.x, l19\n"
"    ishr r3._y__, r3.y, r3.x\n"
"   \n"
"    dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3.x___, l20, r3.x\n"
"    cmov_logical r2.___w, r3.x, r3.y, r2.w\n"
"else\n"
"    mov r2.___w, r1.z\n"
"endif\n"
"dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.x___, r2.w, l21\n"
"dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r3.x, l22\n"
"ige r3._y__, r3.x, r0.w\n"
"iadd r0.___w, r0.w, r3.x_neg(xyzw)\n"
"itof r0.___w, r0.w\n"
"dcl_literal l23, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"mul_ieee r0.___w, r0.w, l23\n"
"round_neginf r0.___w, r0.w\n"
"dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.___w, r3.y, l24, r0.w\n"
"ftoi r3.x___, r0.w\n"
"dcl_literal l25, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"imul r3._y__, r3.x, l25\n"
"dcl_literal l26, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r3._y__, r3.y, l26\n"
"dcl_literal l27, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"imad r3.__z_, r3.x, l27, r3.y_neg(xyzw)\n"
"dcl_literal l28, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r3._y__, r3.y, l28\n"
"dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3._y__, r3.y, l29\n"
"mul_ieee r3._y__, r2.w, r3.y\n"
"dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"iadd r3.__z_, r3.z, l30\n"
"dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r3.__z_, r3.z, l31\n"
"mul_ieee r3._y__, r3.y, r3.z\n"
"dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r3.__z_, r0.w, l32\n"
"cmov_logical r2.___w, r3.z, r2.w, r3.y\n"
"dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"dcl_literal l34, 0x39800000, 0x39800000, 0x39800000, 0x39800000\n"
"cmov_logical r3._y__, r3.z, l33, l34\n"
"dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r2.w, l35\n"
"dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.__z_, r3.z, l36\n"
"dcl_literal l37, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r3.__z_, r3.z, l37\n"
"dcl_literal l38, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3.___w, r2.w, l38\n"
"dcl_literal l39, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r4.x___, l39, r3.z\n"
"dcl_literal l40, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r3.__z_, l40, r3.z\n"
"and r3.__z_, r4.x, r3.z\n"
"dcl_literal l41, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r4.x___, r3.z, l41\n"
"dcl_literal l42, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, l42, r0.w\n"
"and r0.___w, r3.z, r0.w\n"
"cmov_logical r0.___w, r0.w, r3.w, r2.w\n"
"mov r3.__z_, r1.y\n"
"mov r3.___w, r0.w\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r4._y__, l43\n"
"mov r4.__z_, r2.w\n"
"mov r4.___w, r4.x\n"
"whileloop\n"
"    ige r5.x___, r4.y, r3.x\n"
"    break_logicalnz r5.x\n"
"    div_zeroop(infinity) r5.x___, r3.z, r3.w\n"
"   \n"
"    dcl_literal l44, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"    mul_ieee r5._y__, r5.x, l44\n"
"    cmov_logical r5.x___, r4.w, r5.y, r5.x\n"
"    round_neginf r5.x___, r5.x\n"
"   \n"
"    dcl_literal l45, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r5._y__, r4.z, l45\n"
"    add r5.__z_, r4.z, r5.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l46, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r5.___w, r5.x, l46\n"
"    add r6.x___, r5.x, r5.w_neg(xyzw)\n"
"    mul_ieee r5.x___, r4.z, r5.x\n"
"    mad_ieee r6._y__, r5.y, r5.w, r5.x_neg(xyzw)\n"
"    mad_ieee r5._y__, r5.y, r6.x, r6.y\n"
"    mad_ieee r5._y__, r5.z, r5.w, r5.y\n"
"    mad_ieee r5._y__, r5.z, r6.x, r5.y\n"
"    add r5.__z_, r3.z, r5.x_neg(xyzw)\n"
"    add r5.___w, r3.z, r5.z_neg(xyzw)\n"
"    add r5.x___, r5.x_neg(xyzw), r5.w\n"
"    add r5.x___, r5.y_neg(xyzw), r5.x\n"
"    add r5.x___, r5.z, r5.x\n"
"   \n"
"    dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r5._y__, r5.x, l47\n"
"    add r5.__z_, r4.z, r5.x\n"
"    cmov_logical r5.x___, r5.y, r5.z, r5.x\n"
"   \n"
"    dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r5._y__, r5.x, l48\n"
"    add r5.__z_, r4.z, r5.x\n"
"    cmov_logical r5.x___, r5.y, r5.z, r5.x\n"
"    ge r5._y__, r5.x, r4.z\n"
"    add r5.__z_, r4.z_neg(xyzw), r5.x\n"
"    cmov_logical r3.__z_, r5.y, r5.z, r5.x\n"
"    mul_ieee r4.__z_, r3.y, r4.z\n"
"   \n"
"    dcl_literal l49, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    iadd r4._y__, r4.y, l49\n"
"    mov r3.___w, r4.z\n"
"   \n"
"    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r4.___w, l50\n"
"endloop\n"
"mov r3.xyz_, r3.wzww\n"
"dcl_literal l51, 0x7F800000, 0x7F800000, 0xFFFFF000, 0x00000000\n"
"and r4.xyz_, r3.yzxy, l51\n"
"dcl_literal l52, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.__zw, r4.xxxy, l52\n"
"dcl_literal l53, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r0.___w, r3.w, l53\n"
"dcl_literal l54, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r2.___w, r3.x, l54\n"
"dcl_literal l55, 0x00000069, 0x00000069, 0x00000069, 0x00000069\n"
"ilt r3.___w, l55, r0.w\n"
"dcl_literal l56, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"ige r0.___w, l56, r0.w\n"
"and r0.___w, r3.w, r0.w\n"
"cmov_logical r2.___w, r0.w, r2.w, r3.x\n"
"div_zeroop(infinity) r2.___w, r3.y, r2.w\n"
"dcl_literal l57, 0x38800000, 0x38800000, 0x38800000, 0x38800000\n"
"mul_ieee r3.___w, r2.w, l57\n"
"cmov_logical r0.___w, r0.w, r3.w, r2.w\n"
"round_neginf r0.___w, r0.w\n"
"add r2.___w, r3.x, r4.z_neg(xyzw)\n"
"dcl_literal l58, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.___w, r0.w, l58\n"
"add r4.x___, r0.w, r3.w_neg(xyzw)\n"
"mul_ieee r4._y__, r3.x, r0.w\n"
"mad_ieee r4.___w, r4.z, r3.w, r4.y_neg(xyzw)\n"
"mad_ieee r4.__z_, r4.z, r4.x, r4.w\n"
"mad_ieee r3.___w, r2.w, r3.w, r4.z\n"
"mad_ieee r2.___w, r2.w, r4.x, r3.w\n"
"add r3.___w, r3.y, r4.y_neg(xyzw)\n"
"add r4.x___, r3.y, r3.w_neg(xyzw)\n"
"add r4.x___, r4.y_neg(xyzw), r4.x\n"
"add r2.___w, r2.w_neg(xyzw), r4.x\n"
"add r4.x___, r3.w, r2.w\n"
"ftoi r4._y__, r0.w\n"
"dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r4.x, l59\n"
"add r4.__z_, r3.x, r4.x\n"
"dcl_literal l60, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.___w, r4.y, l60\n"
"cmov_logical r4.xy__, r0.w, r4.zwzz, r4.xyxx\n"
"dcl_literal l61, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r4.x, l61\n"
"add r4.__z_, r3.x, r4.x\n"
"dcl_literal l62, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.___w, r4.y, l62\n"
"cmov_logical r4.xy__, r0.w, r4.zwzz, r4.xyxx\n"
"ge r0.___w, r4.x, r3.x\n"
"add r4.__z_, r3.x_neg(xyzw), r4.x\n"
"dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r4.___w, r4.y, l63\n"
"cmov_logical r4.xy__, r0.w, r4.zwzz, r4.xyxx\n"
"cmov_logical r3._y__, r3.z, r4.x, r3.y\n"
"dcl_literal l64, 0x41F00000, 0x41F00000, 0x41F00000, 0x41F00000\n"
"lt r0.___w, l64, r2.x\n"
"ishl r0.__z_, r4.y, r0.z\n"
"dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.__z_, r0.w, l65, r0.z\n"
"dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.__z_, r3.y, l66\n"
"and r0.__z_, r2.z, r0.z\n"
"if_logicalnz r0.z\n"
"   \n"
"    dcl_literal l67, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF\n"
"    and r4, r3.y, l67\n"
"   \n"
"    dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ior r0.__z_, r4.x, l68\n"
"   \n"
"    dcl_literal l69, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r0.__z_, r0.z, l69\n"
"   \n"
"    dcl_literal l70, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.__z_, r0.z, l70\n"
"   \n"
"    dcl_literal l71, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    iadd r0.__z_, l71, r0.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l72, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.__z_, r0.z, l72\n"
"   \n"
"    dcl_literal l73, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ushr r0.__z_, r0.z, l73\n"
"   \n"
"    dcl_literal l74, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    cmov_logical r0.__z_, r4.x, r0.z, l74\n"
"   \n"
"    dcl_literal l75, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0.__z_, r0.z_neg(xyzw), l75\n"
"   \n"
"    dcl_literal l76, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r0.___w, r4.x, l76\n"
"   \n"
"    dcl_literal l77, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ine r2.x___, r4.x, l77\n"
"    and r0.___w, r0.w, r2.x\n"
"   \n"
"    dcl_literal l78, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.x___, r4.y, l78\n"
"   \n"
"    dcl_literal l79, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.x___, r2.x, l79\n"
"    cmov_logical r0.__z_, r0.w, r0.z, r2.x\n"
"   \n"
"    dcl_literal l80, 0x7FFFFFFF, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"    and r2.x_zw, r0.y, l80\n"
"   \n"
"    dcl_literal l81, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ior r0.___w, r2.x, l81\n"
"   \n"
"    dcl_literal l82, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r0.___w, r0.w, l82\n"
"   \n"
"    dcl_literal l83, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.___w, r0.w, l83\n"
"   \n"
"    dcl_literal l84, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    iadd r0.___w, l84, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l85, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.___w, r0.w, l85\n"
"   \n"
"    dcl_literal l86, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ushr r0.___w, r0.w, l86\n"
"   \n"
"    dcl_literal l87, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    cmov_logical r0.___w, r2.x, r0.w, l87\n"
"   \n"
"    dcl_literal l88, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0.___w, r0.w_neg(xyzw), l88\n"
"   \n"
"    dcl_literal l89, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r3.___w, r2.x, l89\n"
"   \n"
"    dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ine r5.x___, r2.x, l90\n"
"    and r3.___w, r3.w, r5.x\n"
"   \n"
"    dcl_literal l91, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r5.x___, r2.z, l91\n"
"   \n"
"    dcl_literal l92, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r5.x___, r5.x, l92\n"
"    cmov_logical r0.___w, r3.w, r0.w, r5.x\n"
"    inegate r3.___w, r0.w\n"
"    itof r5.x___, r3.w\n"
"    itof r2.___w, r2.w\n"
"    cmov_logical r2.x___, r2.z, r2.x, r2.w\n"
"   \n"
"    dcl_literal l93, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.___w, r3.w, l93\n"
"    cmov_logical r2.___w, r2.z, r3.w, r2.w\n"
"   \n"
"    dcl_literal l94, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r5._yz_, r2.x, l94\n"
"   \n"
"    dcl_literal l95, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r5._y__, r5.y, l95\n"
"   \n"
"    dcl_literal l96, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r5._y__, r5.y, l96\n"
"   \n"
"    dcl_literal l97, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r5.___w, r2.w, l97\n"
"    iadd r5.___w, r2.x, r5.w\n"
"    iadd r2.___w, r5.y, r2.w\n"
"   \n"
"    dcl_literal l98, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r6.x___, l98, r2.w\n"
"   \n"
"    dcl_literal l99, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r5.___w, r6.x, l99, r5.w\n"
"   \n"
"    dcl_literal l100, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.___w, l100, r2.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l101, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r5.__z_, r5.z, l101\n"
"   \n"
"    dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r6.x___, l102, r2.w\n"
"   \n"
"    dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.___w, r6.x, l103, r2.w\n"
"   \n"
"    dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.___w, r2.w, l104\n"
"    ishr r6.x___, r5.z, r2.w\n"
"   \n"
"    dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.___w, l105, r2.w\n"
"    cmov_logical r2.___w, r2.w, r6.x, r5.w\n"
"   \n"
"    dcl_literal l106, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r5.x___, l106, r5.x\n"
"   \n"
"    dcl_literal l107, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.___w, r5.x, l107, r2.w\n"
"    inegate r5.x___, r0.z\n"
"    itof r5.___w, r5.x\n"
"    itof r4.___w, r4.w\n"
"    cmov_logical r4.x___, r4.y, r4.x, r4.w\n"
"   \n"
"    dcl_literal l108, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r4.___w, r5.x, l108\n"
"    cmov_logical r4._y__, r4.y, r5.x, r4.w\n"
"   \n"
"    dcl_literal l109, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r6.xy__, r4.x, l109\n"
"   \n"
"    dcl_literal l110, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4.___w, r6.x, l110\n"
"    iadd r4.___w, r4.w, r4.y\n"
"   \n"
"    dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4._y__, r4.y, l111\n"
"    iadd r4.x___, r4.x, r4.y\n"
"   \n"
"    dcl_literal l112, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4._y__, r4.w, l112\n"
"   \n"
"    dcl_literal l113, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r4.___w, l113, r4.y\n"
"   \n"
"    dcl_literal l114, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r4.x___, r4.w, l114, r4.x\n"
"   \n"
"    dcl_literal l115, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r4._y__, l115, r4.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l116, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4.___w, r6.y, l116\n"
"   \n"
"    dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r5.x___, l117, r4.y\n"
"   \n"
"    dcl_literal l118, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r4._y__, r5.x, l118, r4.y\n"
"   \n"
"    dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r4._y__, r4.y, l119\n"
"    ishr r4.___w, r4.w, r4.y\n"
"   \n"
"    dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, l120, r4.y\n"
"    cmov_logical r4.x___, r4.y, r4.w, r4.x\n"
"   \n"
"    dcl_literal l121, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r4._y__, l121, r5.w\n"
"   \n"
"    dcl_literal l122, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r4.x___, r4.y, l122, r4.x\n"
"    ior r4.x___, r4.z, r4.x\n"
"    iadd r0.__z_, r0.z, r3.w\n"
"    mov r4._y__, r4.x\n"
"   \n"
"    dcl_literal l123, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r4.__z_, l123\n"
"    mov r3.___w, r0.z\n"
"    whileloop\n"
"       \n"
"        dcl_literal l124, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ige r4.___w, l124, r3.w\n"
"        break_logicalnz r4.w\n"
"       \n"
"        dcl_literal l125, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r4.___w, r4.z, l125\n"
"        ge r5.x___, r4.y, r2.w\n"
"        add r5.___w, r2.w_neg(xyzw), r4.y\n"
"        cmov_logical r5.___w, r5.x, r5.w, r4.y\n"
"       \n"
"        dcl_literal l126, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r6.x___, r4.w, l126\n"
"        cmov_logical r4.__z_, r5.x, r6.x, r4.w\n"
"        add r4._y__, r5.w, r5.w\n"
"       \n"
"        dcl_literal l127, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r3.___w, r3.w, l127\n"
"    endloop\n"
"   \n"
"    dcl_literal l128, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    ishl r3.___w, r4.z, l128\n"
"    ge r4.x___, r4.y, r2.w\n"
"    add r2.___w, r2.w_neg(xyzw), r4.y\n"
"    cmov_logical r2.___w, r4.x, r2.w, r4.y\n"
"   \n"
"    dcl_literal l129, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    iadd r4._y__, r3.w, l129\n"
"    cmov_logical r3.___w, r4.x, r4.y, r3.w\n"
"    itof r4.x___, r0.w\n"
"   \n"
"    dcl_literal l130, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r6, r2.w, l130\n"
"    itof r2.___w, r6.w\n"
"    cmov_logical r2.___w, r6.z, r6.x, r2.w\n"
"   \n"
"    dcl_literal l131, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r4._y__, r0.w, l131\n"
"    cmov_logical r0.___w, r6.z, r0.w, r4.y\n"
"   \n"
"    dcl_literal l132, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r4._yz_, r2.w, l132\n"
"   \n"
"    dcl_literal l133, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4._y__, r4.y, l133\n"
"    iadd r4._y__, r4.y, r0.w\n"
"   \n"
"    dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l134\n"
"    iadd r0.___w, r2.w, r0.w\n"
"   \n"
"    dcl_literal l135, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.___w, r4.y, l135\n"
"   \n"
"    dcl_literal l136, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r4._y__, l136, r2.w\n"
"   \n"
"    dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r4.y, l137, r0.w\n"
"   \n"
"    dcl_literal l138, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.___w, l138, r2.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l139, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4._y__, r4.z, l139\n"
"   \n"
"    dcl_literal l140, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l140, r2.w\n"
"   \n"
"    dcl_literal l141, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.___w, r4.z, l141, r2.w\n"
"   \n"
"    dcl_literal l142, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r2.___w, r2.w, l142\n"
"    ishr r4._y__, r4.y, r2.w\n"
"   \n"
"    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.___w, l143, r2.w\n"
"    cmov_logical r0.___w, r2.w, r4.y, r0.w\n"
"   \n"
"    dcl_literal l144, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r2.___w, l144, r4.x\n"
"   \n"
"    dcl_literal l145, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r2.w, l145, r0.w\n"
"    ior r0.___w, r6.y, r0.w\n"
"   \n"
"    dcl_literal l146, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ige r0.__z_, r0.z, l146\n"
"    cmov_logical r3._y__, r0.z, r0.w, r3.y\n"
"    and r0.__z_, r3.w, r0.z\n"
"    iadd r3.__z_, r3.z, r0.z\n"
"   \n"
"    dcl_literal l147, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r0.__z_, r3.y, l147\n"
"   \n"
"    dcl_literal l148, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r0.z, l148\n"
"   \n"
"    dcl_literal l149, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    ilt r0.__z_, r0.z, l149\n"
"    if_logicalnz r0.z\n"
"       \n"
"        dcl_literal l150, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"        and r4, r3.y, l150\n"
"        itof r0.__z_, r4.w\n"
"        cmov_logical r0.__z_, r4.z, r4.x, r0.z\n"
"       \n"
"        dcl_literal l151, 0x00000030, 0x00000000, 0x18000000, 0x00000000\n"
"       \n"
"        dcl_literal l152, 0xFFFFFF9B, 0x00000000, 0xCD800000, 0x00000000\n"
"        cmov_logical r4.x_z_, r4.z, l151, l152\n"
"       \n"
"        dcl_literal l153, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF\n"
"        and r5.x__w, r0.z, l153\n"
"       \n"
"        dcl_literal l154, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r0.___w, r5.x, l154\n"
"        iadd r0.__zw, r0.zzzw, r4.zzzx\n"
"       \n"
"        dcl_literal l155, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"        iadd r0.___w, r0.w, l155\n"
"       \n"
"        dcl_literal l156, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2.___w, l156, r0.w\n"
"       \n"
"        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r0.__z_, r2.w, l157, r0.z\n"
"       \n"
"        dcl_literal l158, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r0.___w, l158, r0.w_neg(xyzw)\n"
"       \n"
"        dcl_literal l159, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.___w, r5.w, l159\n"
"       \n"
"        dcl_literal l160, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r3.___w, l160, r0.w\n"
"       \n"
"        dcl_literal l161, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0.___w, r3.w, l161, r0.w\n"
"       \n"
"        dcl_literal l162, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        imax r0.___w, r0.w, l162\n"
"        ishr r2.___w, r2.w, r0.w\n"
"       \n"
"        dcl_literal l163, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r0.___w, l163, r0.w\n"
"        cmov_logical r0.__z_, r0.w, r2.w, r0.z\n"
"        ior r3._y__, r4.y, r0.z\n"
"       \n"
"        dcl_literal l164, 0x00000000, 0x00000000, 0x00000030, 0x18000000\n"
"       \n"
"        dcl_literal l165, 0x00000000, 0x00000000, 0xFFFFFF9B, 0xCD800000\n"
"        cmov_logical r0.__zw, r2.z, l164, l165\n"
"        iadd r0.___w, r2.x, r0.w\n"
"        iadd r0.__z_, r5.y, r0.z\n"
"       \n"
"        dcl_literal l166, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2.x___, l166, r0.z\n"
"       \n"
"        dcl_literal l167, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r0.___w, r2.x, l167, r0.w\n"
"       \n"
"        dcl_literal l168, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r0.__z_, l168, r0.z_neg(xyzw)\n"
"       \n"
"        dcl_literal l169, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.x___, l169, r0.z\n"
"       \n"
"        dcl_literal l170, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r0.__z_, r2.x, l170, r0.z\n"
"       \n"
"        dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        imax r0.__z_, r0.z, l171\n"
"        ishr r2.x___, r5.z, r0.z\n"
"       \n"
"        dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r0.__z_, l172, r0.z\n"
"        cmov_logical r3.x___, r0.z, r2.x, r0.w\n"
"       \n"
"        dcl_literal l173, 0xC2400000, 0xC2400000, 0xC2400000, 0xC2400000\n"
"        mov r0.__z_, l173\n"
"    else\n"
"        mov r3.x___, r1.z\n"
"       \n"
"        dcl_literal l174, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r0.__z_, l174\n"
"    endif\n"
"else\n"
"   \n"
"    dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0.__z_, l175\n"
"endif\n"
"add r0.___w, r3.y, r3.y\n"
"lt r2.x___, r3.x, r0.w\n"
"eq r0.___w, r0.w, r3.x\n"
"dcl_literal l176, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r2.__z_, r3.z, l176\n"
"dcl_literal l177, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2.__z_, r2.z, l177\n"
"and r0.___w, r0.w, r2.z\n"
"ior r0.___w, r2.x, r0.w\n"
"add r2.x___, r3.x_neg(xyzw), r3.y\n"
"dcl_literal l178, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r2.__z_, r3.z, l178\n"
"cmov_logical r2.x_z_, r0.w, r2.xxzx, r3.yyzy\n"
"dcl_literal l179, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r0.___w, r0.z, l179\n"
"if_logicalnz r0.w\n"
"    ftoi r0.__z_, r0.z\n"
"   \n"
"    dcl_literal l180, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r3, r2.x, l180\n"
"    itof r0.___w, r3.w\n"
"    cmov_logical r0.___w, r3.z, r3.x, r0.w\n"
"   \n"
"    dcl_literal l181, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r2.___w, r0.z, l181\n"
"    cmov_logical r0.__z_, r3.z, r0.z, r2.w\n"
"   \n"
"    dcl_literal l182, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r3.x_z_, r0.w, l182\n"
"   \n"
"    dcl_literal l183, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2.___w, r3.x, l183\n"
"    iadd r2.___w, r2.w, r0.z\n"
"   \n"
"    dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.__z_, r0.z, l184\n"
"    iadd r0.__z_, r0.w, r0.z\n"
"   \n"
"    dcl_literal l185, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r0.___w, r2.w, l185\n"
"   \n"
"    dcl_literal l186, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r2.___w, l186, r0.w\n"
"   \n"
"    dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.__z_, r2.w, l187, r0.z\n"
"   \n"
"    dcl_literal l188, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r0.___w, l188, r0.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l189, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2.___w, r3.z, l189\n"
"   \n"
"    dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r3.x___, l190, r0.w\n"
"   \n"
"    dcl_literal l191, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.___w, r3.x, l191, r0.w\n"
"   \n"
"    dcl_literal l192, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    imax r0.___w, r0.w, l192\n"
"    ishr r2.___w, r2.w, r0.w\n"
"   \n"
"    dcl_literal l193, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r0.___w, l193, r0.w\n"
"    cmov_logical r0.__z_, r0.w, r2.w, r0.z\n"
"    ior r2.x___, r3.y, r0.z\n"
"endif\n"
"dcl_literal l194, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"and r0.__z_, r2.z, l194\n"
"dcl_literal l195, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ixor r0.___w, r2.x, l195\n"
"cmov_logical r2.x___, r1.x, r0.w, r2.x\n"
"ixor r0.___w, r1.w, r1.x\n"
"inegate r1.___w, r0.z\n"
"cmov_logical r2.__z_, r0.w, r1.w, r0.z\n"
"dcl_literal l196, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"ilt r0.__zw, l196, r1.yyyz\n"
"ior r1.___w, r0.w, r0.z\n"
"dcl_literal l197, 0x7FC00001, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x_z_, r1.w, l197, r2.xxzx\n"
"dcl_literal l198, 0x00000000, 0x7F800000, 0x7F800000, 0x00000000\n"
"ieq r3, r1.zyzy, l198\n"
"ior r1.___w, r3.y, r3.x\n"
"dcl_literal l199, 0xFFC00000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x_z_, r1.w, l199, r2.xxzx\n"
"inot r3.xy__, r3.yzyy\n"
"and r1.___w, r3.z, r3.x\n"
"inot r0.__zw, r0.zzzw\n"
"and r0.__z_, r1.w, r0.z\n"
"and r0.___w, r2.y, r0.w\n"
"and r1.___w, r3.w, r0.w\n"
"ior r0.__z_, r0.z, r1.w\n"
"mov r2._y__, r0.x\n"
"dcl_literal l200, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"mov r2.___w, l200\n"
"cmov_logical r0.x_z_, r0.z, r2.yywy, r2.xxzx\n"
"ieq r1.__z_, r1.y, r1.z\n"
"and r0.___w, r3.y, r0.w\n"
"and r0.___w, r1.z, r0.w\n"
"ieq r0._y__, r2.y, r0.y\n"
"dcl_literal l201, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"dcl_literal l202, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1._y__, r0.y, l201, l202\n"
"cmov_logical r0.xy__, r0.w, r1.xyxx, r0.xzxx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__rint_f32",
"mdef(348)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._y__, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l1, r0.y\n"
"round_nearest r0.__z_, r0.x\n"
"\n"
"dcl_literal l2, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l2\n"
"cmov_logical r0.x___, r0.y, r0.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__rootn_f32i32",
"mdef(349)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"itof r0.__z_, r0.y\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.y, l0\n"
"inegate r1.x___, r0.y\n"
"cmov_logical r1.x___, r0.w, r1.x, r0.y\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.__z_, l1, r0.z\n"
"dcl_literal l2, 0x7FFFFFFF, 0x80000000, 0x80000001, 0x00000001\n"
"and r2, r0.xxyy, l2\n"
"dcl_literal l3, 0x00000000, 0x00000001, 0x7F800000, 0x80000000\n"
"ieq r3, r2.zzxy, l3\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1._y__, l4, r2.x\n"
"inot r1.__z_, r3.z\n"
"inot r1.___w, r1.y\n"
"and r1.__z_, r1.z, r1.w\n"
"dcl_literal l5, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r1.___w, r0.z, l5\n"
"dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.___w, l6, r1.w\n"
"dcl_literal l7, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"ieq r4.x___, r1.x, l7\n"
"if_logicalnz r4.x\n"
"   \n"
"    dcl_literal l8, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l9, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4.x___, r0.w, l8, l9\n"
"   \n"
"    dcl_literal l10, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r4._y__, r0.x, l10\n"
"    if_logicalz r4.y\n"
"       \n"
"        dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r4.__z_, r0.x, l11\n"
"        itof r4.__z_, r4.z\n"
"       \n"
"        dcl_literal l12, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r4.__zw, r4.z, l12\n"
"       \n"
"        dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r4.__z_, r4.z, l13\n"
"       \n"
"        dcl_literal l14, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"        iadd r4.__z_, r4.z, l14\n"
"       \n"
"        dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r4.___w, r4.w, l15\n"
"       \n"
"        dcl_literal l16, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r4.__z_, l16, r4.z_neg(xyzw)\n"
"       \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r5.x___, l17, r4.z\n"
"       \n"
"        dcl_literal l18, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r4.__z_, r5.x, l18, r4.z\n"
"       \n"
"        dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r5.x___, l19, r4.z\n"
"        ishr r5._y__, r4.w, r4.z\n"
"        inegate r4.__z_, r4.z\n"
"       \n"
"        dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r4.__z_, r4.z, l20\n"
"        iadd r4.__z_, r4.w, r4.z\n"
"        cmov_logical r4.__z_, r5.x, r5.y, r4.z\n"
"       \n"
"        dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r4._y__, r4.z, l21\n"
"       \n"
"        dcl_literal l22, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0\n"
"        mov r4.___w, l22\n"
"    else\n"
"       \n"
"        dcl_literal l23, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r4.__z_, r0.x, l23\n"
"       \n"
"        dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r4.___w, l24\n"
"    endif\n"
"   \n"
"    dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4._y__, r4.y, l25\n"
"   \n"
"    dcl_literal l26, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4._y__, r4.y, l26\n"
"   \n"
"    dcl_literal l27, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r4.__z_, r4.z, l27\n"
"    itof r4._y__, r4.y\n"
"   \n"
"    dcl_literal l28, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB\n"
"    mul_ieee r5.x___, r4.y, l28\n"
"    round_nearest r5.x___, r5.x\n"
"   \n"
"    dcl_literal l29, 0x40400000, 0x40400000, 0x40400000, 0x40400000\n"
"    mad_ieee r4._y__, r5.x_neg(xyzw), l29, r4.y\n"
"    ftoi r4._y__, r4.y\n"
"    ftoi r5.x___, r5.x\n"
"    iadd r4.___w, r5.x, r4.w\n"
"   \n"
"    dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    iadd r4._y__, r4.y, l30\n"
"   \n"
"    dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4._y__, r4.y, l31\n"
"    ior r4._y__, r4.z, r4.y\n"
"   \n"
"    dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4.__z_, r4.y, l32\n"
"   \n"
"    dcl_literal l33, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4.__z_, r4.z, l33\n"
"   \n"
"    dcl_literal l34, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r4._y__, r4.y, l34\n"
"   \n"
"    dcl_literal l35, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"    iadd r5.x___, l35, r4.y\n"
"   \n"
"    dcl_literal l36, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    and r5.x___, r5.x, l36\n"
"   \n"
"    dcl_literal l37, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    ixor r5._y__, r5.x, l37\n"
"    ior r4._y__, r4.y, r5.y\n"
"   \n"
"    dcl_literal l38, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r5.x___, r5.x, l38\n"
"    iadd r4.__z_, r4.z, r5.x\n"
"    itof r4.__z_, r4.z\n"
"   \n"
"    dcl_literal l39, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"    add r5.xy__, r4.y, l39\n"
"    div_zeroop(infinity) r4._y__, r5.x, r5.y\n"
"    mul_ieee r5._y__, r4.y, r4.y\n"
"    mul_ieee r5.__z_, r5.y, r5.y\n"
"   \n"
"    dcl_literal l40, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"   \n"
"    dcl_literal l41, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"    mad_ieee r6.xy__, r5.z, l40, l41\n"
"   \n"
"    dcl_literal l42, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"    mad_ieee r6.xy__, r5.z, r6.xyxx, l42\n"
"    mul_ieee r5.___w, r5.z, r6.x\n"
"   \n"
"    dcl_literal l43, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"    mad_ieee r5.__z_, r5.z, r6.y, l43\n"
"    mad_ieee r5._y__, r5.y, r5.z, r5.w\n"
"    mul_ieee r5.__z_, r5.x, r5.x\n"
"   \n"
"    dcl_literal l44, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mul_ieee r5.___w, r5.z, l44\n"
"   \n"
"    dcl_literal l45, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r5._y__, r5.z, l45, r5.y\n"
"    mad_ieee r4._y__, r4.y_neg(xyzw), r5.y, r5.w\n"
"    add r4._y__, r5.x_neg(xyzw), r4.y\n"
"   \n"
"    dcl_literal l46, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820\n"
"    mul_ieee r5.x___, r4.z, l46\n"
"    mul_ieee r5._y__, r5.x, r5.x\n"
"   \n"
"    dcl_literal l47, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"   \n"
"    dcl_literal l48, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"    mad_ieee r5.__z_, r5.y, l47, l48\n"
"   \n"
"    dcl_literal l49, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"    mad_ieee r5.__z_, r5.y, r5.z, l49\n"
"   \n"
"    dcl_literal l50, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"    mad_ieee r5.__z_, r5.y, r5.z, l50\n"
"   \n"
"    dcl_literal l51, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"    mad_ieee r5.__z_, r5.y, r5.z, l51\n"
"    mad_ieee r5._y__, r5.y_neg(xyzw), r5.z, r5.x\n"
"    mul_ieee r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l52, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"    add r5._y__, r5.y, l52\n"
"    div_zeroop(infinity) r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l53, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820\n"
"    mad_ieee r4.__z_, r4.z_neg(xyzw), l53, r5.x\n"
"   \n"
"    dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r4.__z_, r4.z_neg(xyzw), l54\n"
"   \n"
"    dcl_literal l55, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB\n"
"    mul_ieee r5.x___, r4.y, l55\n"
"    mul_ieee r5._y__, r5.x, r5.x\n"
"   \n"
"    dcl_literal l56, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"   \n"
"    dcl_literal l57, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"    mad_ieee r5.__z_, r5.y, l56, l57\n"
"   \n"
"    dcl_literal l58, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"    mad_ieee r5.__z_, r5.y, r5.z, l58\n"
"   \n"
"    dcl_literal l59, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"    mad_ieee r5.__z_, r5.y, r5.z, l59\n"
"   \n"
"    dcl_literal l60, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"    mad_ieee r5.__z_, r5.y, r5.z, l60\n"
"    mad_ieee r5._y__, r5.y_neg(xyzw), r5.z, r5.x\n"
"    mul_ieee r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l61, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"    add r5._y__, r5.y, l61\n"
"    div_zeroop(infinity) r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l62, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB\n"
"    mad_ieee r4._y__, r4.y_neg(xyzw), l62, r5.x\n"
"   \n"
"    dcl_literal l63, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r4._y__, r4.y_neg(xyzw), l63\n"
"    mul_ieee r4._y__, r4.z, r4.y\n"
"   \n"
"    dcl_literal l64, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    div_zeroop(infinity) r4.__z_, l64, r4.y\n"
"    cmov_logical r4._y__, r0.w, r4.z, r4.y\n"
"    imul r4.x___, r4.w, r4.x\n"
"    itof r4.x___, r4.x\n"
"    ftoi r4.__z_, r4.x_abs\n"
"   \n"
"    dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r4.x___, r4.x, l65\n"
"    inegate r4.___w, r4.z\n"
"    cmov_logical r4.x___, r4.x, r4.w, r4.z\n"
"   \n"
"    dcl_literal l66, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r5, r4.y, l66\n"
"    itof r4._y__, r5.w\n"
"    cmov_logical r4._y__, r5.z, r5.x, r4.y\n"
"   \n"
"    dcl_literal l67, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r4.__z_, r4.x, l67\n"
"    cmov_logical r4.x___, r5.z, r4.x, r4.z\n"
"   \n"
"    dcl_literal l68, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"    and r4.__zw, r4.y, l68\n"
"   \n"
"    dcl_literal l69, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4.__z_, r4.z, l69\n"
"    iadd r4.__z_, r4.z, r4.x\n"
"   \n"
"    dcl_literal l70, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4.x___, r4.x, l70\n"
"    iadd r4.x___, r4.y, r4.x\n"
"   \n"
"    dcl_literal l71, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4._y__, r4.z, l71\n"
"   \n"
"    dcl_literal l72, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r4.__z_, l72, r4.y\n"
"   \n"
"    dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r4.x___, r4.z, l73, r4.x\n"
"   \n"
"    dcl_literal l74, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r4._y__, l74, r4.y_neg(xyzw)\n"
"   \n"
"    dcl_literal l75, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4.__z_, r4.w, l75\n"
"   \n"
"    dcl_literal l76, 0x00000017, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5.x_z_, l76, r4.y\n"
"   \n"
"    dcl_literal l77, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r4.___w, r5.x, l77, r4.y\n"
"   \n"
"    dcl_literal l78, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, r4.y, l78\n"
"   \n"
"    dcl_literal l79, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4._y__, r4.y, l79, r4.w\n"
"    ishr r4._y__, r4.z, r4.y\n"
"    cmov_logical r4.x___, r5.z, r4.y, r4.x\n"
"    ior r4.x___, r5.y, r4.x\n"
"endif\n"
"dcl_literal l80, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"ine r1.x___, r1.x, l80\n"
"if_logicalnz r1.x\n"
"    itof r1.x___, r2.x\n"
"   \n"
"    dcl_literal l81, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r4._yz_, r1.x, l81\n"
"   \n"
"    dcl_literal l82, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r4.y, l82\n"
"   \n"
"    dcl_literal l83, 0x00000019, 0x00000019, 0x00000019, 0x00000019\n"
"    iadd r1.x___, r1.x, l83\n"
"   \n"
"    dcl_literal l84, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4._y__, r4.z, l84\n"
"   \n"
"    dcl_literal l85, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r1.x___, l85, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l86, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4.__z_, l86, r1.x\n"
"   \n"
"    dcl_literal l87, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r1.x___, r4.z, l87, r1.x\n"
"   \n"
"    dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.__z_, l88, r1.x\n"
"    ishr r4.___w, r4.y, r1.x\n"
"    inegate r1.x___, r1.x\n"
"   \n"
"    dcl_literal l89, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r1.x___, r1.x, l89\n"
"    iadd r1.x___, r4.y, r1.x\n"
"    cmov_logical r1.x___, r4.z, r4.w, r1.x\n"
"   \n"
"    dcl_literal l90, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ilt r4._y__, r2.x, l90\n"
"    cmov_logical r1.x___, r4.y, r1.x, r2.x\n"
"   \n"
"    dcl_literal l91, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7\n"
"    and r4._y__, r4.y, l91\n"
"   \n"
"    dcl_literal l92, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"    and r4.__zw, r1.x, l92\n"
"   \n"
"    dcl_literal l93, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.x___, r4.z, l93\n"
"    iadd r1.x___, r1.x, r4.y\n"
"   \n"
"    dcl_literal l94, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    ior r4._y__, r4.w, l94\n"
"   \n"
"    dcl_literal l95, 0x43000000, 0x43000000, 0x43000000, 0x43000000\n"
"   \n"
"    dcl_literal l96, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r4.__z_, r4.y, l95, l96\n"
"    ftoi r4.___w, r4.z\n"
"   \n"
"    dcl_literal l97, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0\n"
"    iadd r4.___w, r4.w, l97\n"
"   \n"
"    dcl_literal l98, 0x00000001, 0x00000002, 0x00000003, 0x00000004\n"
"    ieq r5, r4.w, l98\n"
"   \n"
"    dcl_literal l99, 0x31B0FC04, 0x3C7E0540, 0x00000000, 0x00000000\n"
"    and r6.xy__, r5.x, l99\n"
"   \n"
"    dcl_literal l100, 0x33439E0D, 0x3CFC14C0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r5.y, l100, r6.xyxx\n"
"   \n"
"    dcl_literal l101, 0x32F632DD, 0x3D3BA2C0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r5.z, l101, r5.xyxx\n"
"   \n"
"    dcl_literal l102, 0x32C01163, 0x3D785180, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r5.w, l102, r5.xyxx\n"
"   \n"
"    dcl_literal l103, 0x00000005, 0x00000006, 0x00000007, 0x00000008\n"
"    ieq r6, r4.w, l103\n"
"   \n"
"    dcl_literal l104, 0x33161BD2, 0x3D9A0EB8, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l104, r5.xyxx\n"
"   \n"
"    dcl_literal l105, 0x330AE56B, 0x3DB78690, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l105, r5.xyxx\n"
"   \n"
"    dcl_literal l106, 0x32692B56, 0x3DD49368, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l106, r5.xyxx\n"
"   \n"
"    dcl_literal l107, 0x32DC55E6, 0x3DF13838, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l107, r5.xyxx\n"
"   \n"
"    dcl_literal l108, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C\n"
"    ieq r6, r4.w, l108\n"
"   \n"
"    dcl_literal l109, 0x3379A11D, 0x3E06BBF0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l109, r5.xyxx\n"
"   \n"
"    dcl_literal l110, 0x33703FEA, 0x3E14AA94, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l110, r5.xyxx\n"
"   \n"
"    dcl_literal l111, 0x335996FA, 0x3E226958, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l111, r5.xyxx\n"
"   \n"
"    dcl_literal l112, 0x33614F28, 0x3E2FF980, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l112, r5.xyxx\n"
"   \n"
"    dcl_literal l113, 0x0000000D, 0x0000000E, 0x0000000F, 0x00000010\n"
"    ieq r6, r4.w, l113\n"
"   \n"
"    dcl_literal l114, 0x30843642, 0x3E3D5C48, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l114, r5.xyxx\n"
"   \n"
"    dcl_literal l115, 0x3267A2B6, 0x3E4A92D4, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l115, r5.xyxx\n"
"   \n"
"    dcl_literal l116, 0x331D0180, 0x3E579E48, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l116, r5.xyxx\n"
"   \n"
"    dcl_literal l117, 0x330F3534, 0x3E647FBC, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l117, r5.xyxx\n"
"   \n"
"    dcl_literal l118, 0x00000011, 0x00000012, 0x00000013, 0x00000014\n"
"    ieq r6, r4.w, l118\n"
"   \n"
"    dcl_literal l119, 0x335C55E6, 0x3E713838, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l119, r5.xyxx\n"
"   \n"
"    dcl_literal l120, 0x335ABC7C, 0x3E7DC8C0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l120, r5.xyxx\n"
"   \n"
"    dcl_literal l121, 0x3309CE44, 0x3E851926, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l121, r5.xyxx\n"
"   \n"
"    dcl_literal l122, 0x332EAE98, 0x3E8B3AE4, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l122, r5.xyxx\n"
"   \n"
"    dcl_literal l123, 0x00000015, 0x00000016, 0x00000017, 0x00000018\n"
"    ieq r6, r4.w, l123\n"
"   \n"
"    dcl_literal l124, 0x336F3DE6, 0x3E914A0E, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l124, r5.xyxx\n"
"   \n"
"    dcl_literal l125, 0x336B8475, 0x3E974714, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l125, r5.xyxx\n"
"   \n"
"    dcl_literal l126, 0x32AB4A2F, 0x3E9D3262, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l126, r5.xyxx\n"
"   \n"
"    dcl_literal l127, 0x310717B1, 0x3EA30C5E, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l127, r5.xyxx\n"
"   \n"
"    dcl_literal l128, 0x00000019, 0x0000001A, 0x0000001B, 0x0000001C\n"
"    ieq r6, r4.w, l128\n"
"   \n"
"    dcl_literal l129, 0x31E5BF06, 0x3EA8D56C, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l129, r5.xyxx\n"
"   \n"
"    dcl_literal l130, 0x337D6027, 0x3EAE8DEC, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l130, r5.xyxx\n"
"   \n"
"    dcl_literal l131, 0x32F4D8A5, 0x3EB43640, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l131, r5.xyxx\n"
"   \n"
"    dcl_literal l132, 0x335AEF40, 0x3EB9CEBE, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l132, r5.xyxx\n"
"   \n"
"    dcl_literal l133, 0x0000001D, 0x0000001E, 0x0000001F, 0x00000020\n"
"    ieq r6, r4.w, l133\n"
"   \n"
"    dcl_literal l134, 0x336E0ABF, 0x3EBF57C0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l134, r5.xyxx\n"
"   \n"
"    dcl_literal l135, 0x31D8284B, 0x3EC4D19C, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l135, r5.xyxx\n"
"   \n"
"    dcl_literal l136, 0x32E108B8, 0x3ECA3CA0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l136, r5.xyxx\n"
"   \n"
"    dcl_literal l137, 0x3332FE61, 0x3ECF991E, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l137, r5.xyxx\n"
"   \n"
"    dcl_literal l138, 0x00000021, 0x00000022, 0x00000023, 0x00000024\n"
"    ieq r6, r4.w, l138\n"
"   \n"
"    dcl_literal l139, 0x32D4D042, 0x3ED4E764, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l139, r5.xyxx\n"
"   \n"
"    dcl_literal l140, 0x336F323E, 0x3EDA27BA, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l140, r5.xyxx\n"
"   \n"
"    dcl_literal l141, 0x32ED38DC, 0x3EDF5A6C, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l141, r5.xyxx\n"
"   \n"
"    dcl_literal l142, 0x31F35344, 0x3EE47FBE, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l142, r5.xyxx\n"
"   \n"
"    dcl_literal l143, 0x00000025, 0x00000026, 0x00000027, 0x00000028\n"
"    ieq r6, r4.w, l143\n"
"   \n"
"    dcl_literal l144, 0x337803AF, 0x3EE997F2, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l144, r5.xyxx\n"
"   \n"
"    dcl_literal l145, 0x31983894, 0x3EEEA350, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l145, r5.xyxx\n"
"   \n"
"    dcl_literal l146, 0x33075A1E, 0x3EF3A212, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l146, r5.xyxx\n"
"   \n"
"    dcl_literal l147, 0x32FD7837, 0x3EF8947A, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l147, r5.xyxx\n"
"   \n"
"    dcl_literal l148, 0x00000029, 0x0000002A, 0x0000002B, 0x0000002C\n"
"    ieq r6, r4.w, l148\n"
"   \n"
"    dcl_literal l149, 0x32778F32, 0x3EFD7AC4, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l149, r5.xyxx\n"
"   \n"
"    dcl_literal l150, 0x3234BA20, 0x3F012A95, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l150, r5.xyxx\n"
"   \n"
"    dcl_literal l151, 0x3360E6FA, 0x3F0391F2, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l151, r5.xyxx\n"
"   \n"
"    dcl_literal l152, 0x3204A550, 0x3F05F397, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l152, r5.xyxx\n"
"   \n"
"    dcl_literal l153, 0x0000002D, 0x0000002E, 0x0000002F, 0x00000030\n"
"    ieq r6, r4.w, l153\n"
"   \n"
"    dcl_literal l154, 0x33716A65, 0x3F084F9C, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l154, r5.xyxx\n"
"   \n"
"    dcl_literal l155, 0x3317A6AF, 0x3F0AA61E, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l155, r5.xyxx\n"
"   \n"
"    dcl_literal l156, 0x33233E4B, 0x3F0CF735, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l156, r5.xyxx\n"
"   \n"
"    dcl_literal l157, 0x33738207, 0x3F0F42FA, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l157, r5.xyxx\n"
"   \n"
"    dcl_literal l158, 0x00000031, 0x00000032, 0x00000033, 0x00000034\n"
"    ieq r6, r4.w, l158\n"
"   \n"
"    dcl_literal l159, 0x333DF5FA, 0x3F118986, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l159, r5.xyxx\n"
"   \n"
"    dcl_literal l160, 0x33144D89, 0x3F13CAF0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l160, r5.xyxx\n"
"   \n"
"    dcl_literal l161, 0x32D448E9, 0x3F16074F, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l161, r5.xyxx\n"
"   \n"
"    dcl_literal l162, 0x331A7886, 0x3F183EB9, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l162, r5.xyxx\n"
"   \n"
"    dcl_literal l163, 0x00000035, 0x00000036, 0x00000037, 0x00000038\n"
"    ieq r6, r4.w, l163\n"
"   \n"
"    dcl_literal l164, 0x336CE70F, 0x3F1A7144, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l164, r5.xyxx\n"
"   \n"
"    dcl_literal l165, 0x331AB151, 0x3F1C9F06, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l165, r5.xyxx\n"
"   \n"
"    dcl_literal l166, 0x32A71570, 0x3F1EC813, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l166, r5.xyxx\n"
"   \n"
"    dcl_literal l167, 0x3284672B, 0x3F20EC7F, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l167, r5.xyxx\n"
"   \n"
"    dcl_literal l168, 0x00000039, 0x0000003A, 0x0000003B, 0x0000003C\n"
"    ieq r6, r4.w, l168\n"
"   \n"
"    dcl_literal l169, 0x318717B1, 0x3F230C5E, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l169, r5.xyxx\n"
"   \n"
"    dcl_literal l170, 0x336D81F6, 0x3F2527C2, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l170, r5.xyxx\n"
"   \n"
"    dcl_literal l171, 0x330DBADE, 0x3F273EC0, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l171, r5.xyxx\n"
"   \n"
"    dcl_literal l172, 0x324B78B5, 0x3F295169, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l172, r5.xyxx\n"
"   \n"
"    dcl_literal l173, 0x0000003D, 0x0000003E, 0x0000003F, 0x00000040\n"
"    ieq r6, r4.w, l173\n"
"   \n"
"    dcl_literal l174, 0x332D9F9D, 0x3F2B5FCE, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.x, l174, r5.xyxx\n"
"   \n"
"    dcl_literal l175, 0x32C359F3, 0x3F2D6A02, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.y, l175, r5.xyxx\n"
"   \n"
"    dcl_literal l176, 0x32924167, 0x3F2F7015, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.z, l176, r5.xyxx\n"
"   \n"
"    dcl_literal l177, 0x3377D1CF, 0x3F317217, 0x00000000, 0x00000000\n"
"    cmov_logical r5.xy__, r6.w, l177, r5.xyxx\n"
"    round_z r4.__z_, r4.z\n"
"   \n"
"    dcl_literal l178, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"    mul_ieee r4.___w, r4.z, l178\n"
"   \n"
"    dcl_literal l179, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000\n"
"    mad_ieee r4._y__, r4.z_neg(xyzw), l179, r4.y\n"
"   \n"
"    dcl_literal l180, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r4.__z_, r4.y, l180, r4.w\n"
"    div_zeroop(infinity) r4._y__, r4.y, r4.z\n"
"    mul_ieee r4.__z_, r4.y, r4.y\n"
"   \n"
"    dcl_literal l181, 0x3C4CCCCD, 0x3C4CCCCD, 0x3C4CCCCD, 0x3C4CCCCD\n"
"   \n"
"    dcl_literal l182, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"    mad_ieee r4.___w, r4.z, l181, l182\n"
"    mul_ieee r4.__z_, r4.z, r4.w\n"
"    mad_ieee r4._y__, r4.y, r4.z, r4.y\n"
"   \n"
"    dcl_literal l183, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r1.x___, r1.x, l183\n"
"    itof r1.x___, r1.x\n"
"   \n"
"    dcl_literal l184, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r4.__z_, r1.x, l184\n"
"    add r4.___w, r1.x, r4.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l185, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r5.__z_, r0.z, l185\n"
"    add r5.___w, r0.z, r5.z_neg(xyzw)\n"
"    mul_ieee r6.x___, r0.z, r1.x\n"
"    mul_ieee r1.x___, r1.x, r0.z\n"
"    mad_ieee r6._y__, r4.z, r5.z, r1.x_neg(xyzw)\n"
"    mad_ieee r4.__z_, r4.z, r5.w, r6.y\n"
"    mad_ieee r4.__z_, r4.w, r5.z, r4.z\n"
"    mad_ieee r4.__z_, r4.w, r5.w, r4.z\n"
"   \n"
"    dcl_literal l186, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"    and r4.___w, r5.y, l186\n"
"    add r6._y__, r5.y, r4.w_neg(xyzw)\n"
"    mul_ieee r6.__z_, r5.y, r0.z\n"
"    mad_ieee r6.___w, r4.w, r5.z, r6.z_neg(xyzw)\n"
"    mad_ieee r4.___w, r4.w, r5.w, r6.w\n"
"    mad_ieee r4.___w, r6.y, r5.z, r4.w\n"
"    mad_ieee r4.___w, r6.y, r5.w, r4.w\n"
"   \n"
"    dcl_literal l187, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r5.__z_, r1.x, l187\n"
"   \n"
"    dcl_literal l188, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"   \n"
"    dcl_literal l189, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    cmov_logical r5.__z_, r5.z, l188, l189\n"
"    add r5.__z_, r1.x, r5.z\n"
"    round_z r5.__z_, r5.z\n"
"    add r1.x___, r1.x, r5.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l190, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"    mul_ieee r5.___w, r1.x, l190\n"
"    mul_ieee r6._y__, r5.w, r5.w\n"
"   \n"
"    dcl_literal l191, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"   \n"
"    dcl_literal l192, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"    mad_ieee r6.___w, r6.y, l191, l192\n"
"   \n"
"    dcl_literal l193, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"    mad_ieee r6.___w, r6.y, r6.w, l193\n"
"   \n"
"    dcl_literal l194, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"    mad_ieee r6.___w, r6.y, r6.w, l194\n"
"   \n"
"    dcl_literal l195, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"    mad_ieee r6.___w, r6.y, r6.w, l195\n"
"    mad_ieee r6._y__, r6.y_neg(xyzw), r6.w, r5.w\n"
"    mul_ieee r5.___w, r5.w, r6.y\n"
"   \n"
"    dcl_literal l196, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    add r6._y__, r6.y_neg(xyzw), l196\n"
"    div_zeroop(infinity) r5.___w, r5.w, r6.y\n"
"   \n"
"    dcl_literal l197, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"    mad_ieee r5.___w, r1.x_neg(xyzw), l197, r5.w_neg(xyzw)\n"
"   \n"
"    dcl_literal l198, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"    mad_ieee r1.x___, r1.x_neg(xyzw), l198, r5.w\n"
"   \n"
"    dcl_literal l199, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1.x___, r1.x_neg(xyzw), l199\n"
"   \n"
"    dcl_literal l200, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r5.___w, r6.z, l200\n"
"   \n"
"    dcl_literal l201, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"   \n"
"    dcl_literal l202, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    cmov_logical r5.___w, r5.w, l201, l202\n"
"   \n"
"    dcl_literal l203, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"    mad_ieee r5.___w, r6.z, l203, r5.w\n"
"    round_z r5.___w, r5.w\n"
"   \n"
"    dcl_literal l204, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"    mad_ieee r6._y__, r5.w_neg(xyzw), l204, r6.z\n"
"   \n"
"    dcl_literal l205, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"    mad_ieee r6.__z_, r5.w_neg(xyzw), l205, r6.y\n"
"    mul_ieee r6.___w, r6.z, r6.z\n"
"   \n"
"    dcl_literal l206, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"   \n"
"    dcl_literal l207, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"    mad_ieee r7.x___, r6.w, l206, l207\n"
"   \n"
"    dcl_literal l208, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"    mad_ieee r7.x___, r6.w, r7.x, l208\n"
"   \n"
"    dcl_literal l209, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"    mad_ieee r7.x___, r6.w, r7.x, l209\n"
"   \n"
"    dcl_literal l210, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"    mad_ieee r7.x___, r6.w, r7.x, l210\n"
"    mad_ieee r6.___w, r6.w_neg(xyzw), r7.x, r6.z\n"
"    mul_ieee r6.__z_, r6.z, r6.w\n"
"   \n"
"    dcl_literal l211, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    add r6.___w, r6.w_neg(xyzw), l211\n"
"    div_zeroop(infinity) r6.__z_, r6.z, r6.w\n"
"   \n"
"    dcl_literal l212, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"    mad_ieee r6.__z_, r5.w, l212, r6.z_neg(xyzw)\n"
"    add r6._y__, r6.y_neg(xyzw), r6.z\n"
"   \n"
"    dcl_literal l213, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r6._y__, r6.y_neg(xyzw), l213\n"
"   \n"
"    dcl_literal l214, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"    mad_ieee r4.__z_, r4.z, l214, r4.w\n"
"    add r4._y__, r5.x, r4.y\n"
"    mad_ieee r4.__z_, r0.z, r4.y, r4.z\n"
"   \n"
"    dcl_literal l215, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r4.___w, r4.z, l215\n"
"   \n"
"    dcl_literal l216, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"   \n"
"    dcl_literal l217, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    cmov_logical r4.___w, r4.w, l216, l217\n"
"   \n"
"    dcl_literal l218, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"    mad_ieee r4.___w, r4.z, l218, r4.w\n"
"    round_z r4.___w, r4.w\n"
"   \n"
"    dcl_literal l219, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"    mad_ieee r4.__z_, r4.w_neg(xyzw), l219, r4.z\n"
"   \n"
"    dcl_literal l220, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"    mad_ieee r5.x___, r4.w_neg(xyzw), l220, r4.z\n"
"    mul_ieee r6.__z_, r5.x, r5.x\n"
"   \n"
"    dcl_literal l221, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"   \n"
"    dcl_literal l222, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"    mad_ieee r6.___w, r6.z, l221, l222\n"
"   \n"
"    dcl_literal l223, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"    mad_ieee r6.___w, r6.z, r6.w, l223\n"
"   \n"
"    dcl_literal l224, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"    mad_ieee r6.___w, r6.z, r6.w, l224\n"
"   \n"
"    dcl_literal l225, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"    mad_ieee r6.___w, r6.z, r6.w, l225\n"
"    mad_ieee r6.__z_, r6.z_neg(xyzw), r6.w, r5.x\n"
"    mul_ieee r5.x___, r5.x, r6.z\n"
"   \n"
"    dcl_literal l226, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"    add r6.__z_, r6.z_neg(xyzw), l226\n"
"    div_zeroop(infinity) r5.x___, r5.x, r6.z\n"
"   \n"
"    dcl_literal l227, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"    mad_ieee r5.x___, r4.w, l227, r5.x_neg(xyzw)\n"
"    add r4.__z_, r4.z_neg(xyzw), r5.x\n"
"   \n"
"    dcl_literal l228, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r4.__z_, r4.z_neg(xyzw), l228\n"
"    mul_ieee r1.x___, r1.x, r6.y\n"
"    mul_ieee r1.x___, r4.z, r1.x\n"
"    add r4.__z_, r5.z, r5.w\n"
"    add r4.__z_, r4.w, r4.z\n"
"   \n"
"    dcl_literal l229, 0x44800000, 0x44800000, 0x44800000, 0x44800000\n"
"    lt r4.___w, l229, r4.z_abs\n"
"    ftoi r5.x___, r4.z_abs\n"
"   \n"
"    dcl_literal l230, 0x00000400, 0x00000400, 0x00000400, 0x00000400\n"
"    cmov_logical r4.___w, r4.w, l230, r5.x\n"
"   \n"
"    dcl_literal l231, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r4.__z_, r4.z, l231\n"
"    inegate r5.x___, r4.w\n"
"    cmov_logical r4.__z_, r4.z, r5.x, r4.w\n"
"    itof r4.___w, r4.z\n"
"   \n"
"    dcl_literal l232, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"    and r7, r1.x, l232\n"
"    itof r1.x___, r7.w\n"
"    cmov_logical r1.x___, r7.z, r7.x, r1.x\n"
"   \n"
"    dcl_literal l233, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B\n"
"    iadd r5.x___, r4.z, l233\n"
"    cmov_logical r4.__z_, r7.z, r4.z, r5.x\n"
"   \n"
"    dcl_literal l234, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"    and r5.x_z_, r1.x, l234\n"
"   \n"
"    dcl_literal l235, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r5.x___, r5.x, l235\n"
"    iadd r5.x___, r5.x, r4.z\n"
"   \n"
"    dcl_literal l236, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r4.__z_, r4.z, l236\n"
"    iadd r1.x___, r1.x, r4.z\n"
"   \n"
"    dcl_literal l237, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r4.__z_, r5.x, l237\n"
"   \n"
"    dcl_literal l238, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r5.x___, l238, r4.z\n"
"   \n"
"    dcl_literal l239, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.x___, r5.x, l239, r1.x\n"
"   \n"
"    dcl_literal l240, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r4.__z_, l240, r4.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l241, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r5.x___, r5.z, l241\n"
"   \n"
"    dcl_literal l242, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"    ilt r5.__zw, l242, r4.z\n"
"   \n"
"    dcl_literal l243, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r5.__z_, r5.z, l243, r4.z\n"
"   \n"
"    dcl_literal l244, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.__z_, r4.z, l244\n"
"   \n"
"    dcl_literal l245, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.__z_, r4.z, l245, r5.z\n"
"    ishr r4.__z_, r5.x, r4.z\n"
"    cmov_logical r1.x___, r5.w, r4.z, r1.x\n"
"   \n"
"    dcl_literal l246, 0x43960000, 0x43960000, 0x43960000, 0x43960000\n"
"    lt r4.__z_, l246, r4.w\n"
"   \n"
"    dcl_literal l247, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.x___, r4.z, l247, r1.x\n"
"    ior r1.x___, r7.y, r1.x\n"
"   \n"
"    dcl_literal l248, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    eq r4.__z_, r0.z, l248\n"
"    cmov_logical r1.x___, r4.z, r2.x, r1.x\n"
"    add r4._y__, r5.y, r4.y\n"
"    mul_ieee r0.__z_, r0.z, r4.y\n"
"   \n"
"    dcl_literal l249, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218\n"
"    mad_ieee r0.__z_, r6.x, l249, r0.z\n"
"   \n"
"    dcl_literal l250, 0x42B17218, 0x42B17218, 0x42B17218, 0x42B17218\n"
"    lt r4._y__, l250, r0.z\n"
"   \n"
"    dcl_literal l251, 0x00000000, 0x00000000, 0x7F800000, 0xFF800000\n"
"    ieq r4.__zw, r0.z, l251\n"
"    ior r4._y__, r4.y, r4.z\n"
"   \n"
"    dcl_literal l252, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.x___, r4.y, l252, r1.x\n"
"   \n"
"    dcl_literal l253, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5\n"
"    ge r0.__z_, l253, r0.z\n"
"    ior r0.__z_, r4.w, r0.z\n"
"   \n"
"    dcl_literal l254, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.x___, r0.z, l254, r1.x\n"
"endif\n"
"and r0.__z_, r3.w, r1.z\n"
"dcl_literal l255, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l256, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"cmov_logical r5, r2.x, l255, l256\n"
"and r0.__z_, r0.z, r5.w\n"
"cmov_logical r0.__z_, r0.z, r4.x_neg(xyzw), r4.x\n"
"and r3, r3, r5\n"
"dcl_literal l257, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r3.x, l257, r0.z\n"
"cmov_logical r0.__z_, r3.y, r0.x, r0.z\n"
"dcl_literal l258, 0x80000000, 0x00000000, 0x80000001, 0x00000000\n"
"ieq r1.x_z_, r2.z, l258\n"
"and r1.x_z_, r5.y, r1.xxzx\n"
"dcl_literal l259, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r1.x, l259, r0.z\n"
"dcl_literal l260, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ior r1.x___, r2.y, l260\n"
"cmov_logical r0.__z_, r1.z, r1.x, r0.z\n"
"and r0.___w, r0.w, r3.z\n"
"cmov_logical r0.__z_, r0.w, r2.y, r0.z\n"
"dcl_literal l261, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r0.___w, r0.y, l261\n"
"and r0.___w, r3.z, r0.w\n"
"cmov_logical r0.x___, r0.w, r0.x, r0.z\n"
"dcl_literal l262, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.__z_, l262, r2.w\n"
"and r0.__z_, r3.w, r0.z\n"
"dcl_literal l263, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0._y__, l263, r0.y\n"
"ior r0._y__, r0.z, r0.y\n"
"ior r0.__z_, r1.y, r1.w\n"
"ior r0._y__, r0.y, r0.z\n"
"dcl_literal l264, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r0.y, l264, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__round_f32",
"mdef(350)_out(1)_in(1)\n"
"mov r0, in0\n"
"frc r0._y__, r0.x_abs\n"
"add r0.__z_, r0.x_abs, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l0, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"lt r0._y__, r0.y, l0\n"
"\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.z, l1\n"
"cmov_logical r0._y__, r0.y, r0.z, r0.w\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x80000000\n"
"and r0.__zw, r0.x, l2\n"
"\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r1.x___, r0.z, l3\n"
"cmov_logical r0._y__, r1.x, r0.x, r0.y\n"
"\n"
"dcl_literal l4, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l4\n"
"\n"
"dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l5, r0.z\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"ior r0.x___, r0.w, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__rsqrt_f32",
"mdef(351)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.__z_, r0.z, l1\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r0.y, l2\n"
"and r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r0.x, l3\n"
"and r0.___w, r0.w, r1.x\n"
"ior r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l4, r0.y\n"
"ior r0.__z_, r0.z, r0.y\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.__z_, r0.x, l5\n"
"    itof r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l6, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r1.xy__, r0.z, l6\n"
"    \n"
"    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r1.x, l7\n"
"    \n"
"    dcl_literal l8, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    iadd r0.__z_, r0.z, l8\n"
"    \n"
"    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.x___, r1.y, l9\n"
"    \n"
"    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.__z_, l10, r0.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r1._y__, l11, r0.z\n"
"    \n"
"    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.__z_, r1.y, l12, r0.z\n"
"    \n"
"    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1._y__, l13, r0.z\n"
"    ishr r1.__z_, r1.x, r0.z\n"
"    inegate r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.__z_, r0.z, l14\n"
"    iadd r0.__z_, r1.x, r0.z\n"
"    cmov_logical r0.__z_, r1.y, r1.z, r0.z\n"
"    rsq_vec r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    and r1.x___, r0.z, l15\n"
"    if_logicalz r1.x\n"
"        \n"
"        dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1._y__, r0.z, l16\n"
"        itof r1._y__, r1.y\n"
"        \n"
"        dcl_literal l17, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"        and r1._yz_, r1.y, l17\n"
"        \n"
"        dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1._y__, r1.y, l18\n"
"        \n"
"        dcl_literal l19, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C\n"
"        iadd r1._y__, r1.y, l19\n"
"        \n"
"        dcl_literal l20, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.__z_, r1.z, l20\n"
"        \n"
"        dcl_literal l21, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1._y__, l21, r1.y_neg(xyzw)\n"
"        \n"
"        dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r1.___w, l22, r1.y\n"
"        \n"
"        dcl_literal l23, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1._y__, r1.w, l23, r1.y\n"
"        \n"
"        dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r1.___w, l24, r1.y\n"
"        ishr r2.x___, r1.z, r1.y\n"
"        inegate r1._y__, r1.y\n"
"        \n"
"        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1._y__, r1.y, l25\n"
"        iadd r1._y__, r1.z, r1.y\n"
"        cmov_logical r1._y__, r1.w, r2.x, r1.y\n"
"    else\n"
"        \n"
"        dcl_literal l26, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r0.__z_, r0.z, l26\n"
"        \n"
"        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.x___, r1.x, l27\n"
"        \n"
"        dcl_literal l28, 0x06000000, 0x06000000, 0x06000000, 0x06000000\n"
"        iadd r0.__z_, r0.z, l28\n"
"        \n"
"        dcl_literal l29, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D\n"
"        iadd r1.x___, r1.x, l29\n"
"        \n"
"        dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r1.x___, l30, r1.x\n"
"        \n"
"        dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r1._y__, r1.x, l31, r0.z\n"
"    endif\n"
"    \n"
"    dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"    cmov_logical r0.__z_, r0.w, l32, r1.y\n"
"    \n"
"    dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"    ior r0.___w, r0.x, l33\n"
"    cmov_logical r0.x___, r0.y, r0.w, r0.z\n"
"else\n"
"    rsq_vec r0.x___, r0.x\n"
"endif\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sabs_diff_i16",
"mdef(352)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"imax r0.___w, r0.w_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l1, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.x___, r0.w, l1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sabs_diff_i32",
"mdef(353)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imin r0.___w, r0.y, r0.x\n"
"imax r1.x___, r0.y, r0.x\n"
"iadd r0.x___, r1.x, r0.w_neg(xyzw)\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sabs_diff_i8",
"mdef(354)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"imax r0.___w, r0.w_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l0, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.x___, r0.w, l0\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sabs_i16",
"mdef(355)_out(1)_in(1)\n"
"mov r0, in0\n"
"imax r0.x___, r0.x_neg(xyzw), r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sabs_i32",
"mdef(356)_out(1)_in(1)\n"
"mov r0, in0\n"
"imax r0.x___, r0.x_neg(xyzw), r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sabs_i8",
"mdef(357)_out(1)_in(1)\n"
"mov r0, in0\n"
"imax r0.x___, r0.x_neg(xyzw), r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sadd_sat_i16",
"mdef(358)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l3, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000\n"
"imax r0.___w, r0.w, l3\n"
"\n"
"dcl_literal l4, 0x00007FFF, 0x00007FFF, 0x00007FFF, 0x00007FFF\n"
"imin r0.x___, r0.w, l4\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sadd_sat_i8",
"mdef(359)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l0, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80\n"
"imax r0.___w, r0.w, l0\n"
"\n"
"dcl_literal l1, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"imin r1.x___, r0.w, l1\n"
"mov r0.x___, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sadd_sat_u32",
"mdef(360)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, l6, r0.y\n"
"ilt r1._y__, r0.w, r0.x\n"
"and r1.x___, r1.x, r1.y\n"
"\n"
"dcl_literal l7, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"cmov_logical r1.x___, r1.x, l7, r0.w\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, r0.y, l8\n"
"ilt r0.___w, r0.x, r0.w\n"
"and r0.___w, r1.y, r0.w\n"
"\n"
"dcl_literal l9, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.x___, r0.w, l9, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sall_i16",
"mdef(361)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000\n"
"and r0.__z_, r0.x, l3\n"
"\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l4, l5\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sall_i32",
"mdef(362)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r0.x___, r0.x, l6\n"
"\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l7, l8\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sall_i8",
"mdef(363)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l1, l2\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sany_i16",
"mdef(364)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000\n"
"and r0.__z_, r0.x, l3\n"
"\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l4, l5\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sany_i32",
"mdef(365)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r0.x___, r0.x, l6\n"
"\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l7, l8\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sany_i8",
"mdef(366)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l1, l2\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sclz_i16",
"mdef(367)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l10, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.x, l10\n"
"\n"
"dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l11\n"
"\n"
"dcl_literal l12, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l12\n"
"\n"
"dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l13\n"
"\n"
"dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l14, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l15\n"
"\n"
"dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l16\n"
"\n"
"dcl_literal l17, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.___w, r0.w, l17\n"
"\n"
"dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.x___, r0.z, r0.w, l18\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sclz_i32",
"mdef(368)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l19, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r0.__z_, r0.x, l19\n"
"\n"
"dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.z, l20\n"
"\n"
"dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l21\n"
"\n"
"dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l22\n"
"\n"
"dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l23\n"
"\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l24, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l25\n"
"\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l26\n"
"\n"
"dcl_literal l27, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.___w, r0.w, l27\n"
"\n"
"dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.__z_, r0.z, r0.w, l28\n"
"\n"
"dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.___w, r0.x, l29\n"
"\n"
"dcl_literal l30, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1.x___, r0.w, l30\n"
"\n"
"dcl_literal l31, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.x___, r1.x, l31\n"
"\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l32\n"
"\n"
"dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1.x___, l33, r1.x_neg(xyzw)\n"
"\n"
"dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l34\n"
"\n"
"dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1.x___, r1.x, l35\n"
"\n"
"dcl_literal l36, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r1.x___, r1.x, l36\n"
"\n"
"dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.___w, r0.w, r1.x, l37\n"
"\n"
"dcl_literal l38, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ieq r1.x___, r0.z, l38\n"
"iadd r0.___w, r0.z, r0.w\n"
"cmov_logical r0.x___, r1.x, r0.w, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sclz_i8",
"mdef(369)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l1\n"
"\n"
"dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l2\n"
"\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l3\n"
"\n"
"dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l4, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l5\n"
"\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l6\n"
"\n"
"dcl_literal l7, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.___w, r0.w, l7\n"
"\n"
"dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.__z_, r0.z, r0.w, l8\n"
"\n"
"dcl_literal l9, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.x___, r0.z, l9\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sdiv_i16",
"mdef(370)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x00008000, 0x00000000\n"
"and r1.xyz_, r0.xyxx, l13\n"
"dcl_literal l14, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l14\n"
"dcl_literal l15, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"ior r1.___w, r1.x, l15\n"
"cmov_logical r1.x___, r1.z, r1.w, r1.x\n"
"dcl_literal l16, 0x00008000, 0x00008000, 0x00008000, 0x00008000\n"
"and r1.__z_, r0.w, l16\n"
"dcl_literal l17, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"ior r1.___w, r0.w, l17\n"
"cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"ixor r1.__z_, r1.x, r0.w\n"
"imax r1.x___, r1.x, r1.x_neg(xyzw)\n"
"imax r0.___w, r0.w, r0.w_neg(xyzw)\n"
"udiv r0.___w, r1.x, r0.w\n"
"inegate r1.x___, r0.w\n"
"dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r1.__z_, r1.z, l18\n"
"cmov_logical r0.___w, r1.z, r1.x, r0.w\n"
"dcl_literal l19, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.___w, r0.w, l19\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r1.y, r0.w, l20\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sdiv_i32",
"mdef(371)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l25, 0, 0, 0, 0\n"
"mov r0._y__, r1.x\n"
"ilt r1.xy, r0, l25\n"
"iadd r0.xy, r0, r1\n"
"ixor r0.xy, r0, r1\n"
"udiv r0.x, r0.x, r0.y\n"
"ixor r1.x, r1.x, r1.y\n"
"iadd r0.x, r0.x, r1.x\n"
"ixor r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sdiv_i64",
"mdef(372)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0.__zw, r1.yyxy\n"
"dcl_literal l1, 0x80000000, 0x80000000, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.ywyy, l1\n"
"inegate r2, r0\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r1.__zw, l2, r2.zzzx\n"
"iadd r1.__zw, r1.zzzw, r2.wwwy\n"
"cmov_logical r0._y_w, r1.yyyx, r1.zzzw, r0.wwwy\n"
"cmov_logical r0.x_z_, r1.xxyx, r2.xxzx, r0.xxzx\n"
"ult r1.__z_, r0.w, r0.y\n"
"ieq r1.___w, r0.w, r0.y\n"
"ult r2.x___, r0.x, r0.z\n"
"and r2.x___, r1.w, r2.x\n"
"ior r2.x___, r1.z, r2.x\n"
"dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2.x___, r2.x, l3, l4\n"
"ieq r2._y__, r0.x, r0.z\n"
"and r2._y__, r1.w, r2.y\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.x___, r2.y, l5, r2.x\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r2._yz_, r0.yyzy, l6\n"
"and r2.__z_, r2.z, r2.y\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.__z_, r2.z, l7, r0.z\n"
"dcl_literal l8, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3.xy__, r0.ywyy, l8\n"
"dcl_literal l9, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.__zw, r0.yyyw, l9\n"
"dcl_literal l10, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r2.___w, r0.z, l10\n"
"ior r2.___w, r3.z, r2.w\n"
"dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r2.w, l11\n"
"dcl_literal l12, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.__z_, r0.z, l12\n"
"dcl_literal l13, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000\n"
"ior r4.xy__, r3.xyxx, l13\n"
"dcl_literal l14, 0xBF800000, 0xBF800000, 0x00000000, 0x00000000\n"
"add r4.xy__, r4.xyxx, l14\n"
"dcl_literal l15, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"and r4.xy__, r4.xyxx, l15\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000\n"
"iadd r4.xy__, l16, r4.xyxx_neg(xyzw)\n"
"dcl_literal l17, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"and r4.xy__, r4.xyxx, l17\n"
"dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.xy__, r4.xyxx, l18\n"
"dcl_literal l19, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"iadd r4.xy__, r4.xyxx, l19\n"
"dcl_literal l20, 0x00000017, 0x00000017, 0x00000000, 0x00000000\n"
"cmov_logical r3.xy__, r3.xyxx, r4.xyxx, l20\n"
"dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r2.w, l21\n"
"dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l22\n"
"dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l23\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l24, r4.x_neg(xyzw)\n"
"dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l25\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l26\n"
"dcl_literal l27, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l27\n"
"dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r2.___w, r2.w, r4.x, l28\n"
"dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.z, l29\n"
"dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l30\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l31\n"
"dcl_literal l32, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l32, r4.x_neg(xyzw)\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l33\n"
"dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l34\n"
"dcl_literal l35, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r4.x___, r4.x, l35\n"
"dcl_literal l36, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.__z_, r3.z, r4.x, l36\n"
"dcl_literal l37, 0x00000017, 0x00000017, 0x00000000, 0x00000000\n"
"ieq r4.xy__, r3.xyxx, l37\n"
"iadd r2.___w, r3.x, r2.w\n"
"cmov_logical r3.x___, r4.x, r2.w, r3.x\n"
"dcl_literal l38, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r4.x___, r2.w, l38\n"
"iadd r2.___w, r2.w, r3.z\n"
"cmov_logical r2.___w, r4.x, r2.w, r3.x\n"
"dcl_literal l39, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ige r3.x___, r2.w, l39\n"
"dcl_literal l40, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3.__z_, r2.w, l40\n"
"dcl_literal l41, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F\n"
"cmov_logical r3.x___, r3.x, r3.z, l41\n"
"ult r3.__z_, r0.x, r0.z\n"
"and r3.__z_, r1.w, r3.z\n"
"ior r1.__z_, r1.z, r3.z\n"
"dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.__z_, r1.z, l42, l43\n"
"ieq r3.__z_, r0.x, r0.z\n"
"and r1.___w, r1.w, r3.z\n"
"dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.__z_, r1.w, l44, r1.z\n"
"dcl_literal l45, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r1.___w, r0.x, l45\n"
"ior r1.___w, r3.w, r1.w\n"
"dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.___w, r1.w, l46\n"
"dcl_literal l47, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.__z_, r0.x, l47\n"
"dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r1.w, l48\n"
"dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l49\n"
"dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l50\n"
"dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l51, r3.w_neg(xyzw)\n"
"dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l52\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l53\n"
"dcl_literal l54, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l54\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r1.___w, r1.w, r3.w, l55\n"
"dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.z, l56\n"
"dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l57\n"
"dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l58\n"
"dcl_literal l59, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l59, r3.w_neg(xyzw)\n"
"dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l60\n"
"dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l61\n"
"dcl_literal l62, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.___w, r3.w, l62\n"
"dcl_literal l63, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.__z_, r3.z, r3.w, l63\n"
"iadd r1.___w, r3.y, r1.w\n"
"cmov_logical r3._y__, r4.y, r1.w, r3.y\n"
"dcl_literal l64, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.___w, r1.w, l64\n"
"iadd r1.___w, r1.w, r3.z\n"
"cmov_logical r1.___w, r3.w, r1.w, r3.y\n"
"ilt r3._y__, r1.w, r2.w\n"
"ieq r3.__z_, r2.w, r1.w\n"
"dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r1.z, l65\n"
"and r1.__z_, r3.z, r1.z\n"
"ior r1.__z_, r3.y, r1.z\n"
"iadd r3._y__, r2.w, r1.w_neg(xyzw)\n"
"dcl_literal l66, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.__z_, r1.z, r3.y, l66\n"
"ilt r3._y__, r3.x, r1.z\n"
"iadd r3.__z_, r1.z, r3.x_neg(xyzw)\n"
"and r3._y__, r3.y, r3.z\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.__z_, r1.z, l67\n"
"dcl_literal l68, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3._y__, r3.z, l68, r3.y\n"
"dcl_literal l69, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r1.z, l69\n"
"if_logicalnz r1.z\n"
"   \n"
"    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.__z_, r3.y, l70\n"
"   \n"
"    dcl_literal l71, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.___w, r3.y, l71\n"
"    cmov_logical r3.___w, r3.z, r3.w, r3.y\n"
"   \n"
"    dcl_literal l72, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.x___, r3.y, l72\n"
"   \n"
"    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4._y__, l73, r3.w_neg(xyzw)\n"
"    ushr r4._y__, r0.z, r4.y\n"
"    ishl r3.___w, r0.z, r3.w\n"
"    ishl r4.x___, r0.y, r4.x\n"
"    ior r4.x___, r4.y, r4.x\n"
"    cmov_logical r4.x___, r3.z, r0.z, r4.x\n"
"   \n"
"    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.__z_, r3.z, l74, r3.w\n"
"    cmov_logical r3.___w, r3.y, r4.x, r0.y\n"
"    cmov_logical r3.__z_, r3.y, r3.z, r0.z\n"
"   \n"
"    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r4.x___, r1.w, l75\n"
"   \n"
"    dcl_literal l76, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4._y__, r1.w, l76\n"
"    cmov_logical r4._y__, r4.x, r4.y, r1.w\n"
"   \n"
"    dcl_literal l77, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.__z_, r1.w, l77\n"
"   \n"
"    dcl_literal l78, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4._y__, l78, r4.y_neg(xyzw)\n"
"    ushr r4.___w, r0.x, r4.y\n"
"    ishl r5.x___, r0.w, r4.z\n"
"    ior r4.___w, r4.w, r5.x\n"
"    cmov_logical r4.___w, r4.x, r0.x, r4.w\n"
"    cmov_logical r4.___w, r1.w, r4.w, r0.w\n"
"    ushr r4._y__, r3.z, r4.y\n"
"    ishl r4.__z_, r3.w, r4.z\n"
"    ior r4._y__, r4.y, r4.z\n"
"    cmov_logical r4.x___, r4.x, r3.z, r4.y\n"
"    cmov_logical r1.___w, r1.w, r4.x, r3.w\n"
"    udiv r4.x___, r4.w, r1.w\n"
"    umul r4._y__, r4.x, r1.w\n"
"    ilt r4.__z_, r4.w, r4.y\n"
"    iadd r5.x___, r4.y, r4.w_neg(xyzw)\n"
"    iadd r5.x___, r5.x, r1.w\n"
"   \n"
"    dcl_literal l79, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r5.x___, r5.x, l79\n"
"    iadd r4._y__, r4.w, r4.y_neg(xyzw)\n"
"    cmov_logical r4._y__, r4.z, r5.x, r4.y\n"
"    udiv r1.___w, r4.y, r1.w\n"
"    iadd r4._y__, r4.x, r1.w_neg(xyzw)\n"
"    iadd r1.___w, r4.x, r1.w\n"
"    cmov_logical r1.___w, r4.z, r4.y, r1.w\n"
"   \n"
"    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r3.z, l80\n"
"   \n"
"    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r3.z, l81\n"
"   \n"
"    dcl_literal l82, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r1.w, l82\n"
"   \n"
"    dcl_literal l83, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r1.w, l83\n"
"    umul r5.x___, r4.y, r4.w\n"
"    umul r4._y__, r4.y, r4.z\n"
"    umul r5._y__, r4.x, r4.w\n"
"    umul r4.x___, r4.x, r4.z\n"
"   \n"
"    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.__z_, r4.x, l84\n"
"   \n"
"    dcl_literal l85, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.___w, r5.y, l85\n"
"    iadd r5.__z_, r5.z, r5.w\n"
"    iadd r4._y__, r4.y, r5.z\n"
"   \n"
"    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.__z_, r4.y, l86\n"
"    iadd r5.x___, r5.x, r5.z\n"
"   \n"
"    dcl_literal l87, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5._y__, r5.y, l87\n"
"    iadd r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l88, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r4._y__, r4.y, l88\n"
"   \n"
"    dcl_literal l89, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r4.x, l89\n"
"    ior r4.x___, r4.y, r4.x\n"
"   \n"
"    dcl_literal l90, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4._y__, r3.w, l90\n"
"   \n"
"    dcl_literal l91, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5._y__, r3.w, l91\n"
"    umul r5._y__, r5.y, r4.z\n"
"    umul r4._y_w, r4.y, r4.zzzw\n"
"   \n"
"    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r4.y, l92\n"
"   \n"
"    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.___w, r4.w, l93\n"
"    iadd r4.__z_, r4.z, r4.w\n"
"    iadd r4.__z_, r5.y, r4.z\n"
"   \n"
"    dcl_literal l94, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r4.__z_, r4.z, l94\n"
"   \n"
"    dcl_literal l95, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4._y__, r4.y, l95\n"
"    ior r4._y__, r4.z, r4.y\n"
"    iadd r4.__z_, r4.y, r5.x\n"
"    ult r4._y__, r4.z, r4.y\n"
"    ult r4.___w, r0.w, r4.z\n"
"    ieq r5.x___, r0.w, r4.z\n"
"    ult r5._y__, r0.x, r4.x\n"
"    and r5._y__, r5.x, r5.y\n"
"    ior r4.___w, r4.w, r5.y\n"
"   \n"
"    dcl_literal l96, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l97, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4.___w, r4.w, l96, l97\n"
"    ieq r5._y__, r0.x, r4.x\n"
"    and r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.___w, r5.x, l98, r4.w\n"
"   \n"
"    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.___w, r4.w, l99\n"
"    ior r4._y__, r4.y, r4.w\n"
"   \n"
"    dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.___w, r1.w, l100\n"
"    cmov_logical r1.___w, r4.y, r4.w, r1.w\n"
"    iadd r3.__z_, r4.x, r3.z_neg(xyzw)\n"
"    ult r4.___w, r4.x, r3.z\n"
"    iadd r4.___w, r4.z, r4.w\n"
"    iadd r3.___w, r4.w, r3.w_neg(xyzw)\n"
"    cmov_logical r3.__zw, r4.y, r3.zzzw, r4.xxxz\n"
"    iadd r4._y__, r0.x, r3.z_neg(xyzw)\n"
"    ult r3.__z_, r0.x, r4.y\n"
"    iadd r3.__z_, r0.w, r3.z\n"
"    iadd r4.x___, r3.z, r3.w_neg(xyzw)\n"
"else\n"
"    mov r4.xy__, r0.wxww\n"
"   \n"
"    dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r1.___w, l101\n"
"endif\n"
"ult r3.__z_, r4.x, r0.y\n"
"ieq r3.___w, r4.x, r0.y\n"
"ult r4.__z_, r4.y, r0.z\n"
"and r4.__z_, r3.w, r4.z\n"
"ior r3.__z_, r3.z, r4.z\n"
"dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l103, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r3.__z_, r3.z, l102, l103\n"
"ieq r4.__z_, r4.y, r0.z\n"
"and r3.___w, r3.w, r4.z\n"
"dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.__z_, r3.w, l104, r3.z\n"
"dcl_literal l105, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.___w, r4.x, l105\n"
"dcl_literal l106, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r4.__z_, r4.x, l106\n"
"dcl_literal l107, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r4.___w, r4.y, l107\n"
"ior r3.___w, r3.w, r4.w\n"
"dcl_literal l108, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3.___w, r3.w, l108\n"
"dcl_literal l109, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r4.___w, r4.y, l109\n"
"dcl_literal l110, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.x___, r4.z, l110\n"
"dcl_literal l111, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.x___, r5.x, l111\n"
"dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l112\n"
"dcl_literal l113, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.x___, l113, r5.x_neg(xyzw)\n"
"dcl_literal l114, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l114\n"
"dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.x___, r5.x, l115\n"
"dcl_literal l116, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.x___, r5.x, l116\n"
"dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r4.__z_, r4.z, r5.x, l117\n"
"dcl_literal l118, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.x___, r3.w, l118\n"
"dcl_literal l119, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.x___, r5.x, l119\n"
"dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l120\n"
"dcl_literal l121, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.x___, l121, r5.x_neg(xyzw)\n"
"dcl_literal l122, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l122\n"
"dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.x___, r5.x, l123\n"
"dcl_literal l124, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.x___, r5.x, l124\n"
"dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.___w, r3.w, r5.x, l125\n"
"dcl_literal l126, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.x___, r4.w, l126\n"
"dcl_literal l127, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.x___, r5.x, l127\n"
"dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l128\n"
"dcl_literal l129, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.x___, l129, r5.x_neg(xyzw)\n"
"dcl_literal l130, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l130\n"
"dcl_literal l131, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.x___, r5.x, l131\n"
"dcl_literal l132, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r5.x___, r5.x, l132\n"
"dcl_literal l133, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r4.___w, r4.w, r5.x, l133\n"
"dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r5.x___, r4.z, l134\n"
"iadd r3.___w, r4.z, r3.w\n"
"cmov_logical r4.__z_, r5.x, r3.w, r4.z\n"
"dcl_literal l135, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r5.x___, r3.w, l135\n"
"iadd r3.___w, r3.w, r4.w\n"
"cmov_logical r3.___w, r5.x, r3.w, r4.z\n"
"ilt r4.__z_, r3.w, r2.w\n"
"ieq r4.___w, r2.w, r3.w\n"
"dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r3.__z_, r3.z, l136\n"
"and r3.__z_, r4.w, r3.z\n"
"ior r3.__z_, r4.z, r3.z\n"
"and r1.__z_, r1.z, r3.z\n"
"iadd r3.__z_, r2.w, r3.w_neg(xyzw)\n"
"dcl_literal l137, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.__z_, r1.z, r3.z, l137\n"
"ilt r3.__z_, r3.x, r1.z\n"
"iadd r4.__z_, r1.z, r3.x_neg(xyzw)\n"
"and r3.__z_, r3.z, r4.z\n"
"dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.__z_, r1.z, l138\n"
"dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.__z_, r4.z, l139, r3.z\n"
"dcl_literal l140, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r1.z, l140\n"
"if_logicalnz r1.z\n"
"   \n"
"    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r4.__z_, r3.z, l141\n"
"   \n"
"    dcl_literal l142, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4.___w, r3.z, l142\n"
"    cmov_logical r4.___w, r4.z, r4.w, r3.z\n"
"   \n"
"    dcl_literal l143, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.x___, r3.z, l143\n"
"   \n"
"    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5._y__, l144, r4.w_neg(xyzw)\n"
"    ushr r5._y__, r0.z, r5.y\n"
"    ishl r4.___w, r0.z, r4.w\n"
"    ishl r5.x___, r0.y, r5.x\n"
"    ior r5.x___, r5.y, r5.x\n"
"    cmov_logical r5.x___, r4.z, r0.z, r5.x\n"
"   \n"
"    dcl_literal l145, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.__z_, r4.z, l145, r4.w\n"
"    cmov_logical r4.___w, r3.z, r5.x, r0.y\n"
"    cmov_logical r4.__z_, r3.z, r4.z, r0.z\n"
"   \n"
"    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r5.x___, r3.w, l146\n"
"   \n"
"    dcl_literal l147, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r5._y__, r3.w, l147\n"
"    cmov_logical r5._y__, r5.x, r5.y, r3.w\n"
"   \n"
"    dcl_literal l148, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.__z_, r3.w, l148\n"
"   \n"
"    dcl_literal l149, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5._y__, l149, r5.y_neg(xyzw)\n"
"    ushr r5.___w, r4.y, r5.y\n"
"    ishl r6.x___, r4.x, r5.z\n"
"    ior r5.___w, r5.w, r6.x\n"
"    cmov_logical r5.___w, r5.x, r4.y, r5.w\n"
"    cmov_logical r5.___w, r3.w, r5.w, r4.x\n"
"    ushr r5._y__, r4.z, r5.y\n"
"    ishl r5.__z_, r4.w, r5.z\n"
"    ior r5._y__, r5.y, r5.z\n"
"    cmov_logical r5.x___, r5.x, r4.z, r5.y\n"
"    cmov_logical r3.___w, r3.w, r5.x, r4.w\n"
"    udiv r5.x___, r5.w, r3.w\n"
"    umul r5._y__, r5.x, r3.w\n"
"    ilt r5.__z_, r5.w, r5.y\n"
"    iadd r6.x___, r5.y, r5.w_neg(xyzw)\n"
"    iadd r6.x___, r6.x, r3.w\n"
"   \n"
"    dcl_literal l150, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r6.x___, r6.x, l150\n"
"    iadd r5._y__, r5.w, r5.y_neg(xyzw)\n"
"    cmov_logical r5._y__, r5.z, r6.x, r5.y\n"
"    udiv r3.___w, r5.y, r3.w\n"
"    iadd r5._y__, r5.x, r3.w_neg(xyzw)\n"
"    iadd r3.___w, r5.x, r3.w\n"
"    cmov_logical r3.___w, r5.z, r5.y, r3.w\n"
"   \n"
"    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r4.z, l151\n"
"   \n"
"    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5._y__, r4.z, l152\n"
"   \n"
"    dcl_literal l153, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.__z_, r3.w, l153\n"
"   \n"
"    dcl_literal l154, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r3.w, l154\n"
"    umul r6.x___, r5.y, r5.w\n"
"    umul r5._y__, r5.y, r5.z\n"
"    umul r6._y__, r5.x, r5.w\n"
"    umul r5.x___, r5.x, r5.z\n"
"   \n"
"    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.__z_, r5.x, l155\n"
"   \n"
"    dcl_literal l156, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6.___w, r6.y, l156\n"
"    iadd r6.__z_, r6.z, r6.w\n"
"    iadd r5._y__, r5.y, r6.z\n"
"   \n"
"    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.__z_, r5.y, l157\n"
"    iadd r6.x___, r6.x, r6.z\n"
"   \n"
"    dcl_literal l158, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r6.y, l158\n"
"    iadd r6.x___, r6.x, r6.y\n"
"   \n"
"    dcl_literal l159, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r5._y__, r5.y, l159\n"
"   \n"
"    dcl_literal l160, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r5.x, l160\n"
"    ior r5.x___, r5.y, r5.x\n"
"   \n"
"    dcl_literal l161, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r4.w, l161\n"
"   \n"
"    dcl_literal l162, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r4.w, l162\n"
"    umul r6._y__, r6.y, r5.z\n"
"    umul r5._y_w, r5.y, r5.zzzw\n"
"   \n"
"    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.__z_, r5.y, l163\n"
"   \n"
"    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.___w, r5.w, l164\n"
"    iadd r5.__z_, r5.z, r5.w\n"
"    iadd r5.__z_, r6.y, r5.z\n"
"   \n"
"    dcl_literal l165, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r5.__z_, r5.z, l165\n"
"   \n"
"    dcl_literal l166, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r5.y, l166\n"
"    ior r5._y__, r5.z, r5.y\n"
"    iadd r5.__z_, r5.y, r6.x\n"
"    ult r5._y__, r5.z, r5.y\n"
"    ult r5.___w, r4.x, r5.z\n"
"    ieq r6.x___, r4.x, r5.z\n"
"    ult r6._y__, r4.y, r5.x\n"
"    and r6._y__, r6.x, r6.y\n"
"    ior r5.___w, r5.w, r6.y\n"
"   \n"
"    dcl_literal l167, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l168, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r5.___w, r5.w, l167, l168\n"
"    ieq r6._y__, r4.y, r5.x\n"
"    and r6.x___, r6.x, r6.y\n"
"   \n"
"    dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r5.___w, r6.x, l169, r5.w\n"
"   \n"
"    dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5.___w, r5.w, l170\n"
"    ior r5._y__, r5.y, r5.w\n"
"   \n"
"    dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r5.___w, r3.w, l171\n"
"    cmov_logical r3.___w, r5.y, r5.w, r3.w\n"
"    iadd r4.__z_, r5.x, r4.z_neg(xyzw)\n"
"    ult r5.___w, r5.x, r4.z\n"
"    iadd r5.___w, r5.z, r5.w\n"
"    iadd r4.___w, r5.w, r4.w_neg(xyzw)\n"
"    cmov_logical r4.__zw, r5.y, r4.zzzw, r5.xxxz\n"
"    iadd r4.__z_, r4.y, r4.z_neg(xyzw)\n"
"    ult r5.x___, r4.y, r4.z\n"
"    iadd r5.x___, r4.x, r5.x\n"
"    iadd r4.x___, r5.x, r4.w_neg(xyzw)\n"
"    mov r4.xy__, r4.xzxx\n"
"else\n"
"   \n"
"    dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r3.___w, l172\n"
"endif\n"
"ult r4.__z_, r4.x, r0.y\n"
"ieq r4.___w, r4.x, r0.y\n"
"ult r5.x___, r4.y, r0.z\n"
"and r5.x___, r4.w, r5.x\n"
"ior r4.__z_, r4.z, r5.x\n"
"dcl_literal l173, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l174, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r4.__z_, r4.z, l173, l174\n"
"ieq r5.x___, r4.y, r0.z\n"
"and r4.___w, r4.w, r5.x\n"
"dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.__z_, r4.w, l175, r4.z\n"
"dcl_literal l176, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r4.___w, r4.x, l176\n"
"dcl_literal l177, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r5.x___, r4.x, l177\n"
"dcl_literal l178, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r5._y__, r4.y, l178\n"
"ior r4.___w, r4.w, r5.y\n"
"dcl_literal l179, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r4.___w, r4.w, l179\n"
"dcl_literal l180, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r5._y__, r4.y, l180\n"
"dcl_literal l181, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.__z_, r5.x, l181\n"
"dcl_literal l182, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.__z_, r5.z, l182\n"
"dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l183\n"
"dcl_literal l184, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.__z_, l184, r5.z_neg(xyzw)\n"
"dcl_literal l185, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l185\n"
"dcl_literal l186, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.__z_, r5.z, l186\n"
"dcl_literal l187, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.__z_, r5.z, l187\n"
"dcl_literal l188, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r5.x___, r5.x, r5.z, l188\n"
"dcl_literal l189, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.__z_, r4.w, l189\n"
"dcl_literal l190, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.__z_, r5.z, l190\n"
"dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l191\n"
"dcl_literal l192, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.__z_, l192, r5.z_neg(xyzw)\n"
"dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l193\n"
"dcl_literal l194, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.__z_, r5.z, l194\n"
"dcl_literal l195, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.__z_, r5.z, l195\n"
"dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r4.___w, r4.w, r5.z, l196\n"
"dcl_literal l197, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.__z_, r5.y, l197\n"
"dcl_literal l198, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.__z_, r5.z, l198\n"
"dcl_literal l199, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l199\n"
"dcl_literal l200, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.__z_, l200, r5.z_neg(xyzw)\n"
"dcl_literal l201, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l201\n"
"dcl_literal l202, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.__z_, r5.z, l202\n"
"dcl_literal l203, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r5.__z_, r5.z, l203\n"
"dcl_literal l204, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r5._y__, r5.y, r5.z, l204\n"
"dcl_literal l205, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r5.__z_, r5.x, l205\n"
"iadd r4.___w, r5.x, r4.w\n"
"cmov_logical r5.x___, r5.z, r4.w, r5.x\n"
"dcl_literal l206, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r5.__z_, r4.w, l206\n"
"iadd r4.___w, r4.w, r5.y\n"
"cmov_logical r4.___w, r5.z, r4.w, r5.x\n"
"ilt r5.x___, r4.w, r2.w\n"
"ieq r5._y__, r2.w, r4.w\n"
"dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r4.__z_, r4.z, l207\n"
"and r4.__z_, r5.y, r4.z\n"
"ior r4.__z_, r5.x, r4.z\n"
"and r1.__z_, r1.z, r4.z\n"
"iadd r4.__z_, r2.w, r4.w_neg(xyzw)\n"
"dcl_literal l208, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.__z_, r1.z, r4.z, l208\n"
"ilt r4.__z_, r3.x, r1.z\n"
"iadd r5.x___, r1.z, r3.x_neg(xyzw)\n"
"and r4.__z_, r4.z, r5.x\n"
"dcl_literal l209, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r5.x___, r1.z, l209\n"
"dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.__z_, r5.x, l210, r4.z\n"
"dcl_literal l211, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r1.z, l211\n"
"if_logicalnz r1.z\n"
"   \n"
"    dcl_literal l212, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r5.x___, r4.z, l212\n"
"   \n"
"    dcl_literal l213, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r5._y__, r4.z, l213\n"
"    cmov_logical r5._y__, r5.x, r5.y, r4.z\n"
"   \n"
"    dcl_literal l214, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.__z_, r4.z, l214\n"
"   \n"
"    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5.___w, l215, r5.y_neg(xyzw)\n"
"    ushr r5.___w, r0.z, r5.w\n"
"    ishl r5._y__, r0.z, r5.y\n"
"    ishl r5.__z_, r0.y, r5.z\n"
"    ior r5.__z_, r5.w, r5.z\n"
"    cmov_logical r5.__z_, r5.x, r0.z, r5.z\n"
"   \n"
"    dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r5.x___, r5.x, l216, r5.y\n"
"    cmov_logical r5.xy__, r4.z, r5.xzxx, r0.zyzz\n"
"   \n"
"    dcl_literal l217, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r5.__z_, r4.w, l217\n"
"   \n"
"    dcl_literal l218, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r5.___w, r4.w, l218\n"
"    cmov_logical r5.___w, r5.z, r5.w, r4.w\n"
"   \n"
"    dcl_literal l219, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r6.x___, r4.w, l219\n"
"   \n"
"    dcl_literal l220, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5.___w, l220, r5.w_neg(xyzw)\n"
"    ushr r6._y__, r4.y, r5.w\n"
"    ishl r6.__z_, r4.x, r6.x\n"
"    ior r6._y__, r6.y, r6.z\n"
"    cmov_logical r6._y__, r5.z, r4.y, r6.y\n"
"    cmov_logical r6._y__, r4.w, r6.y, r4.x\n"
"    ushr r5.___w, r5.x, r5.w\n"
"    ishl r6.x___, r5.y, r6.x\n"
"    ior r5.___w, r5.w, r6.x\n"
"    cmov_logical r5.__z_, r5.z, r5.x, r5.w\n"
"    cmov_logical r4.___w, r4.w, r5.z, r5.y\n"
"    udiv r5.__z_, r6.y, r4.w\n"
"    umul r5.___w, r5.z, r4.w\n"
"    ilt r6.x___, r6.y, r5.w\n"
"    iadd r6.__z_, r5.w, r6.y_neg(xyzw)\n"
"    iadd r6.__z_, r6.z, r4.w\n"
"   \n"
"    dcl_literal l221, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r6.__z_, r6.z, l221\n"
"    iadd r5.___w, r6.y, r5.w_neg(xyzw)\n"
"    cmov_logical r5.___w, r6.x, r6.z, r5.w\n"
"    udiv r4.___w, r5.w, r4.w\n"
"    iadd r5.___w, r5.z, r4.w_neg(xyzw)\n"
"    iadd r4.___w, r5.z, r4.w\n"
"    cmov_logical r4.___w, r6.x, r5.w, r4.w\n"
"   \n"
"    dcl_literal l222, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.__z_, r5.x, l222\n"
"   \n"
"    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r5.x, l223\n"
"   \n"
"    dcl_literal l224, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6.x___, r4.w, l224\n"
"   \n"
"    dcl_literal l225, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r4.w, l225\n"
"    umul r6.__z_, r5.w, r6.y\n"
"    umul r5.___w, r5.w, r6.x\n"
"    umul r6.___w, r5.z, r6.y\n"
"    umul r5.__z_, r5.z, r6.x\n"
"   \n"
"    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r7.x___, r5.z, l226\n"
"   \n"
"    dcl_literal l227, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r7._y__, r6.w, l227\n"
"    iadd r7.x___, r7.x, r7.y\n"
"    iadd r5.___w, r5.w, r7.x\n"
"   \n"
"    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r7.x___, r5.w, l228\n"
"    iadd r6.__z_, r6.z, r7.x\n"
"   \n"
"    dcl_literal l229, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.___w, r6.w, l229\n"
"    iadd r6.__z_, r6.z, r6.w\n"
"   \n"
"    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r5.___w, r5.w, l230\n"
"   \n"
"    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.__z_, r5.z, l231\n"
"    ior r5.__z_, r5.w, r5.z\n"
"   \n"
"    dcl_literal l232, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.___w, r5.y, l232\n"
"   \n"
"    dcl_literal l233, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.___w, r5.y, l233\n"
"    umul r6.___w, r6.w, r6.x\n"
"    umul r6._y__, r5.w, r6.y\n"
"    umul r5.___w, r5.w, r6.x\n"
"   \n"
"    dcl_literal l234, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.x___, r5.w, l234\n"
"   \n"
"    dcl_literal l235, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6._y__, r6.y, l235\n"
"    iadd r6.x___, r6.x, r6.y\n"
"    iadd r6.x___, r6.w, r6.x\n"
"   \n"
"    dcl_literal l236, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r6.x___, r6.x, l236\n"
"   \n"
"    dcl_literal l237, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.___w, r5.w, l237\n"
"    ior r5.___w, r6.x, r5.w\n"
"    iadd r6.x___, r5.w, r6.z\n"
"    ult r5.___w, r6.x, r5.w\n"
"    ult r6._y__, r4.x, r6.x\n"
"    ieq r6.__z_, r4.x, r6.x\n"
"    ult r6.___w, r4.y, r5.z\n"
"    and r6.___w, r6.z, r6.w\n"
"    ior r6._y__, r6.y, r6.w\n"
"   \n"
"    dcl_literal l238, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l239, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r6._y__, r6.y, l238, l239\n"
"    ieq r6.___w, r4.y, r5.z\n"
"    and r6.__z_, r6.z, r6.w\n"
"   \n"
"    dcl_literal l240, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r6._y__, r6.z, l240, r6.y\n"
"   \n"
"    dcl_literal l241, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r6._y__, r6.y, l241\n"
"    ior r5.___w, r5.w, r6.y\n"
"   \n"
"    dcl_literal l242, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r6._y__, r4.w, l242\n"
"    cmov_logical r4.___w, r5.w, r6.y, r4.w\n"
"    iadd r5.x___, r5.z, r5.x_neg(xyzw)\n"
"    ult r6._y__, r5.z, r5.x\n"
"    iadd r6._y__, r6.x, r6.y\n"
"    iadd r5._y__, r6.y, r5.y_neg(xyzw)\n"
"    cmov_logical r5._y__, r5.w, r5.y, r6.x\n"
"    cmov_logical r5.x___, r5.w, r5.x, r5.z\n"
"    iadd r5.x___, r4.y, r5.x_neg(xyzw)\n"
"    ult r5.__z_, r4.y, r5.x\n"
"    iadd r5.__z_, r4.x, r5.z\n"
"    iadd r4.x___, r5.z, r5.y_neg(xyzw)\n"
"    mov r4._y__, r5.x\n"
"else\n"
"   \n"
"    dcl_literal l243, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r4.___w, l243\n"
"endif\n"
"ult r5.x___, r4.x, r0.y\n"
"ieq r5._y__, r4.x, r0.y\n"
"ult r5.__z_, r4.y, r0.z\n"
"and r5.__z_, r5.y, r5.z\n"
"ior r5.x___, r5.x, r5.z\n"
"dcl_literal l244, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l245, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r5.x___, r5.x, l244, l245\n"
"ieq r5.__z_, r4.y, r0.z\n"
"and r5._y__, r5.y, r5.z\n"
"dcl_literal l246, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r5.x___, r5.y, l246, r5.x\n"
"dcl_literal l247, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r5._y__, r4.x, l247\n"
"dcl_literal l248, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r5.__z_, r4.x, l248\n"
"dcl_literal l249, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r5.___w, r4.y, l249\n"
"ior r5._y__, r5.y, r5.w\n"
"dcl_literal l250, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r5._y__, r5.y, l250\n"
"dcl_literal l251, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r5.___w, r4.y, l251\n"
"dcl_literal l252, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r6.x___, r5.z, l252\n"
"dcl_literal l253, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r6.x___, r6.x, l253\n"
"dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r6.x___, r6.x, l254\n"
"dcl_literal l255, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r6.x___, l255, r6.x_neg(xyzw)\n"
"dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r6.x___, r6.x, l256\n"
"dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r6.x___, r6.x, l257\n"
"dcl_literal l258, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r6.x___, r6.x, l258\n"
"dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r5.__z_, r5.z, r6.x, l259\n"
"dcl_literal l260, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r6.x___, r5.y, l260\n"
"dcl_literal l261, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r6.x___, r6.x, l261\n"
"dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r6.x___, r6.x, l262\n"
"dcl_literal l263, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r6.x___, l263, r6.x_neg(xyzw)\n"
"dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r6.x___, r6.x, l264\n"
"dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r6.x___, r6.x, l265\n"
"dcl_literal l266, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r6.x___, r6.x, l266\n"
"dcl_literal l267, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r5._y__, r5.y, r6.x, l267\n"
"dcl_literal l268, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r6.x___, r5.w, l268\n"
"dcl_literal l269, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r6.x___, r6.x, l269\n"
"dcl_literal l270, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r6.x___, r6.x, l270\n"
"dcl_literal l271, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r6.x___, l271, r6.x_neg(xyzw)\n"
"dcl_literal l272, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r6.x___, r6.x, l272\n"
"dcl_literal l273, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r6.x___, r6.x, l273\n"
"dcl_literal l274, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r6.x___, r6.x, l274\n"
"dcl_literal l275, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r5.___w, r5.w, r6.x, l275\n"
"dcl_literal l276, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r6.x___, r5.z, l276\n"
"iadd r5._y__, r5.z, r5.y\n"
"cmov_logical r5.__z_, r6.x, r5.y, r5.z\n"
"dcl_literal l277, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r6.x___, r5.y, l277\n"
"iadd r5._y__, r5.y, r5.w\n"
"cmov_logical r5._y__, r6.x, r5.y, r5.z\n"
"ilt r5.__z_, r5.y, r2.w\n"
"ieq r5.___w, r2.w, r5.y\n"
"dcl_literal l278, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r5.x___, r5.x, l278\n"
"and r5.x___, r5.w, r5.x\n"
"ior r5.x___, r5.z, r5.x\n"
"and r1.__z_, r1.z, r5.x\n"
"iadd r2.___w, r2.w, r5.y_neg(xyzw)\n"
"dcl_literal l279, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.__z_, r1.z, r2.w, l279\n"
"ilt r2.___w, r3.x, r1.z\n"
"iadd r3.x___, r1.z, r3.x_neg(xyzw)\n"
"and r2.___w, r2.w, r3.x\n"
"dcl_literal l280, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.x___, r1.z, l280\n"
"dcl_literal l281, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r3.x, l281, r2.w\n"
"dcl_literal l282, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.__z_, r1.z, l282\n"
"if_logicalnz r1.z\n"
"   \n"
"    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r1.__z_, r2.w, l283\n"
"   \n"
"    dcl_literal l284, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.x___, r2.w, l284\n"
"    cmov_logical r3.x___, r1.z, r3.x, r2.w\n"
"   \n"
"    dcl_literal l285, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.x___, r2.w, l285\n"
"   \n"
"    dcl_literal l286, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5.__z_, l286, r3.x_neg(xyzw)\n"
"    ushr r5.__z_, r0.z, r5.z\n"
"    ishl r3.x___, r0.z, r3.x\n"
"    ishl r5.x___, r0.y, r5.x\n"
"    ior r5.x___, r5.z, r5.x\n"
"    cmov_logical r5.x___, r1.z, r0.z, r5.x\n"
"   \n"
"    dcl_literal l287, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.__z_, r1.z, l287, r3.x\n"
"    cmov_logical r0._y__, r2.w, r5.x, r0.y\n"
"    cmov_logical r1.__z_, r2.w, r1.z, r0.z\n"
"   \n"
"    dcl_literal l288, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.x___, r5.y, l288\n"
"   \n"
"    dcl_literal l289, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r5.x___, r5.y, l289\n"
"    cmov_logical r5.x___, r3.x, r5.x, r5.y\n"
"   \n"
"    dcl_literal l290, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.__z_, r5.y, l290\n"
"   \n"
"    dcl_literal l291, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5.x___, l291, r5.x_neg(xyzw)\n"
"    ushr r5.___w, r4.y, r5.x\n"
"    ishl r6.x___, r4.x, r5.z\n"
"    ior r5.___w, r5.w, r6.x\n"
"    cmov_logical r5.___w, r3.x, r4.y, r5.w\n"
"    cmov_logical r5.___w, r5.y, r5.w, r4.x\n"
"    ushr r5.x___, r1.z, r5.x\n"
"    ishl r5.__z_, r0.y, r5.z\n"
"    ior r5.x___, r5.x, r5.z\n"
"    cmov_logical r3.x___, r3.x, r1.z, r5.x\n"
"    cmov_logical r3.x___, r5.y, r3.x, r0.y\n"
"    udiv r5.x___, r5.w, r3.x\n"
"    umul r5._y__, r5.x, r3.x\n"
"    ilt r5.__z_, r5.w, r5.y\n"
"    iadd r6.x___, r5.y, r5.w_neg(xyzw)\n"
"    iadd r6.x___, r6.x, r3.x\n"
"   \n"
"    dcl_literal l292, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r6.x___, r6.x, l292\n"
"    iadd r5._y__, r5.w, r5.y_neg(xyzw)\n"
"    cmov_logical r5._y__, r5.z, r6.x, r5.y\n"
"    udiv r3.x___, r5.y, r3.x\n"
"    iadd r5._y__, r5.x, r3.x_neg(xyzw)\n"
"    iadd r3.x___, r5.x, r3.x\n"
"    cmov_logical r3.x___, r5.z, r5.y, r3.x\n"
"   \n"
"    dcl_literal l293, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r1.z, l293\n"
"   \n"
"    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r1.__z_, r1.z, l294\n"
"   \n"
"    dcl_literal l295, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r3.x, l295\n"
"   \n"
"    dcl_literal l296, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.__z_, r3.x, l296\n"
"    umul r5.___w, r1.z, r5.z\n"
"    umul r1.__z_, r1.z, r5.y\n"
"    umul r6.x___, r5.x, r5.z\n"
"    umul r5.x___, r5.x, r5.y\n"
"   \n"
"    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r5.x, l297\n"
"   \n"
"    dcl_literal l298, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6.__z_, r6.x, l298\n"
"    iadd r6._y__, r6.y, r6.z\n"
"    iadd r1.__z_, r1.z, r6.y\n"
"   \n"
"    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r1.z, l299\n"
"    iadd r5.___w, r5.w, r6.y\n"
"   \n"
"    dcl_literal l300, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.x___, r6.x, l300\n"
"    iadd r5.___w, r5.w, r6.x\n"
"   \n"
"    dcl_literal l301, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r1.__z_, r1.z, l301\n"
"   \n"
"    dcl_literal l302, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r5.x, l302\n"
"    ior r1.__z_, r1.z, r5.x\n"
"   \n"
"    dcl_literal l303, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r0.y, l303\n"
"   \n"
"    dcl_literal l304, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r0._y__, r0.y, l304\n"
"    umul r0._y__, r0.y, r5.y\n"
"    umul r5.x_z_, r5.x, r5.yyzy\n"
"   \n"
"    dcl_literal l305, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5._y__, r5.x, l305\n"
"   \n"
"    dcl_literal l306, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.__z_, r5.z, l306\n"
"    iadd r5._y__, r5.y, r5.z\n"
"    iadd r0._y__, r0.y, r5.y\n"
"   \n"
"    dcl_literal l307, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r0._y__, r0.y, l307\n"
"   \n"
"    dcl_literal l308, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r5.x, l308\n"
"    ior r0._y__, r0.y, r5.x\n"
"    iadd r5.x___, r0.y, r5.w\n"
"    ult r0._y__, r5.x, r0.y\n"
"    ult r5._y__, r4.x, r5.x\n"
"    ieq r4.x___, r4.x, r5.x\n"
"    ult r5.x___, r4.y, r1.z\n"
"    and r5.x___, r4.x, r5.x\n"
"    ior r5.x___, r5.y, r5.x\n"
"   \n"
"    dcl_literal l309, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l310, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r5.x___, r5.x, l309, l310\n"
"    ieq r1.__z_, r4.y, r1.z\n"
"    and r1.__z_, r4.x, r1.z\n"
"   \n"
"    dcl_literal l311, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.__z_, r1.z, l311, r5.x\n"
"   \n"
"    dcl_literal l312, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.__z_, r1.z, l312\n"
"    ior r0._y__, r0.y, r1.z\n"
"   \n"
"    dcl_literal l313, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r1.__z_, r3.x, l313\n"
"    cmov_logical r0._y__, r0.y, r1.z, r3.x\n"
"else\n"
"   \n"
"    dcl_literal l314, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0._y__, l314\n"
"endif\n"
"dcl_literal l315, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.__z_, r3.y, l315\n"
"dcl_literal l316, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3.x___, r3.y, l316\n"
"cmov_logical r3.x___, r1.z, r3.x, r3.y\n"
"dcl_literal l317, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r4.x___, l317, r3.x_neg(xyzw)\n"
"ushr r4.x___, r1.w, r4.x\n"
"ishl r3.x___, r1.w, r3.x\n"
"cmov_logical r4.x___, r1.z, r1.w, r4.x\n"
"dcl_literal l318, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.__z_, r1.z, l318, r3.x\n"
"dcl_literal l319, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r3.y, r4.x, l319\n"
"cmov_logical r1.__z_, r3.y, r1.z, r1.w\n"
"dcl_literal l320, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.___w, r3.z, l320\n"
"dcl_literal l321, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3._y__, r3.z, l321\n"
"cmov_logical r3._y__, r1.w, r3.y, r3.z\n"
"dcl_literal l322, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r4.x___, l322, r3.y_neg(xyzw)\n"
"ushr r4.x___, r3.w, r4.x\n"
"ishl r3._y__, r3.w, r3.y\n"
"cmov_logical r4.x___, r1.w, r3.w, r4.x\n"
"dcl_literal l323, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.___w, r1.w, l323, r3.y\n"
"dcl_literal l324, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3._y__, r3.z, r4.x, l324\n"
"cmov_logical r1.___w, r3.z, r1.w, r3.w\n"
"iadd r1.___w, r1.z, r1.w\n"
"ult r1.__z_, r1.w, r1.z\n"
"dcl_literal l325, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.__z_, r1.z, l325\n"
"iadd r1.__z_, r3.x, r1.z\n"
"iadd r1.__z_, r3.y, r1.z\n"
"dcl_literal l326, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r3.x___, r4.z, l326\n"
"dcl_literal l327, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3._y__, r4.z, l327\n"
"cmov_logical r3._y__, r3.x, r3.y, r4.z\n"
"dcl_literal l328, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r3.__z_, l328, r3.y_neg(xyzw)\n"
"ushr r3.__z_, r4.w, r3.z\n"
"ishl r3._y__, r4.w, r3.y\n"
"cmov_logical r3.__z_, r3.x, r4.w, r3.z\n"
"dcl_literal l329, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r3.x, l329, r3.y\n"
"dcl_literal l330, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3._y__, r4.z, r3.z, l330\n"
"cmov_logical r3.x___, r4.z, r3.x, r4.w\n"
"iadd r3.x___, r1.w, r3.x\n"
"ult r1.___w, r3.x, r1.w\n"
"dcl_literal l331, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.___w, r1.w, l331\n"
"iadd r1.__z_, r1.z, r1.w\n"
"iadd r1.__z_, r3.y, r1.z\n"
"dcl_literal l332, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.___w, r2.w, l332\n"
"dcl_literal l333, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3._y__, r2.w, l333\n"
"cmov_logical r3._y__, r1.w, r3.y, r2.w\n"
"dcl_literal l334, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r3.__z_, l334, r3.y_neg(xyzw)\n"
"ushr r3.__z_, r0.y, r3.z\n"
"ishl r3._y__, r0.y, r3.y\n"
"cmov_logical r3.__z_, r1.w, r0.y, r3.z\n"
"dcl_literal l335, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.___w, r1.w, l335, r3.y\n"
"dcl_literal l336, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3._y__, r2.w, r3.z, l336\n"
"cmov_logical r0._y__, r2.w, r1.w, r0.y\n"
"iadd r0._y__, r3.x, r0.y\n"
"ult r1.___w, r0.y, r3.x\n"
"dcl_literal l337, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.___w, r1.w, l337\n"
"iadd r1.__z_, r1.z, r1.w\n"
"iadd r1.__z_, r3.y, r1.z\n"
"dcl_literal l338, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.___w, r2.x, l338\n"
"dcl_literal l339, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.__z_, r1.w, l339, r1.z\n"
"dcl_literal l340, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r1.w, l340, r0.y\n"
"dcl_literal l341, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ieq r0.__z_, r0.z, l341\n"
"and r0.__z_, r2.y, r0.z\n"
"cmov_logical r0.___w, r0.z, r0.w, r1.z\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"dcl_literal l342, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r2.z, l342, r0.xwxx\n"
"inegate r0.__z_, r0.x\n"
"dcl_literal l343, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r0.___w, l343, r0.z\n"
"iadd r0.___w, r0.w, r0.y_neg(xyzw)\n"
"ixor r1.x___, r1.y, r1.x\n"
"cmov_logical r0.xy__, r1.x, r0.zwzz, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sdiv_i8",
"mdef(373)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l1, 0x000000FF, 0x000000FF, 0x00000080, 0x00000000\n"
"and r1.xyz_, r0.xyxx, l1\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l2\n"
"dcl_literal l3, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00\n"
"ior r1.___w, r1.x, l3\n"
"cmov_logical r1.x___, r1.z, r1.w, r1.x\n"
"dcl_literal l4, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"and r1.__z_, r0.w, l4\n"
"dcl_literal l5, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00\n"
"ior r1.___w, r0.w, l5\n"
"cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"ixor r1.__z_, r1.x, r0.w\n"
"imax r1.x___, r1.x, r1.x_neg(xyzw)\n"
"imax r0.___w, r0.w, r0.w_neg(xyzw)\n"
"udiv r0.___w, r1.x, r0.w\n"
"inegate r1.x___, r0.w\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r1.__z_, r1.z, l6\n"
"cmov_logical r0.___w, r1.z, r1.x, r0.w\n"
"dcl_literal l7, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.___w, r0.w, l7\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r1.y, r0.w, l8\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shadd_i16",
"mdef(374)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r0.x___, r0.w, l2\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shadd_i32",
"mdef(375)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"and r0.___w, r0.y, r0.x\n"
"\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.___w, r0.w, l4\n"
"\n"
"dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r1.xy__, r0.xyxx, l5\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shadd_i8",
"mdef(376)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l0, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r0.___w, r0.w, l0\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shl_i64_i64",
"mdef(377)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x, r1.x, l0.x\n"
"iand r3.x, r1.x, l0.y\n"
"iadd r4.x, l0.y, r2_neg(x)\n"
"ishl r5.x, r0.x, r2.x\n"
"ishl r6.x, r0.y, r2.x\n"
"ushr r7.x, r0.x, r4.x\n"
"cmov_logical r8.x, r2.x, r7.x, l0.z\n"
"ior r9.x, r6.x, r8.x\n"
"cmov_logical r0.x___, r3.x, l0.z, r5.x\n"
"cmov_logical r0._y__, r3.x, r5.x, r9.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shl_i64_v2i64",
"mdef(378)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x_z, r1.x0z, l0.x\n"
"iand r3.x_z, r1.x0z, l0.y\n"
"iadd r4.x_z, l0.y, r2_neg(xyz)\n"
"ishl r5.x_z, r0.x0z, r2.x0z\n"
"ishl r6.x_z, r0.y0w, r2.x0z\n"
"ushr r7.x_z, r0.x0z, r4.x0z\n"
"cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z\n"
"ior r9.x_z, r6.x0z, r8.x0z\n"
"cmov_logical r0.x_z_, r3.x0z, l0.z, r5.x0z\n"
"cmov_logical r0._y_w, r3.0x0z, r5.0x0z, r9.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shl_i64",
"mdef(379)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x, r1.x, l0.x\n"
"iand r3.x, r1.x, l0.y\n"
"iadd r4.x, l0.y, r2_neg(x)\n"
"ishl r5.x, r0.x, r2.x\n"
"ishl r6.x, r0.y, r2.x\n"
"ushr r7.x, r0.x, r4.x\n"
"cmov_logical r8.x, r2.x, r7.x, l0.z\n"
"ior r9.x, r6.x, r8.x\n"
"cmov_logical r0.x___, r3.x, l0.z, r5.x\n"
"cmov_logical r0._y__, r3.x, r5.x, r9.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shl_v2i64",
"mdef(380)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x_z, r1.x0z, l0.x\n"
"iand r3.x_z, r1.x0z, l0.y\n"
"iadd r4.x_z, l0.y, r2_neg(xyz)\n"
"ishl r5.x_z, r0.x0z, r2.x0z\n"
"ishl r6.x_z, r0.y0w, r2.x0z\n"
"ushr r7.x_z, r0.x0z, r4.x0z\n"
"cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z\n"
"ior r9.x_z, r6.x0z, r8.x0z\n"
"cmov_logical r0.x_z_, r3.x0z, l0.z, r5.x0z\n"
"cmov_logical r0._y_w, r3.0x0z, r5.0x0z, r9.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shr_i64_i64",
"mdef(381)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x, r1.x, l0.x\n"
"iand r3.x, r1.x, l0.y\n"
"iadd r4.x, l0.y, r2_neg(x)\n"
"ushr r5.x, r0.y, r2.x\n"
"ushr r6.x, r0.x, r2.x\n"
"ishl r7.x, r0.y, r4.x\n"
"cmov_logical r8.x, r2.x, r7.x, l0.z\n"
"ior r9.x, r6.x, r8.x\n"
"cmov_logical r0.x___, r3.x, r5.x, r9.x\n"
"cmov_logical r0._y__, r3.x, l0.z, r5.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shr_i64_v2i64",
"mdef(382)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x_z, r1.x0z, l0.x\n"
"iand r3.x_z, r1.x0z, l0.y\n"
"iadd r4.x_z, l0.y, r2_neg(xyz)\n"
"ushr r5.x_z, r0.y0w, r2.x0z\n"
"ushr r6.x_z, r0.x0z, r2.x0z\n"
"ishl r7.x_z, r0.y0w, r4.x0z\n"
"cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z\n"
"ior r9.x_z, r6.x0z, r8.x0z\n"
"cmov_logical r0.x_z_, r3.x0z, r5.x0z, r9.x0z\n"
"cmov_logical r0._y_w, r3.0x0z, l0.z, r5.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shr_i64",
"mdef(383)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x, r1.x, l0.x\n"
"iand r3.x, r1.x, l0.y\n"
"iadd r4.x, l0.y, r2_neg(x)\n"
"ushr r5.x, r0.y, r2.x\n"
"ushr r6.x, r0.x, r2.x\n"
"ishl r7.x, r0.y, r4.x\n"
"cmov_logical r8.x, r2.x, r7.x, l0.z\n"
"ior r9.x, r6.x, r8.x\n"
"cmov_logical r0.x___, r3.x, r5.x, r9.x\n"
"cmov_logical r0._y__, r3.x, l0.z, r5.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__shr_v2i64",
"mdef(384)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x_z, r1.x0z, l0.x\n"
"iand r3.x_z, r1.x0z, l0.y\n"
"iadd r4.x_z, l0.y, r2_neg(xyz)\n"
"ushr r5.x_z, r0.y0w, r2.x0z\n"
"ushr r6.x_z, r0.x0z, r2.x0z\n"
"ishl r7.x_z, r0.y0w, r4.x0z\n"
"cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z\n"
"ior r9.x_z, r6.x0z, r8.x0z\n"
"cmov_logical r0.x_z_, r3.x0z, r5.x0z, r9.x0z\n"
"cmov_logical r0._y_w, r3.0x0z, l0.z, r5.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sign_f32",
"mdef(385)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0._y__, r0.x, l0\n"
"mov r0.__z_, r0.x_abs\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r0.z, l1\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0.__z_, l2, r0.z\n"
"and r0._y__, r0.y, r0.w\n"
"\n"
"dcl_literal l3, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0._y__, r0.y, l3, r0.x\n"
"\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1.x___, l4, r0.x\n"
"and r0.x___, r0.w, r1.x\n"
"\n"
"dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r0.x, l5, r0.y\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l6, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sincos_2f32f32",
"mdef(386)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, r0.yxzw\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.__z_, r0.y, l0\n"
"dcl_literal l1, 0x32000000, 0x7F800000, 0x00000000, 0x00000000\n"
"ige r1.xy__, r0.z, l1\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, r0.z, l2\n"
"and r0.__z_, r1.x, r0.z\n"
"if_logicalnz r0.z\n"
"    mov r0.__z_, r0.y_abs\n"
"   \n"
"    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680\n"
"    lt r0.___w, r0.z, l3\n"
"    if_logicalnz r0.w\n"
"       \n"
"        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"        mul_ieee r0.___w, r0.z, l4\n"
"        round_nearest r0.___w, r0.w\n"
"       \n"
"        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"        and r1.x___, r0.w, l5\n"
"        add r1.__z_, r0.w, r1.x_neg(xyzw)\n"
"       \n"
"        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"        mul_ieee r1.___w, r0.w, l6\n"
"       \n"
"        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"        mul_ieee r2.xyz_, r0.w, l7\n"
"       \n"
"        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)\n"
"       \n"
"        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l9, r3.xyxx\n"
"       \n"
"        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.z, l10, r3.xyxx\n"
"       \n"
"        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.z, l11, r3.xyxx\n"
"        add r0.___w, r0.z, r2.x_neg(xyzw)\n"
"        add r2.___w, r0.z, r0.w_neg(xyzw)\n"
"        add r2.x___, r2.x_neg(xyzw), r2.w\n"
"        add r2.x___, r3.x_neg(xyzw), r2.x\n"
"        add r0.___w, r0.w, r2.x\n"
"        add r2.x___, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r2.x_neg(xyzw)\n"
"        add r0.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r3.y_neg(xyzw), r0.w\n"
"        add r0.___w, r2.x, r0.w\n"
"       \n"
"        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r2.x___, r1.x, l12, r2.z_neg(xyzw)\n"
"       \n"
"        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1.x___, r1.x, l13, r2.x\n"
"       \n"
"        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.x___, r1.z, l14, r1.x\n"
"       \n"
"        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1.__z_, r1.z, l15, r1.x\n"
"        add r2.x___, r2.z_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r2.x_neg(xyzw)\n"
"        add r0.___w, r2.z_neg(xyzw), r0.w\n"
"        add r1.x___, r2.x, r0.w\n"
"        frc r0.___w, r1.w\n"
"       \n"
"        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"        mul_ieee r0.___w, r0.w, l16\n"
"        round_nearest r0.___w, r0.w\n"
"        mov r1.__z_, r1.z_neg(xyzw)\n"
"    else\n"
"       \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r1.___w, r0.z, l17\n"
"       \n"
"        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r0.__z_, r0.z, l18\n"
"       \n"
"        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r0.__z_, r0.z, l19\n"
"       \n"
"        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r0.z, l20\n"
"       \n"
"        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r0.__z_, r0.z, l21\n"
"       \n"
"        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r3, l22, r0.z\n"
"       \n"
"        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r4, l23, r2.x\n"
"       \n"
"        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2._yz_, r4.yywy, l24\n"
"       \n"
"        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r5.xy__, r3.ywyy, l25\n"
"        iadd r2._yz_, r2.yyzy, r5.xxyx\n"
"        iadd r2._yz_, r4.xxzx, r2.yyzy\n"
"       \n"
"        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r4.x_z_, r2.yyzy, l26\n"
"        iadd r3.x_z_, r3.xxzx, r4.xxzx\n"
"       \n"
"        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l27\n"
"       \n"
"        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2._yz_, r2.yyzy, l28\n"
"       \n"
"        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r4.xy__, r4.ywyy, l29\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        ior r4.xy__, r2.yzyy, r4.xyxx\n"
"        iadd r5.__z_, r3.x, r4.y\n"
"        ult r2._y__, r5.z, r4.y\n"
"       \n"
"        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r3.y, l30\n"
"        cmov_logical r2._y__, r2.y, r2.z, r3.y\n"
"       \n"
"        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r3, l31, r0.z\n"
"       \n"
"        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r6, l32, r2.x\n"
"       \n"
"        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l33\n"
"       \n"
"        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l34\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"       \n"
"        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l35\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"       \n"
"        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l36\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"       \n"
"        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l37\n"
"       \n"
"        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l38\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r5._y__, r2.y, r2.z\n"
"        ult r2._y__, r5.y, r2.z\n"
"       \n"
"        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001\n"
"        iadd r3.__zw, r3.xxxy, l39\n"
"        cmov_logical r2._y__, r2.y, r3.z, r3.x\n"
"        iadd r5.x___, r2.y, r2.w\n"
"        ult r2._y__, r5.x, r2.w\n"
"        cmov_logical r2._y__, r2.y, r3.w, r3.y\n"
"       \n"
"        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r3, l40, r0.z\n"
"       \n"
"        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r6, l41, r2.x\n"
"       \n"
"        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l42\n"
"       \n"
"        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l43\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"       \n"
"        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l44\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"       \n"
"        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l45\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"       \n"
"        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l46\n"
"       \n"
"        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l47\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r3.___w, r2.y, r2.z\n"
"        ult r2._y__, r3.w, r2.z\n"
"       \n"
"        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000\n"
"        iadd r6.xy__, r3.xyxx, l48\n"
"        cmov_logical r2._y__, r2.y, r6.x, r3.x\n"
"        iadd r3.__z_, r2.y, r2.w\n"
"        ult r2._y__, r3.z, r2.w\n"
"        cmov_logical r2._y__, r2.y, r6.y, r3.y\n"
"       \n"
"        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E\n"
"        umul r2.__zw, l49, r0.z\n"
"       \n"
"        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000\n"
"        umul r3.xy__, l50, r2.x\n"
"       \n"
"        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r0.__z_, r3.y, l51\n"
"       \n"
"        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r2.w, l52\n"
"        iadd r0.__z_, r0.z, r2.x\n"
"        iadd r0.__z_, r3.x, r0.z\n"
"       \n"
"        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.x___, r0.z, l53\n"
"        iadd r2.x___, r2.z, r2.x\n"
"       \n"
"        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__z_, r2.w, l54\n"
"        iadd r2.x___, r2.x, r2.z\n"
"       \n"
"        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r0.__z_, r0.z, l55\n"
"       \n"
"        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.__z_, r3.y, l56\n"
"        ior r0.__z_, r0.z, r2.z\n"
"        iadd r2._y__, r2.y, r0.z\n"
"        ult r0.__z_, r2.y, r0.z\n"
"       \n"
"        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r2.x, l57\n"
"        cmov_logical r0.__z_, r0.z, r2.z, r2.x\n"
"       \n"
"        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000\n"
"        iadd r2.x_z_, r1.w, l58\n"
"       \n"
"        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r6.x___, r2.x, l59\n"
"       \n"
"        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r1.___w, r6.x, l60\n"
"        iadd r1.___w, r2.x, r1.w_neg(xyzw)\n"
"       \n"
"        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l61, r6.x\n"
"       \n"
"        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r7, r2.x, l62\n"
"        inegate r2.___w, r7.x\n"
"       \n"
"        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r8.x___, r7.y, l63\n"
"       \n"
"        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r8._y__, r7.z, l64\n"
"       \n"
"        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r8.__z_, r7.w, l65\n"
"        inegate r7.xyz_, r8.xyzx\n"
"       \n"
"        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r8, r2.x, l66\n"
"       \n"
"        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r9.x___, r8.x, l67\n"
"       \n"
"        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r9._yzw, r8.yyzw, l68\n"
"        inegate r8, r9\n"
"        and r2.x___, r0.z, r2.w\n"
"        and r3.xy__, r2.y, r7.xyxx\n"
"        ior r2.x___, r2.x, r3.x\n"
"        and r7._yzw, r3.zzzw, r7.yyzz\n"
"        ior r2.x___, r2.x, r7.y\n"
"        ior r2.x___, r7.w, r2.x\n"
"        and r9, r5.xxyy, r8.xyyz\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.z, r2.x\n"
"        and r7._y_w, r5.z, r8.zzzw\n"
"        ior r2.x___, r2.x, r7.y\n"
"        and r2.___w, r4.x, r8.w\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r2.___w, r0.z, r7.x\n"
"        ior r2.___w, r3.y, r2.w\n"
"        ior r2.___w, r7.z, r2.w\n"
"        and r3.x___, r3.w, r8.x\n"
"        ior r2.___w, r2.w, r3.x\n"
"        ior r2.___w, r9.y, r2.w\n"
"        ior r2.___w, r9.w, r2.w\n"
"        ior r2.___w, r7.w, r2.w\n"
"       \n"
"        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r3.x___, l69, r1.w\n"
"        and r3.x___, r2.x, r3.x\n"
"        inegate r3._y__, r1.w\n"
"       \n"
"        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"        iadd r6._y__, l70, r3.y\n"
"       \n"
"        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ult r4._y__, l71, r1.w\n"
"       \n"
"        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.___w, r1.w, l72\n"
"       \n"
"        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r1.___w, l73, r1.w\n"
"        and r1.___w, r2.x, r1.w\n"
"        ior r1.___w, r3.x, r1.w\n"
"        ushr r1.___w, r1.w, r6.y\n"
"        ushr r2.x___, r3.x, r6.y\n"
"       \n"
"        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        and r2.___w, r2.w, l74\n"
"       \n"
"        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.___w, r2.w, l75\n"
"        ior r2.x___, r2.x, r2.w\n"
"        cmov_logical r7.__z_, r4.y, r1.w, r2.x\n"
"       \n"
"        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r8.x___, r6.x, l76\n"
"       \n"
"        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ishl r6.__z_, l77, r3.y\n"
"       \n"
"        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6.___w, r6.z, l78\n"
"       \n"
"        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF\n"
"        mov r8._yzw, l79\n"
"        cmov_logical r6, r6.y, r6, r8\n"
"       \n"
"        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.___w, r6.y, l80\n"
"       \n"
"        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r1.___w, l81, r1.w\n"
"       \n"
"        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r2.x___, r1.w, l82\n"
"        switch r6.x\n"
"        case  0\n"
"        and r3.x___, r0.z, r1.w\n"
"       \n"
"        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"       \n"
"        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l83, l84\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"           \n"
"            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l85\n"
"           \n"
"            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l86\n"
"           \n"
"            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.zzwz_neg(xyzw), l87\n"
"           \n"
"            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r11.x___, r2.y_neg(xyzw), l88\n"
"            and r3._y__, r0.z, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.x___, r2.y\n"
"            mov r11._yz_, r3.zzwz\n"
"            mov r3._y__, r0.z\n"
"        endif\n"
"        and r8.x___, r2.x, r3.y\n"
"        mov r8._yzw, r11.xxyz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  1\n"
"        and r3.x___, r2.y, r1.w\n"
"       \n"
"        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"       \n"
"        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l89, l90\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"           \n"
"            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l91\n"
"           \n"
"            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l92\n"
"           \n"
"            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.wwzw_neg(xyzw), l93\n"
"            and r3._y__, r2.y, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"            mov r11.xy__, r11.zyzz\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.xy__, r3.zwzz\n"
"            mov r3._y__, r2.y\n"
"        endif\n"
"        and r11.__z_, r2.x, r3.y\n"
"       \n"
"        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l94\n"
"        mov r8, r11.wzxy\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  2\n"
"        and r3.x___, r3.z, r1.w\n"
"       \n"
"        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"       \n"
"        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l95, l96\n"
"        inegate r10.___w, r4.x\n"
"       \n"
"        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97\n"
"       \n"
"        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6._y__, r3.w_neg(xyzw), l98\n"
"        and r4._y__, r3.z, r6.w\n"
"        iadd r6.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r5.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r5\n"
"        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz\n"
"        and r11.x___, r2.x, r11.y\n"
"       \n"
"        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l99\n"
"        mov r8, r11.wwxz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  3\n"
"        and r3.x___, r3.w, r1.w\n"
"       \n"
"        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"       \n"
"        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l100, l101\n"
"        inegate r10.___w, r4.x\n"
"       \n"
"        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102\n"
"        and r4._y__, r3.w, r6.w\n"
"        iadd r4._y__, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        cmov_logical r3.x___, r3.x, r4.y, r3.w\n"
"        and r11.___w, r2.x, r3.x\n"
"       \n"
"        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.xyz_, l103\n"
"        mov r8, r11\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  4\n"
"        and r3.x___, r5.x, r1.w\n"
"       \n"
"        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"       \n"
"        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l104, l105\n"
"        inegate r10.___w, r4.x\n"
"       \n"
"        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10._yz_, r5.yyzy_neg(xyzw), l106\n"
"        and r4._y__, r5.x, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        and r3.x___, r2.x, r10.x\n"
"       \n"
"        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l107\n"
"        mov r9._yzw, r10.yyzw\n"
"        mov r9.x___, r3.x\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  5\n"
"        and r3.x___, r5.y, r1.w\n"
"       \n"
"        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"       \n"
"        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l108, l109\n"
"        inegate r10.__z_, r4.x\n"
"       \n"
"        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r10._y__, r5.z_neg(xyzw), l110\n"
"        and r4._y__, r5.y, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r4.__zw, r5.yyyz\n"
"        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx\n"
"        and r10._y__, r2.x, r10.x\n"
"       \n"
"        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.x___, l111\n"
"       \n"
"        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l112\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  6\n"
"        and r3.x___, r5.z, r1.w\n"
"       \n"
"        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"       \n"
"        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l113, l114\n"
"        inegate r4.__z_, r4.x\n"
"        and r4.___w, r5.z, r6.w\n"
"        iadd r4._y__, r6.w, r4.w_neg(xyzw)\n"
"        mov r6.x___, r5.z\n"
"        mov r6._y__, r4.x\n"
"        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx\n"
"        and r10.x___, r2.x, r10.y\n"
"       \n"
"        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.___w, l115\n"
"       \n"
"        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l116\n"
"        mov r9, r10.wwxz\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  7\n"
"        and r1.___w, r4.x, r1.w\n"
"       \n"
"        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"       \n"
"        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.x___, r1.w, l117, l118\n"
"        and r3._y__, r4.x, r6.w\n"
"        iadd r3._y__, r6.z, r3.y_neg(xyzw)\n"
"        cmov_logical r1.___w, r1.w, r3.y, r4.x\n"
"        and r6.___w, r2.x, r1.w\n"
"       \n"
"        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r6.xyz_, l119\n"
"       \n"
"        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l120\n"
"        mov r9, r6\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        default\n"
"        mov r8.__zw, r3.zzzw\n"
"        mov r8._y__, r2.y\n"
"        mov r8.x___, r0.z\n"
"        mov r9.___w, r4.x\n"
"        mov r9.xyz_, r5.xyzx\n"
"       \n"
"        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r2.___w, l121\n"
"        break\n"
"        endswitch\n"
"        mov r3, r8\n"
"        mov r4, r9\n"
"        mov r0.__z_, r2.w\n"
"       \n"
"        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r5, r3, l122\n"
"       \n"
"        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r5, r5, l123\n"
"       \n"
"        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r6, r5, l124\n"
"       \n"
"        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r6, r6, l125\n"
"       \n"
"        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l126\n"
"       \n"
"        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r6, l127, r6_neg(xyzw)\n"
"       \n"
"        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l128\n"
"       \n"
"        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r6, r6, l129\n"
"       \n"
"        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r6, r6, l130\n"
"       \n"
"        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r5, r5, r6, l131\n"
"       \n"
"        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r3, l132\n"
"       \n"
"        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l133\n"
"       \n"
"        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l134\n"
"       \n"
"        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l135\n"
"       \n"
"        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l136, r8_neg(xyzw)\n"
"       \n"
"        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l137\n"
"       \n"
"        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l138\n"
"       \n"
"        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l139\n"
"       \n"
"        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l140\n"
"       \n"
"        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r8, r5, l141\n"
"        iadd r6, r5, r6\n"
"        cmov_logical r5, r8, r6, r5\n"
"       \n"
"        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6, r4, l142\n"
"       \n"
"        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r6, l143\n"
"       \n"
"        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l144\n"
"       \n"
"        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l145\n"
"       \n"
"        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l146\n"
"       \n"
"        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l147, r8_neg(xyzw)\n"
"       \n"
"        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l148\n"
"       \n"
"        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l149\n"
"       \n"
"        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l150\n"
"       \n"
"        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l151\n"
"       \n"
"        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r8, r4, l152\n"
"       \n"
"        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r9, r8, l153\n"
"       \n"
"        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r9, r9, l154\n"
"       \n"
"        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l155\n"
"       \n"
"        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r9, l156, r9_neg(xyzw)\n"
"       \n"
"        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l157\n"
"       \n"
"        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r9, r9, l158\n"
"       \n"
"        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r9, r9, l159\n"
"       \n"
"        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r8, r8, r9, l160\n"
"       \n"
"        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r9, r6, l161\n"
"        iadd r8, r6, r8\n"
"        cmov_logical r6, r9, r8, r6\n"
"       \n"
"        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"        ieq r1.___w, r5.x, l162\n"
"       \n"
"        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060\n"
"        iadd r2.xy_w, r5.yzyw, l163\n"
"        cmov_logical r1.___w, r1.w, r2.x, r5.x\n"
"       \n"
"        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"        ieq r2.x___, r1.w, l164\n"
"        cmov_logical r1.___w, r2.x, r2.y, r1.w\n"
"       \n"
"        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060\n"
"        ieq r2.x___, r1.w, l165\n"
"        cmov_logical r1.___w, r2.x, r2.w, r1.w\n"
"       \n"
"        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"        ieq r2.x___, r1.w, l166\n"
"       \n"
"        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0\n"
"        iadd r5, r6, l167\n"
"        cmov_logical r1.___w, r2.x, r5.x, r1.w\n"
"       \n"
"        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0\n"
"        ieq r2.x___, r1.w, l168\n"
"        cmov_logical r1.___w, r2.x, r5.y, r1.w\n"
"       \n"
"        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0\n"
"        ieq r2.x___, r1.w, l169\n"
"        cmov_logical r1.___w, r2.x, r5.z, r1.w\n"
"       \n"
"        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0\n"
"        ieq r2.x___, r1.w, l170\n"
"        cmov_logical r1.___w, r2.x, r5.w, r1.w\n"
"       \n"
"        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishr r2.x___, r1.w, l171\n"
"       \n"
"        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r2._y__, r2.x, l172\n"
"        iadd r2._y__, r1.w, r2.y_neg(xyzw)\n"
"        iadd r1.___w, r2.z, r1.w_neg(xyzw)\n"
"       \n"
"        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l173, r2.x\n"
"       \n"
"        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r5, r2.x, l174\n"
"        inegate r2.__z_, r5.x\n"
"       \n"
"        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r6.x__w, r5.y, l175\n"
"       \n"
"        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r6._y__, r5.z, l176\n"
"       \n"
"        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r6.__z_, r5.w, l177\n"
"        inegate r5, r6\n"
"       \n"
"        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r6, r2.x, l178\n"
"       \n"
"        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r8.x___, r6.x, l179\n"
"       \n"
"        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r8._y__, r6.y, l180\n"
"       \n"
"        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006\n"
"        ushr r8.__z_, r6.z, l181\n"
"       \n"
"        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007\n"
"        ushr r8.___w, r6.w, l182\n"
"        inegate r6, r8\n"
"        and r2.x__w, r3.xxxy, r2.z\n"
"        and r8, r3.yzwz, r5\n"
"        ior r2.x__w, r2.xxxw, r8.xxxw\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        and r8, r4, r6\n"
"        ior r2.x___, r2.x, r8.x\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        ior r8._y_w, r8.w, r2.x\n"
"        and r2.x___, r3.w, r5.y\n"
"        ior r2.x___, r2.w, r2.x\n"
"        and r2.___w, r4.x, r5.z\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r9.xyz_, r4.yzwy, r6.xyzx\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.y, r2.x\n"
"        ior r8.x___, r9.z, r2.x\n"
"       \n"
"        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r2.y, l183\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r8.y, r2.y\n"
"            ushr r2.x___, r2.x, r2.y\n"
"           \n"
"            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2.___w, l184, r2.y_neg(xyzw)\n"
"            ushr r8.___w, r2.x, r2.w\n"
"           \n"
"            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"            iadd r3._y__, r2.y, l185\n"
"            ishl r2.x___, r2.x, r3.y\n"
"            ushr r3.x___, r2.x, r3.y\n"
"        else\n"
"            and r2.x___, r3.z, r2.z\n"
"            and r2.__z_, r3.w, r5.w\n"
"            ior r2.x___, r2.x, r2.z\n"
"            and r2.__zw, r4.xxxy, r5.yyyz\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r2.x___, r2.w, r2.x\n"
"            and r2.__zw, r4.zzzw, r6.xxxy\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r4._y__, r2.w, r2.x\n"
"           \n"
"            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.x___, l186, r2.y\n"
"           \n"
"            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000\n"
"            iadd r4.x_z_, r2.y, l187\n"
"            ishl r2.__z_, r8.y, r4.x\n"
"            ishl r2.___w, r8.x, r4.z\n"
"           \n"
"            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r2._y__, l188, r2.y_neg(xyzw)\n"
"            ushr r2._y__, r8.x, r2.y\n"
"            ior r4.___w, r2.z, r2.y\n"
"            ushr r4.x___, r2.w, r4.z\n"
"           \n"
"            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"            mov r8.__z_, l189\n"
"            cmov_logical r8, r2.x, r4.yxzw, r8\n"
"            mov r3.xy__, r8.yzyy\n"
"        endif\n"
"       \n"
"        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r2.xy__, r8.w, l190\n"
"       \n"
"        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.___w, r8.w, l191\n"
"       \n"
"        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.___w, r2.w, l192\n"
"       \n"
"        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l193\n"
"       \n"
"        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.___w, l194, r2.w_neg(xyzw)\n"
"       \n"
"        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l195\n"
"       \n"
"        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.___w, r2.w, l196\n"
"        inegate r8._y__, r2.w\n"
"       \n"
"        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r2.__z_, l197\n"
"        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww\n"
"        iadd r2._y__, r1.w, r2.y\n"
"       \n"
"        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r2._y__, r2.y, l198\n"
"       \n"
"        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r2._y__, r2.y, l199\n"
"        ior r7.x___, r2.x, r2.y\n"
"       \n"
"        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r3.y, l200\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r3.x, r3.y\n"
"            ushr r2.x___, r2.x, r3.y\n"
"           \n"
"            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2._y__, l201, r3.y_neg(xyzw)\n"
"            ushr r2.x___, r2.x, r2.y\n"
"        else\n"
"           \n"
"            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.__z_, l202, r3.y\n"
"           \n"
"            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"            iadd r2.___w, r3.y, l203\n"
"            ishl r2.___w, r3.x, r2.w\n"
"           \n"
"            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r3._y__, l204, r3.y_neg(xyzw)\n"
"            ushr r3._y__, r8.x, r3.y\n"
"            ior r2.___w, r2.w, r3.y\n"
"            cmov_logical r2.x___, r2.z, r2.w, r3.x\n"
"        endif\n"
"       \n"
"        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r1.___w, r1.w, l205\n"
"       \n"
"        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r3.xy__, r2.x, l206\n"
"       \n"
"        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.__z_, r2.x, l207\n"
"       \n"
"        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.__z_, r2.z, l208\n"
"       \n"
"        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l209\n"
"       \n"
"        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.__z_, l210, r2.z_neg(xyzw)\n"
"       \n"
"        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l211\n"
"       \n"
"        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.__z_, r2.z, l212\n"
"        inegate r2._y__, r2.z\n"
"       \n"
"        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r3.__z_, l213\n"
"        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx\n"
"        iadd r1.___w, r1.w, r2.z\n"
"       \n"
"        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r1.___w, r1.w, l214\n"
"       \n"
"        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.___w, r1.w, l215\n"
"        ior r1.___w, r2.y, r1.w\n"
"       \n"
"        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r7._y__, r2.x, r1.w, l216\n"
"       \n"
"        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r7.z, l217\n"
"        mov r2.xy__, r7.xyxx_neg(xyzw)\n"
"        cmov_logical r2.xyz_, r0.z, r2.xyzx, r7.xyzx\n"
"       \n"
"        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003\n"
"        and r2.__zw, r2.xxxz, l218\n"
"        add r0.__z_, r2.x, r2.z_neg(xyzw)\n"
"       \n"
"        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mul_ieee r1.x___, r2.x, l219\n"
"       \n"
"        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r1.___w, r2.z, l220, r1.x_neg(xyzw)\n"
"       \n"
"        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.___w, r2.z, l221, r1.w\n"
"       \n"
"        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r1.___w, r0.z, l222, r1.w\n"
"       \n"
"        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r0.__z_, r0.z, l223, r1.w\n"
"        utof r0.___w, r2.w\n"
"       \n"
"        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mad_ieee r1.__z_, r2.y, l224, r0.z\n"
"    endif\n"
"    mul_ieee r2.xy__, r1.xzxx, r1.x\n"
"    mul_ieee r0.__z_, r1.x, r2.x\n"
"   \n"
"    dcl_literal l225, 0x00000000, 0x00000000, 0x2F2EC9D3, 0xAD47D74E\n"
"   \n"
"    dcl_literal l226, 0x00000000, 0x00000000, 0xB2D72F34, 0x310F74F6\n"
"    mad_ieee r2.__zw, r2.x, l225, l226\n"
"   \n"
"    dcl_literal l227, 0x00000000, 0x00000000, 0x3636DF25, 0xB492923A\n"
"    mad_ieee r2.__zw, r2.x, r2.zzzw, l227\n"
"   \n"
"    dcl_literal l228, 0x00000000, 0x00000000, 0xB95009D4, 0x37D00AE2\n"
"    mad_ieee r2.__zw, r2.x, r2.zzzw, l228\n"
"   \n"
"    dcl_literal l229, 0x00000000, 0x00000000, 0x3C088887, 0xBAB60B60\n"
"    mad_ieee r2.__zw, r2.x, r2.zzzw, l229\n"
"    mul_ieee r1.___w, r0.z, r2.z\n"
"   \n"
"    dcl_literal l230, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1.___w, r1.z, l230, r1.w_neg(xyzw)\n"
"    mad_ieee r1.__z_, r2.x, r1.w, r1.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l231, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB\n"
"    mad_ieee r0.__z_, r0.z_neg(xyzw), l231, r1.z\n"
"    add r3.__z_, r1.x, r0.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l232, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB\n"
"    mad_ieee r0.__z_, r2.x, r2.w, l232\n"
"    mul_ieee r1.__z_, r2.x, r2.x\n"
"   \n"
"    dcl_literal l233, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r1.x___, r1.x, l233\n"
"   \n"
"    dcl_literal l234, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A\n"
"    ige r1.___w, r1.x, l234\n"
"   \n"
"    dcl_literal l235, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ige r2.__z_, l235, r1.x\n"
"    and r1.___w, r1.w, r2.z\n"
"   \n"
"    dcl_literal l236, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000\n"
"    iadd r2.__z_, r1.x, l236\n"
"    and r1.___w, r1.w, r2.z\n"
"   \n"
"    dcl_literal l237, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ilt r1.x___, l237, r1.x\n"
"   \n"
"    dcl_literal l238, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000\n"
"    cmov_logical r1.x___, r1.x, l238, r1.w\n"
"   \n"
"    dcl_literal l239, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1.___w, r2.x, l239, r1.x_neg(xyzw)\n"
"   \n"
"    dcl_literal l240, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1.x___, r1.x_neg(xyzw), l240\n"
"    mad_ieee r0.__z_, r0.z, r1.z, r2.y_neg(xyzw)\n"
"    add r0.__z_, r1.w, r0.z_neg(xyzw)\n"
"    add r1.x___, r1.x, r0.z_neg(xyzw)\n"
"   \n"
"    dcl_literal l241, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"    eq r2, r0.w, l241\n"
"   \n"
"    dcl_literal l242, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r0.__z_, r0.y, l242\n"
"    and r4, r2, r0.z\n"
"    mov r3.x___, r3.z_neg(xyzw)\n"
"    and r1.__z_, r4.x, r3.x\n"
"    mov r3._y__, r1.x_neg(xyzw)\n"
"    cmov_logical r0.__zw, r4.y, r3.xxxy, r1.xxxz\n"
"    cmov_logical r0.__zw, r4.z, r3.yyyz, r0.zzzw\n"
"    mov r3.___w, r1.x\n"
"    cmov_logical r0.__zw, r4.w, r3.zzzw, r0.zzzw\n"
"   \n"
"    dcl_literal l243, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ge r1.x___, r0.y, l243\n"
"    and r2, r2, r1.x\n"
"    cmov_logical r0.__zw, r2.x, r3.wwwz, r0.zzzw\n"
"    cmov_logical r0.__zw, r2.y, r3.xxxw, r0.zzzw\n"
"    cmov_logical r0.__zw, r2.z, r3.yyyx, r0.zzzw\n"
"    cmov_logical r0.xy__, r2.w, r3.zyzz, r0.zwzz\n"
"else\n"
"   \n"
"    dcl_literal l244, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    mov r0.x___, l244\n"
"endif\n"
"dcl_literal l245, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r1.y, l245, r0.yxyy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sinh_f32",
"mdef(387)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"\n"
"dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r0.y, l1, l2\n"
"round_z r0.___w, r0.w\n"
"\n"
"dcl_literal l3, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r1.x___, r0.w_neg(xyzw), l3, r0.y\n"
"\n"
"dcl_literal l4, 0x42000000, 0x42000000, 0x42000000, 0x42000000\n"
"ge r1._y__, r0.w, l4\n"
"\n"
"dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.__z_, r0.w, l5\n"
"cmov_logical r1._y__, r1.y, r1.z, r0.w\n"
"\n"
"dcl_literal l6, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1.__z_, r0.w_neg(xyzw), l6, r1.x\n"
"mul_ieee r1.___w, r1.z, r1.z\n"
"\n"
"dcl_literal l7, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l8, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r2.x___, r1.w, l7, l8\n"
"\n"
"dcl_literal l9, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r2.x___, r1.w, r2.x, l9\n"
"\n"
"dcl_literal l10, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r2.x___, r1.w, r2.x, l10\n"
"\n"
"dcl_literal l11, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r2.x___, r1.w, r2.x, l11\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r1.z\n"
"mul_ieee r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l12, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1.___w, r1.w_neg(xyzw), l12\n"
"div_zeroop(infinity) r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l13, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r0.___w, r0.w, l13, r1.z_neg(xyzw)\n"
"add r0.___w, r1.x_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.x___, r0.w_neg(xyzw), l14\n"
"\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r1.__z_, r1.y, l15\n"
"if_logicalnz r1.z\n"
"    ftoi r1.__z_, r1.y\n"
"    \n"
"    dcl_literal l16, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r2.xyz_, r1.x, l16\n"
"    if_logicalz r2.y\n"
"        itof r1.___w, r2.z\n"
"        \n"
"        dcl_literal l17, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r3.xy__, r1.w, l17\n"
"        \n"
"        dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.___w, r3.x, l18\n"
"        iadd r1.___w, r1.w, r1.z\n"
"        \n"
"        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.___w, r3.y, l19\n"
"        \n"
"        dcl_literal l20, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1.___w, l20, r1.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r3.x___, l21, r1.w\n"
"        \n"
"        dcl_literal l22, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.___w, r3.x, l22, r1.w\n"
"        \n"
"        dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r3.x___, l23, r1.w\n"
"        ishr r3._y__, r2.w, r1.w\n"
"        inegate r1.___w, r1.w\n"
"        \n"
"        dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.___w, r1.w, l24\n"
"        iadd r1.___w, r2.w, r1.w\n"
"        cmov_logical r1.___w, r3.x, r3.y, r1.w\n"
"    else\n"
"        \n"
"        dcl_literal l25, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r2.___w, r1.x, l25\n"
"        \n"
"        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2._y__, r2.y, l26\n"
"        iadd r2._y__, r2.y, r1.z\n"
"        \n"
"        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.__z_, r1.z, l27\n"
"        iadd r1.__z_, r2.w, r1.z\n"
"        \n"
"        dcl_literal l28, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"        iadd r2._y__, r2.y, l28\n"
"        \n"
"        dcl_literal l29, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2.___w, l29, r2.y\n"
"        \n"
"        dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r1.__z_, r2.w, l30, r1.z\n"
"        \n"
"        dcl_literal l31, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r2._y__, l31, r2.y_neg(xyzw)\n"
"        \n"
"        dcl_literal l32, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2.__z_, r2.z, l32\n"
"        \n"
"        dcl_literal l33, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"        ilt r3.xy__, l33, r2.y\n"
"        \n"
"        dcl_literal l34, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r2._y__, r3.y, l34, r2.y\n"
"        ishr r2._y__, r2.z, r2.y\n"
"        cmov_logical r1.___w, r3.x, r2.y, r1.z\n"
"    endif\n"
"    \n"
"    dcl_literal l35, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r1._y__, l35, r1.y\n"
"    \n"
"    dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1._y__, r1.y, l36, r1.w\n"
"    ior r1.x___, r2.x, r1.y\n"
"    \n"
"    dcl_literal l37, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r0.___w, r1.x, l37\n"
"else\n"
"    mov r0.___w, r0.w_neg(xyzw)\n"
"endif\n"
"\n"
"dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.__z_, r0.z, l38\n"
"\n"
"dcl_literal l39, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1._y__, r0.y, l39\n"
"and r0.__z_, r0.z, r1.y\n"
"cmov_logical r0.__z_, r0.z, r0.y, r0.w\n"
"\n"
"dcl_literal l40, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50\n"
"lt r0.___w, r0.y, l40\n"
"mul_ieee r1._y__, r0.z, r0.z\n"
"div_zeroop(infinity) r1._y__, r1.y, r1.x\n"
"\n"
"dcl_literal l41, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r0.z, l41, r1.y_neg(xyzw)\n"
"\n"
"dcl_literal l42, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r0.__z_, r0.z, l42\n"
"cmov_logical r0.__z_, r0.w, r0.z, r1.x\n"
"\n"
"dcl_literal l43, 0x31800000, 0x31800000, 0x31800000, 0x31800000\n"
"ilt r0.___w, r0.y, l43\n"
"cmov_logical r0.__z_, r0.w, r0.y, r0.z\n"
"\n"
"dcl_literal l44, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD\n"
"ige r0.___w, r0.y, l44\n"
"\n"
"dcl_literal l45, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ige r1.x___, l45, r0.y\n"
"and r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l46, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0.__z_, r0.w, l46, r0.z\n"
"\n"
"dcl_literal l47, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l47, r0.y\n"
"\n"
"dcl_literal l48, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.___w, r0.x, l48\n"
"cmov_logical r0._y__, r0.y, r0.w, r0.z\n"
"\n"
"dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l49\n"
"cmov_logical r0.x___, r0.x, r0.y_neg(xyzw), r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sinpi_f32",
"mdef(388)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7F800000, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0._yzw, r0.x, l0\n"
"add r1.x___, r0.w, r0.w\n"
"round_nearest r1.x___, r1.x\n"
"\n"
"dcl_literal l1, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r1._y__, r0.w, l1, r1.x_neg(xyzw)\n"
"\n"
"dcl_literal l2, 0x3E800000, 0x3FC90FDB, 0x00000000, 0x00000000\n"
"mul_ieee r1.xy__, r1.xyxx, l2\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l3, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l4, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, l3, l4\n"
"\n"
"dcl_literal l5, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l5\n"
"\n"
"dcl_literal l6, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000, 0x00000000\n"
"mad_ieee r2.xy__, r1.z, r2.xyxx, l6\n"
"mul_ieee r1.___w, r1.y, r1.z\n"
"mad_ieee r1._y__, r1.w, r2.x, r1.y\n"
"frc r1.x___, r1.x\n"
"\n"
"dcl_literal l7, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"mul_ieee r1.x___, r1.x, l7\n"
"round_nearest r1.x___, r1.x\n"
"\n"
"dcl_literal l8, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"eq r3, r1.x, l8\n"
"\n"
"dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ge r1.x___, r0.w, l9\n"
"and r3, r3, r1.x\n"
"and r1.x___, r1.y, r3.x\n"
"\n"
"dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"\n"
"dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r1.___w, r1.z_neg(xyzw), l10, l11\n"
"mul_ieee r1.__z_, r1.z, r1.z\n"
"mad_ieee r1.__z_, r1.z, r2.y, r1.w\n"
"cmov_logical r1.x___, r3.y, r1.z, r1.x\n"
"cmov_logical r1.x___, r3.z, r1.y_neg(xyzw), r1.x\n"
"cmov_logical r1.x___, r3.w, r1.z_neg(xyzw), r1.x\n"
"itof r1._y__, r0.w\n"
"\n"
"dcl_literal l12, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r1._y__, r1.y, l12\n"
"\n"
"dcl_literal l13, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r1._yz_, r1.y, l13\n"
"\n"
"dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1._y__, r1.y, l14\n"
"\n"
"dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.__z_, r1.z, l15\n"
"\n"
"dcl_literal l16, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r1._y__, l16, r1.y_neg(xyzw)\n"
"inegate r1.___w, r1.y\n"
"\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1.___w, r1.w, l17\n"
"iadd r1.___w, r1.z, r1.w\n"
"ishr r1.__z_, r1.z, r1.y\n"
"\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, l18, r1.y\n"
"cmov_logical r1._y__, r1.y, r1.z, r1.w\n"
"\n"
"dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.__zw, r0.wwwy, l19\n"
"\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x7F800000, 0x00000000\n"
"ieq r2.xyz_, r0.yzwy, l20\n"
"and r0._y__, r1.z, r2.x\n"
"cmov_logical r0._y__, r0.y, r1.y, r1.x\n"
"\n"
"dcl_literal l21, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ilt r0.__z_, r0.w, l21\n"
"and r0.__z_, r1.w, r0.z\n"
"\n"
"dcl_literal l22, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r1.x___, r0.w, l22\n"
"cmov_logical r0._y__, r0.z, r1.x, r0.y\n"
"frc r0.__z_, r0.w\n"
"add r1.x___, r0.w, r0.z_neg(xyzw)\n"
"\n"
"dcl_literal l23, 0x00000000, 0x00000000, 0x3F000000, 0x00000000\n"
"eq r1._yz_, r0.z, l23\n"
"\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l24, r0.w\n"
"\n"
"dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ge r0.___w, r1.x, l25\n"
"\n"
"dcl_literal l26, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.x___, r1.x, l26\n"
"and r0.___w, r1.y, r0.w\n"
"ior r0.___w, r2.y, r0.w\n"
"\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0._y__, r0.w, l27, r0.y\n"
"frc r0.___w, r1.x\n"
"\n"
"dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r0.___w, r0.w, l28\n"
"\n"
"dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"\n"
"dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r0.___w, r0.w, l29, l30\n"
"cmov_logical r0._y__, r1.z, r0.w, r0.y\n"
"\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l31\n"
"\n"
"dcl_literal l32, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l32\n"
"cmov_logical r0._y__, r0.w, r0.y_neg(xyzw), r0.y\n"
"\n"
"dcl_literal l33, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r2.z, l33, r0.y\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sin_f32",
"mdef(389)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0._y__, r0.x_abs\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ige r0.___w, r0.z, l1\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, r0.z, l2\n"
"and r0.___w, r0.w, r1.x\n"
"if_logicalnz r0.w\n"
"    \n"
"    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680\n"
"    lt r0.___w, r0.y, l3\n"
"    if_logicalnz r0.w\n"
"        \n"
"        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"        mul_ieee r0.___w, r0.y, l4\n"
"        round_nearest r0.___w, r0.w\n"
"        \n"
"        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"        and r1.x___, r0.w, l5\n"
"        add r1._y__, r0.w, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"        mul_ieee r1.__z_, r0.w, l6\n"
"        \n"
"        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"        mul_ieee r2.xyz_, r0.w, l7\n"
"        \n"
"        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)\n"
"        \n"
"        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l9, r3.xyxx\n"
"        \n"
"        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.y, l10, r3.xyxx\n"
"        \n"
"        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.y, l11, r3.xyxx\n"
"        add r0.___w, r0.y, r2.x_neg(xyzw)\n"
"        add r1.___w, r0.y, r0.w_neg(xyzw)\n"
"        add r1.___w, r2.x_neg(xyzw), r1.w\n"
"        add r1.___w, r3.x_neg(xyzw), r1.w\n"
"        add r0.___w, r0.w, r1.w\n"
"        add r1.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"        add r0.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r3.y_neg(xyzw), r0.w\n"
"        add r0.___w, r1.w, r0.w\n"
"        \n"
"        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.___w, r1.x, l12, r2.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1.x___, r1.x, l13, r1.w\n"
"        \n"
"        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.x___, r1.y, l14, r1.x\n"
"        \n"
"        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1._y__, r1.y, l15, r1.x\n"
"        add r1.___w, r2.z_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"        add r0.___w, r2.z_neg(xyzw), r0.w\n"
"        add r1.x___, r1.w, r0.w\n"
"        frc r0.___w, r1.z\n"
"        \n"
"        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"        mul_ieee r0.___w, r0.w, l16\n"
"        round_nearest r0.___w, r0.w\n"
"        mov r1._y__, r1.y_neg(xyzw)\n"
"    else\n"
"        \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r1.__z_, r0.y, l17\n"
"        \n"
"        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1.___w, r0.y, l18\n"
"        \n"
"        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l19\n"
"        \n"
"        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r1.w, l20\n"
"        \n"
"        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r1.___w, r1.w, l21\n"
"        \n"
"        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r3, l22, r1.w\n"
"        \n"
"        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r4, l23, r2.x\n"
"        \n"
"        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2._yz_, r4.yywy, l24\n"
"        \n"
"        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r5.xy__, r3.ywyy, l25\n"
"        iadd r2._yz_, r2.yyzy, r5.xxyx\n"
"        iadd r2._yz_, r4.xxzx, r2.yyzy\n"
"        \n"
"        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r4.x_z_, r2.yyzy, l26\n"
"        iadd r3.x_z_, r3.xxzx, r4.xxzx\n"
"        \n"
"        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l27\n"
"        \n"
"        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2._yz_, r2.yyzy, l28\n"
"        \n"
"        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r4.xy__, r4.ywyy, l29\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        ior r4.xy__, r2.yzyy, r4.xyxx\n"
"        iadd r5.__z_, r3.x, r4.y\n"
"        ult r2._y__, r5.z, r4.y\n"
"        \n"
"        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r3.y, l30\n"
"        cmov_logical r2._y__, r2.y, r2.z, r3.y\n"
"        \n"
"        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r3, l31, r1.w\n"
"        \n"
"        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r6, l32, r2.x\n"
"        \n"
"        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l33\n"
"        \n"
"        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l34\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"        \n"
"        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l35\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"        \n"
"        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l36\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        \n"
"        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l37\n"
"        \n"
"        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l38\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r5._y__, r2.y, r2.z\n"
"        ult r2._y__, r5.y, r2.z\n"
"        \n"
"        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001\n"
"        iadd r3.__zw, r3.xxxy, l39\n"
"        cmov_logical r2._y__, r2.y, r3.z, r3.x\n"
"        iadd r5.x___, r2.y, r2.w\n"
"        ult r2._y__, r5.x, r2.w\n"
"        cmov_logical r2._y__, r2.y, r3.w, r3.y\n"
"        \n"
"        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r3, l40, r1.w\n"
"        \n"
"        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r6, l41, r2.x\n"
"        \n"
"        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l42\n"
"        \n"
"        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l43\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"        \n"
"        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l44\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"        \n"
"        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l45\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        \n"
"        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l46\n"
"        \n"
"        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l47\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r3.___w, r2.y, r2.z\n"
"        ult r2._y__, r3.w, r2.z\n"
"        \n"
"        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000\n"
"        iadd r6.xy__, r3.xyxx, l48\n"
"        cmov_logical r2._y__, r2.y, r6.x, r3.x\n"
"        iadd r3.__z_, r2.y, r2.w\n"
"        ult r2._y__, r3.z, r2.w\n"
"        cmov_logical r2._y__, r2.y, r6.y, r3.y\n"
"        \n"
"        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E\n"
"        umul r2.__zw, l49, r1.w\n"
"        \n"
"        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000\n"
"        umul r3.xy__, l50, r2.x\n"
"        \n"
"        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r1.___w, r3.y, l51\n"
"        \n"
"        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r2.w, l52\n"
"        iadd r1.___w, r1.w, r2.x\n"
"        iadd r1.___w, r3.x, r1.w\n"
"        \n"
"        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.x___, r1.w, l53\n"
"        iadd r2.x___, r2.z, r2.x\n"
"        \n"
"        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__z_, r2.w, l54\n"
"        iadd r2.x___, r2.x, r2.z\n"
"        \n"
"        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r1.___w, r1.w, l55\n"
"        \n"
"        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.__z_, r3.y, l56\n"
"        ior r1.___w, r1.w, r2.z\n"
"        iadd r2._y__, r2.y, r1.w\n"
"        ult r1.___w, r2.y, r1.w\n"
"        \n"
"        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r2.x, l57\n"
"        cmov_logical r1.___w, r1.w, r2.z, r2.x\n"
"        \n"
"        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000\n"
"        iadd r2.x_z_, r1.z, l58\n"
"        \n"
"        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r6.x___, r2.x, l59\n"
"        \n"
"        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r1.__z_, r6.x, l60\n"
"        iadd r1.__z_, r2.x, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l61, r6.x\n"
"        \n"
"        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r7, r2.x, l62\n"
"        inegate r2.___w, r7.x\n"
"        \n"
"        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r8.x___, r7.y, l63\n"
"        \n"
"        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r8._y__, r7.z, l64\n"
"        \n"
"        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r8.__z_, r7.w, l65\n"
"        inegate r7.xyz_, r8.xyzx\n"
"        \n"
"        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r8, r2.x, l66\n"
"        \n"
"        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r9.x___, r8.x, l67\n"
"        \n"
"        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r9._yzw, r8.yyzw, l68\n"
"        inegate r8, r9\n"
"        and r2.x___, r1.w, r2.w\n"
"        and r3.xy__, r2.y, r7.xyxx\n"
"        ior r2.x___, r2.x, r3.x\n"
"        and r7._yzw, r3.zzzw, r7.yyzz\n"
"        ior r2.x___, r2.x, r7.y\n"
"        ior r2.x___, r7.w, r2.x\n"
"        and r9, r5.xxyy, r8.xyyz\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.z, r2.x\n"
"        and r7._y_w, r5.z, r8.zzzw\n"
"        ior r2.x___, r2.x, r7.y\n"
"        and r2.___w, r4.x, r8.w\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r2.___w, r1.w, r7.x\n"
"        ior r2.___w, r3.y, r2.w\n"
"        ior r2.___w, r7.z, r2.w\n"
"        and r3.x___, r3.w, r8.x\n"
"        ior r2.___w, r2.w, r3.x\n"
"        ior r2.___w, r9.y, r2.w\n"
"        ior r2.___w, r9.w, r2.w\n"
"        ior r2.___w, r7.w, r2.w\n"
"        \n"
"        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r3.x___, l69, r1.z\n"
"        and r3.x___, r2.x, r3.x\n"
"        inegate r3._y__, r1.z\n"
"        \n"
"        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"        iadd r6._y__, l70, r3.y\n"
"        \n"
"        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ult r4._y__, l71, r1.z\n"
"        \n"
"        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.__z_, r1.z, l72\n"
"        \n"
"        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r1.__z_, l73, r1.z\n"
"        and r1.__z_, r2.x, r1.z\n"
"        ior r1.__z_, r3.x, r1.z\n"
"        ushr r1.__z_, r1.z, r6.y\n"
"        ushr r2.x___, r3.x, r6.y\n"
"        \n"
"        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        and r2.___w, r2.w, l74\n"
"        \n"
"        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.___w, r2.w, l75\n"
"        ior r2.x___, r2.x, r2.w\n"
"        cmov_logical r7.__z_, r4.y, r1.z, r2.x\n"
"        \n"
"        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r8.x___, r6.x, l76\n"
"        \n"
"        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ishl r6.__z_, l77, r3.y\n"
"        \n"
"        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6.___w, r6.z, l78\n"
"        \n"
"        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF\n"
"        mov r8._yzw, l79\n"
"        cmov_logical r6, r6.y, r6, r8\n"
"        \n"
"        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.__z_, r6.y, l80\n"
"        \n"
"        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r1.__z_, l81, r1.z\n"
"        \n"
"        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r2.x___, r1.z, l82\n"
"        switch r6.x\n"
"        case  0\n"
"        and r3.x___, r1.w, r1.z\n"
"        \n"
"        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"        \n"
"        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l83, l84\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"            \n"
"            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l85\n"
"            \n"
"            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l86\n"
"            \n"
"            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.zzwz_neg(xyzw), l87\n"
"            \n"
"            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r11.x___, r2.y_neg(xyzw), l88\n"
"            and r3._y__, r1.w, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.x___, r2.y\n"
"            mov r11._yz_, r3.zzwz\n"
"            mov r3._y__, r1.w\n"
"        endif\n"
"        and r8.x___, r2.x, r3.y\n"
"        mov r8._yzw, r11.xxyz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  1\n"
"        and r3.x___, r2.y, r1.z\n"
"        \n"
"        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"        \n"
"        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l89, l90\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"            \n"
"            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l91\n"
"            \n"
"            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l92\n"
"            \n"
"            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.wwzw_neg(xyzw), l93\n"
"            and r3._y__, r2.y, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"            mov r11.xy__, r11.zyzz\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.xy__, r3.zwzz\n"
"            mov r3._y__, r2.y\n"
"        endif\n"
"        and r11.__z_, r2.x, r3.y\n"
"        \n"
"        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l94\n"
"        mov r8, r11.wzxy\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  2\n"
"        and r3.x___, r3.z, r1.z\n"
"        \n"
"        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l95, l96\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97\n"
"        \n"
"        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6._y__, r3.w_neg(xyzw), l98\n"
"        and r4._y__, r3.z, r6.w\n"
"        iadd r6.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r5.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r5\n"
"        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz\n"
"        and r11.x___, r2.x, r11.y\n"
"        \n"
"        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l99\n"
"        mov r8, r11.wwxz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  3\n"
"        and r3.x___, r3.w, r1.z\n"
"        \n"
"        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l100, l101\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102\n"
"        and r4._y__, r3.w, r6.w\n"
"        iadd r4._y__, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        cmov_logical r3.x___, r3.x, r4.y, r3.w\n"
"        and r11.___w, r2.x, r3.x\n"
"        \n"
"        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.xyz_, l103\n"
"        mov r8, r11\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  4\n"
"        and r3.x___, r5.x, r1.z\n"
"        \n"
"        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l104, l105\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10._yz_, r5.yyzy_neg(xyzw), l106\n"
"        and r4._y__, r5.x, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        and r3.x___, r2.x, r10.x\n"
"        \n"
"        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l107\n"
"        mov r9._yzw, r10.yyzw\n"
"        mov r9.x___, r3.x\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  5\n"
"        and r3.x___, r5.y, r1.z\n"
"        \n"
"        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l108, l109\n"
"        inegate r10.__z_, r4.x\n"
"        \n"
"        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r10._y__, r5.z_neg(xyzw), l110\n"
"        and r4._y__, r5.y, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r4.__zw, r5.yyyz\n"
"        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx\n"
"        and r10._y__, r2.x, r10.x\n"
"        \n"
"        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.x___, l111\n"
"        \n"
"        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l112\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  6\n"
"        and r3.x___, r5.z, r1.z\n"
"        \n"
"        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l113, l114\n"
"        inegate r4.__z_, r4.x\n"
"        and r4.___w, r5.z, r6.w\n"
"        iadd r4._y__, r6.w, r4.w_neg(xyzw)\n"
"        mov r6.x___, r5.z\n"
"        mov r6._y__, r4.x\n"
"        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx\n"
"        and r10.x___, r2.x, r10.y\n"
"        \n"
"        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.___w, l115\n"
"        \n"
"        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l116\n"
"        mov r9, r10.wwxz\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  7\n"
"        and r1.__z_, r4.x, r1.z\n"
"        \n"
"        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.x___, r1.z, l117, l118\n"
"        and r3._y__, r4.x, r6.w\n"
"        iadd r3._y__, r6.z, r3.y_neg(xyzw)\n"
"        cmov_logical r1.__z_, r1.z, r3.y, r4.x\n"
"        and r6.___w, r2.x, r1.z\n"
"        \n"
"        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r6.xyz_, l119\n"
"        \n"
"        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l120\n"
"        mov r9, r6\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        default\n"
"        mov r8.__zw, r3.zzzw\n"
"        mov r8._y__, r2.y\n"
"        mov r8.x___, r1.w\n"
"        mov r9.___w, r4.x\n"
"        mov r9.xyz_, r5.xyzx\n"
"        \n"
"        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r2.___w, l121\n"
"        break\n"
"        endswitch\n"
"        mov r3, r8\n"
"        mov r4, r9\n"
"        mov r1.__z_, r2.w\n"
"        \n"
"        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r5, r3, l122\n"
"        \n"
"        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r5, r5, l123\n"
"        \n"
"        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r6, r5, l124\n"
"        \n"
"        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r6, r6, l125\n"
"        \n"
"        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l126\n"
"        \n"
"        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r6, l127, r6_neg(xyzw)\n"
"        \n"
"        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l128\n"
"        \n"
"        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r6, r6, l129\n"
"        \n"
"        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r6, r6, l130\n"
"        \n"
"        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r5, r5, r6, l131\n"
"        \n"
"        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r3, l132\n"
"        \n"
"        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l133\n"
"        \n"
"        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l134\n"
"        \n"
"        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l135\n"
"        \n"
"        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l136, r8_neg(xyzw)\n"
"        \n"
"        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l137\n"
"        \n"
"        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l138\n"
"        \n"
"        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l139\n"
"        \n"
"        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l140\n"
"        \n"
"        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r8, r5, l141\n"
"        iadd r6, r5, r6\n"
"        cmov_logical r5, r8, r6, r5\n"
"        \n"
"        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6, r4, l142\n"
"        \n"
"        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r6, l143\n"
"        \n"
"        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l144\n"
"        \n"
"        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l145\n"
"        \n"
"        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l146\n"
"        \n"
"        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l147, r8_neg(xyzw)\n"
"        \n"
"        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l148\n"
"        \n"
"        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l149\n"
"        \n"
"        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l150\n"
"        \n"
"        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l151\n"
"        \n"
"        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r8, r4, l152\n"
"        \n"
"        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r9, r8, l153\n"
"        \n"
"        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r9, r9, l154\n"
"        \n"
"        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l155\n"
"        \n"
"        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r9, l156, r9_neg(xyzw)\n"
"        \n"
"        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l157\n"
"        \n"
"        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r9, r9, l158\n"
"        \n"
"        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r9, r9, l159\n"
"        \n"
"        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r8, r8, r9, l160\n"
"        \n"
"        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r9, r6, l161\n"
"        iadd r8, r6, r8\n"
"        cmov_logical r6, r9, r8, r6\n"
"        \n"
"        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"        ieq r1.___w, r5.x, l162\n"
"        \n"
"        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060\n"
"        iadd r2.xy_w, r5.yzyw, l163\n"
"        cmov_logical r1.___w, r1.w, r2.x, r5.x\n"
"        \n"
"        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"        ieq r2.x___, r1.w, l164\n"
"        cmov_logical r1.___w, r2.x, r2.y, r1.w\n"
"        \n"
"        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060\n"
"        ieq r2.x___, r1.w, l165\n"
"        cmov_logical r1.___w, r2.x, r2.w, r1.w\n"
"        \n"
"        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"        ieq r2.x___, r1.w, l166\n"
"        \n"
"        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0\n"
"        iadd r5, r6, l167\n"
"        cmov_logical r1.___w, r2.x, r5.x, r1.w\n"
"        \n"
"        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0\n"
"        ieq r2.x___, r1.w, l168\n"
"        cmov_logical r1.___w, r2.x, r5.y, r1.w\n"
"        \n"
"        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0\n"
"        ieq r2.x___, r1.w, l169\n"
"        cmov_logical r1.___w, r2.x, r5.z, r1.w\n"
"        \n"
"        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0\n"
"        ieq r2.x___, r1.w, l170\n"
"        cmov_logical r1.___w, r2.x, r5.w, r1.w\n"
"        \n"
"        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishr r2.x___, r1.w, l171\n"
"        \n"
"        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r2._y__, r2.x, l172\n"
"        iadd r2._y__, r1.w, r2.y_neg(xyzw)\n"
"        iadd r1.___w, r2.z, r1.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l173, r2.x\n"
"        \n"
"        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r5, r2.x, l174\n"
"        inegate r2.__z_, r5.x\n"
"        \n"
"        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r6.x__w, r5.y, l175\n"
"        \n"
"        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r6._y__, r5.z, l176\n"
"        \n"
"        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r6.__z_, r5.w, l177\n"
"        inegate r5, r6\n"
"        \n"
"        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r6, r2.x, l178\n"
"        \n"
"        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r8.x___, r6.x, l179\n"
"        \n"
"        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r8._y__, r6.y, l180\n"
"        \n"
"        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006\n"
"        ushr r8.__z_, r6.z, l181\n"
"        \n"
"        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007\n"
"        ushr r8.___w, r6.w, l182\n"
"        inegate r6, r8\n"
"        and r2.x__w, r3.xxxy, r2.z\n"
"        and r8, r3.yzwz, r5\n"
"        ior r2.x__w, r2.xxxw, r8.xxxw\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        and r8, r4, r6\n"
"        ior r2.x___, r2.x, r8.x\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        ior r8._y_w, r8.w, r2.x\n"
"        and r2.x___, r3.w, r5.y\n"
"        ior r2.x___, r2.w, r2.x\n"
"        and r2.___w, r4.x, r5.z\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r9.xyz_, r4.yzwy, r6.xyzx\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.y, r2.x\n"
"        ior r8.x___, r9.z, r2.x\n"
"        \n"
"        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r2.y, l183\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r8.y, r2.y\n"
"            ushr r2.x___, r2.x, r2.y\n"
"            \n"
"            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2.___w, l184, r2.y_neg(xyzw)\n"
"            ushr r8.___w, r2.x, r2.w\n"
"            \n"
"            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"            iadd r3._y__, r2.y, l185\n"
"            ishl r2.x___, r2.x, r3.y\n"
"            ushr r3.x___, r2.x, r3.y\n"
"        else\n"
"            and r2.x___, r3.z, r2.z\n"
"            and r2.__z_, r3.w, r5.w\n"
"            ior r2.x___, r2.x, r2.z\n"
"            and r2.__zw, r4.xxxy, r5.yyyz\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r2.x___, r2.w, r2.x\n"
"            and r2.__zw, r4.zzzw, r6.xxxy\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r4._y__, r2.w, r2.x\n"
"            \n"
"            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.x___, l186, r2.y\n"
"            \n"
"            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000\n"
"            iadd r4.x_z_, r2.y, l187\n"
"            ishl r2.__z_, r8.y, r4.x\n"
"            ishl r2.___w, r8.x, r4.z\n"
"            \n"
"            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r2._y__, l188, r2.y_neg(xyzw)\n"
"            ushr r2._y__, r8.x, r2.y\n"
"            ior r4.___w, r2.z, r2.y\n"
"            ushr r4.x___, r2.w, r4.z\n"
"            \n"
"            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"            mov r8.__z_, l189\n"
"            cmov_logical r8, r2.x, r4.yxzw, r8\n"
"            mov r3.xy__, r8.yzyy\n"
"        endif\n"
"        \n"
"        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r2.xy__, r8.w, l190\n"
"        \n"
"        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.___w, r8.w, l191\n"
"        \n"
"        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.___w, r2.w, l192\n"
"        \n"
"        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l193\n"
"        \n"
"        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.___w, l194, r2.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l195\n"
"        \n"
"        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.___w, r2.w, l196\n"
"        inegate r8._y__, r2.w\n"
"        \n"
"        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r2.__z_, l197\n"
"        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww\n"
"        iadd r2._y__, r1.w, r2.y\n"
"        \n"
"        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r2._y__, r2.y, l198\n"
"        \n"
"        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r2._y__, r2.y, l199\n"
"        ior r7.x___, r2.x, r2.y\n"
"        \n"
"        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r3.y, l200\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r3.x, r3.y\n"
"            ushr r2.x___, r2.x, r3.y\n"
"            \n"
"            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2._y__, l201, r3.y_neg(xyzw)\n"
"            ushr r2.x___, r2.x, r2.y\n"
"        else\n"
"            \n"
"            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.__z_, l202, r3.y\n"
"            \n"
"            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"            iadd r2.___w, r3.y, l203\n"
"            ishl r2.___w, r3.x, r2.w\n"
"            \n"
"            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r3._y__, l204, r3.y_neg(xyzw)\n"
"            ushr r3._y__, r8.x, r3.y\n"
"            ior r2.___w, r2.w, r3.y\n"
"            cmov_logical r2.x___, r2.z, r2.w, r3.x\n"
"        endif\n"
"        \n"
"        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r1.___w, r1.w, l205\n"
"        \n"
"        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r3.xy__, r2.x, l206\n"
"        \n"
"        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.__z_, r2.x, l207\n"
"        \n"
"        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.__z_, r2.z, l208\n"
"        \n"
"        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l209\n"
"        \n"
"        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.__z_, l210, r2.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l211\n"
"        \n"
"        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.__z_, r2.z, l212\n"
"        inegate r2._y__, r2.z\n"
"        \n"
"        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r3.__z_, l213\n"
"        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx\n"
"        iadd r1.___w, r1.w, r2.z\n"
"        \n"
"        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r1.___w, r1.w, l214\n"
"        \n"
"        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.___w, r1.w, l215\n"
"        ior r1.___w, r2.y, r1.w\n"
"        \n"
"        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r7._y__, r2.x, r1.w, l216\n"
"        \n"
"        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r7.z, l217\n"
"        mov r2.xy__, r7.xyxx_neg(xyzw)\n"
"        cmov_logical r2.xyz_, r1.z, r2.xyzx, r7.xyzx\n"
"        \n"
"        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003\n"
"        and r1.__zw, r2.xxxz, l218\n"
"        add r2.__z_, r2.x, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mul_ieee r1.x___, r2.x, l219\n"
"        \n"
"        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r2.x___, r1.z, l220, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.__z_, r1.z, l221, r2.x\n"
"        \n"
"        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r1.__z_, r2.z, l222, r1.z\n"
"        \n"
"        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.__z_, r2.z, l223, r1.z\n"
"        utof r0.___w, r1.w\n"
"        \n"
"        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mad_ieee r1._y__, r2.y, l224, r1.z\n"
"    endif\n"
"    mul_ieee r1.__zw, r1.xxxy, r1.x\n"
"    mul_ieee r2.x___, r1.x, r1.z\n"
"    \n"
"    dcl_literal l225, 0x00000000, 0x2F2EC9D3, 0xAD47D74E, 0x00000000\n"
"    \n"
"    dcl_literal l226, 0x00000000, 0xB2D72F34, 0x310F74F6, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, l225, l226\n"
"    \n"
"    dcl_literal l227, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, r2.yyzy, l227\n"
"    \n"
"    dcl_literal l228, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, r2.yyzy, l228\n"
"    \n"
"    dcl_literal l229, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000\n"
"    mad_ieee r2._yz_, r1.z, r2.yyzy, l229\n"
"    mul_ieee r2._y__, r2.x, r2.y\n"
"    \n"
"    dcl_literal l230, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r2._y__, r1.y, l230, r2.y_neg(xyzw)\n"
"    mad_ieee r1._y__, r1.z, r2.y, r1.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l231, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB\n"
"    mad_ieee r1._y__, r2.x_neg(xyzw), l231, r1.y\n"
"    add r1._y__, r1.x, r1.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l232, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB\n"
"    mad_ieee r2.x___, r1.z, r2.z, l232\n"
"    mul_ieee r2._y__, r1.z, r1.z\n"
"    \n"
"    dcl_literal l233, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r1.x___, r1.x, l233\n"
"    \n"
"    dcl_literal l234, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A\n"
"    ige r2.__z_, r1.x, l234\n"
"    \n"
"    dcl_literal l235, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ige r2.___w, l235, r1.x\n"
"    and r2.__z_, r2.z, r2.w\n"
"    \n"
"    dcl_literal l236, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000\n"
"    iadd r2.___w, r1.x, l236\n"
"    and r2.__z_, r2.z, r2.w\n"
"    \n"
"    dcl_literal l237, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000\n"
"    ilt r1.x___, l237, r1.x\n"
"    \n"
"    dcl_literal l238, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000\n"
"    cmov_logical r1.x___, r1.x, l238, r2.z\n"
"    \n"
"    dcl_literal l239, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mad_ieee r1.__z_, r1.z, l239, r1.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l240, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1.x___, r1.x_neg(xyzw), l240\n"
"    mad_ieee r1.___w, r2.x, r2.y, r1.w_neg(xyzw)\n"
"    add r1.__z_, r1.z, r1.w_neg(xyzw)\n"
"    add r1.x___, r1.x, r1.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l241, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"    eq r2, r0.w, l241\n"
"    and r0.___w, r1.y, r2.x\n"
"    cmov_logical r0.___w, r2.y, r1.x, r0.w\n"
"    cmov_logical r0.___w, r2.z, r1.y_neg(xyzw), r0.w\n"
"    cmov_logical r0._y__, r2.w, r1.x_neg(xyzw), r0.w\n"
"endif\n"
"\n"
"dcl_literal l242, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l242\n"
"cmov_logical r0._y__, r0.w, r0.y_neg(xyzw), r0.y\n"
"\n"
"dcl_literal l243, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.z, l243\n"
"\n"
"dcl_literal l244, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.w, l244, r0.y\n"
"\n"
"dcl_literal l245, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l245, r0.z\n"
"\n"
"dcl_literal l246, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l246\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__smad24_i32",
"mdef(390)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"\n"
"dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishl r1.xy__, r0.xyxx, l0\n"
"\n"
"dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishr r1.xy__, r1.xyxx, l1\n"
"imad r0.x___, r1.x, r1.y, r0.z\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smad_hi_i16",
"mdef(391)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"imul r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l5, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ishr r1.x___, r1.x, l5\n"
"iadd r1.x___, r1.x, r0.z\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, l6, r1.x\n"
"\n"
"dcl_literal l7, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r1.__z_, r1.x, l7\n"
"cmov_logical r0.x___, r1.y, r1.z, r1.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smad_hi_i32",
"mdef(392)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"\n"
"dcl_literal l10, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ishr r1.xy__, r0.xyxx, l10\n"
"ixor r1.__z_, r0.y, r0.x\n"
"\n"
"dcl_literal l11, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ishr r1.__z_, r1.z, l11\n"
"ixor r2.xy__, r0.xyxx, r1.xyxx\n"
"iadd r1.xy__, r2.xyxx, r1.xyxx_neg(xyzw)\n"
"\n"
"dcl_literal l12, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r2.xy__, r1.xyxx, l12\n"
"\n"
"dcl_literal l13, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.xy__, r1.xyxx, l13\n"
"umul r1.___w, r1.x, r1.y\n"
"umul r1.x___, r1.x, r2.y\n"
"umul r1._y__, r2.x, r1.y\n"
"umul r2.x___, r2.x, r2.y\n"
"\n"
"dcl_literal l14, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r2._y__, r2.x, l14\n"
"\n"
"dcl_literal l15, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r2.__z_, r1.y, l15\n"
"iadd r2._y__, r2.y, r2.z\n"
"iadd r1.x___, r1.x, r2.y\n"
"\n"
"dcl_literal l16, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r2._y__, r1.x, l16\n"
"iadd r1.___w, r1.w, r2.y\n"
"\n"
"dcl_literal l17, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1._y__, r1.y, l17\n"
"iadd r1._y__, r1.w, r1.y\n"
"\n"
"dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ishl r1.x___, r1.x, l18\n"
"\n"
"dcl_literal l19, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r1.___w, r2.x, l19\n"
"ior r1.x___, r1.x, r1.w\n"
"ixor r1.x__w, r1.z, r1.xxxy\n"
"iadd r1.x___, r1.x, r1.z_neg(xyzw)\n"
"iadd r2.x___, r1.w, r1.z_neg(xyzw)\n"
"cmov_logical r1.x___, r1.x, r1.w, r2.x\n"
"cmov_logical r1.x___, r1.z, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smad_hi_i8",
"mdef(393)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"imul r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishr r1.x___, r1.x, l0\n"
"iadd r1.x___, r1.x, r0.z\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, l1, r1.x\n"
"\n"
"dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r1.__z_, r1.x, l2\n"
"cmov_logical r0.x___, r1.y, r1.z, r1.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smad_sat_i16",
"mdef(394)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"imad r1.x___, r0.x, r0.y, r0.y\n"
"\n"
"dcl_literal l3, 0x00007FFF, 0x00007FFF, 0x00007FFF, 0x00007FFF\n"
"imin r1.x___, r1.x, l3\n"
"\n"
"dcl_literal l4, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000\n"
"imax r0.___w, r1.x, l4\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smad_sat_i32",
"mdef(395)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"imul r1.x___, r0.x, r0.y\n"
"imad r1._y__, r0.x, r0.y, r0.y\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.__z_, l6, r0.y\n"
"ilt r1.___w, r1.y, r1.x\n"
"and r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l7, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"cmov_logical r1.__z_, r1.z, l7, r1.y\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.___w, r0.y, l8\n"
"ilt r1.x___, r1.x, r1.y\n"
"and r1.x___, r1.w, r1.x\n"
"\n"
"dcl_literal l9, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.___w, r1.x, l9, r1.z\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smad_sat_i8",
"mdef(396)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"imad r1.x___, r0.x, r0.y, r0.y\n"
"\n"
"dcl_literal l0, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"imin r1.x___, r1.x, l0\n"
"\n"
"dcl_literal l1, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80\n"
"imax r0.___w, r1.x, l1\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smax_i16",
"mdef(397)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imax r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smax_i32",
"mdef(398)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imax r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smax_i8",
"mdef(399)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imax r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smin_i16",
"mdef(400)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imin r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smin_i32",
"mdef(401)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imin r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smin_i8",
"mdef(402)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"imin r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smod_i16",
"mdef(403)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x00008000, 0x00000000\n"
"and r1.xyz_, r0.xyxx, l13\n"
"dcl_literal l14, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l14\n"
"dcl_literal l15, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"ior r1.___w, r1.x, l15\n"
"cmov_logical r1.x___, r1.z, r1.w, r1.x\n"
"dcl_literal l16, 0x00008000, 0x00008000, 0x00008000, 0x00008000\n"
"and r1.__z_, r0.w, l16\n"
"dcl_literal l17, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000\n"
"ior r1.___w, r0.w, l17\n"
"cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"ixor r1.__z_, r1.x, r0.w\n"
"imax r1.___w, r1.x, r1.x_neg(xyzw)\n"
"imax r2.x___, r0.w, r0.w_neg(xyzw)\n"
"udiv r1.___w, r1.w, r2.x\n"
"inegate r2.x___, r1.w\n"
"dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r1.__z_, r1.z, l18\n"
"cmov_logical r1.__z_, r1.z, r2.x, r1.w\n"
"dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.y, r1.z, l19\n"
"imul r0.___w, r0.w, r1.y\n"
"iadd r0.___w, r1.x, r0.w_neg(xyzw)\n"
"dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.w, l20\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smod_i32",
"mdef(404)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l25, 0, 0, 0, 0\n"
"mov r0._y__, r1.x\n"
"ilt r1.xy, r0, l25\n"
"iadd r0.xy, r0, r1\n"
"ixor r0.xy, r0, r1\n"
"udiv r2.x, r0.x, r0.y\n"
"umul r2.x, r2.x, r0.y\n"
"iadd r0.x, r0.x, r2.x_neg(xyzw)\n"
"iadd r0.x, r0.x, r1.x\n"
"ixor r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smod_i64",
"mdef(405)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0.__zw, r1.yyxy\n"
"dcl_literal l1, 0x80000000, 0x80000000, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.ywyy, l1\n"
"inegate r2, r0\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r1.__zw, l2, r2.zzzx\n"
"iadd r1.__zw, r1.zzzw, r2.wwwy\n"
"cmov_logical r0._y_w, r1.yyyx, r1.zzzw, r0.wwwy\n"
"cmov_logical r0.x_z_, r1.xxyx, r2.xxzx, r0.xxzx\n"
"ult r1._y__, r0.w, r0.y\n"
"ieq r1.__z_, r0.w, r0.y\n"
"ult r1.___w, r0.x, r0.z\n"
"and r1.___w, r1.z, r1.w\n"
"ior r1.___w, r1.y, r1.w\n"
"dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.___w, r1.w, l3, l4\n"
"ieq r2.x___, r0.x, r0.z\n"
"and r2.x___, r1.z, r2.x\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.___w, r2.x, l5, r1.w\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r2.xy__, r0.yzyy, l6\n"
"and r2.x___, r2.y, r2.x\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.__z_, r2.x, l7, r0.z\n"
"dcl_literal l8, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r2._yz_, r0.yywy, l8\n"
"dcl_literal l9, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.xy__, r0.ywyy, l9\n"
"dcl_literal l10, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r2.___w, r0.z, l10\n"
"ior r2.___w, r3.x, r2.w\n"
"dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r2.w, l11\n"
"dcl_literal l12, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.x___, r0.z, l12\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000\n"
"ior r3.__zw, r2.yyyz, l13\n"
"dcl_literal l14, 0x00000000, 0x00000000, 0xBF800000, 0xBF800000\n"
"add r3.__zw, r3.zzzw, l14\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"and r3.__zw, r3.zzzw, l15\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000\n"
"iadd r3.__zw, l16, r3.zzzw_neg(xyzw)\n"
"dcl_literal l17, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"and r3.__zw, r3.zzzw, l17\n"
"dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.__zw, r3.zzzw, l18\n"
"dcl_literal l19, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.__zw, r3.zzzw, l19\n"
"dcl_literal l20, 0x00000000, 0x00000017, 0x00000017, 0x00000000\n"
"cmov_logical r2._yz_, r2.yyzy, r3.zzwz, l20\n"
"dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.__z_, r2.w, l21\n"
"dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.__z_, r3.z, l22\n"
"dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l23\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.__z_, l24, r3.z_neg(xyzw)\n"
"dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l25\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.__z_, r3.z, l26\n"
"dcl_literal l27, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.__z_, r3.z, l27\n"
"dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r2.___w, r2.w, r3.z, l28\n"
"dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.__z_, r3.x, l29\n"
"dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.__z_, r3.z, l30\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l31\n"
"dcl_literal l32, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.__z_, l32, r3.z_neg(xyzw)\n"
"dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l33\n"
"dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.__z_, r3.z, l34\n"
"dcl_literal l35, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.__z_, r3.z, l35\n"
"dcl_literal l36, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.x___, r3.x, r3.z, l36\n"
"dcl_literal l37, 0x00000000, 0x00000000, 0x00000017, 0x00000017\n"
"ieq r3.__zw, r2.yyyz, l37\n"
"iadd r2.___w, r2.y, r2.w\n"
"cmov_logical r2._y__, r3.z, r2.w, r2.y\n"
"dcl_literal l38, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.__z_, r2.w, l38\n"
"iadd r2.___w, r2.w, r3.x\n"
"cmov_logical r2._y__, r3.z, r2.w, r2.y\n"
"dcl_literal l39, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ige r2.___w, r2.y, l39\n"
"dcl_literal l40, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3.x___, r2.y, l40\n"
"dcl_literal l41, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F\n"
"cmov_logical r2.___w, r2.w, r3.x, l41\n"
"ult r3.x___, r0.x, r0.z\n"
"and r3.x___, r1.z, r3.x\n"
"ior r1._y__, r1.y, r3.x\n"
"dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1._y__, r1.y, l42, l43\n"
"ieq r3.x___, r0.x, r0.z\n"
"and r1.__z_, r1.z, r3.x\n"
"dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.z, l44, r1.y\n"
"dcl_literal l45, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r1.__z_, r0.x, l45\n"
"ior r1.__z_, r3.y, r1.z\n"
"dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.__z_, r1.z, l46\n"
"dcl_literal l47, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.x___, r0.x, l47\n"
"dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3._y__, r1.z, l48\n"
"dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3._y__, r3.y, l49\n"
"dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l50\n"
"dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3._y__, l51, r3.y_neg(xyzw)\n"
"dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l52\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3._y__, r3.y, l53\n"
"dcl_literal l54, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3._y__, r3.y, l54\n"
"dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r1.__z_, r1.z, r3.y, l55\n"
"dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3._y__, r3.x, l56\n"
"dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3._y__, r3.y, l57\n"
"dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l58\n"
"dcl_literal l59, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3._y__, l59, r3.y_neg(xyzw)\n"
"dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l60\n"
"dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3._y__, r3.y, l61\n"
"dcl_literal l62, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3._y__, r3.y, l62\n"
"dcl_literal l63, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.x___, r3.x, r3.y, l63\n"
"iadd r1.__z_, r2.z, r1.z\n"
"cmov_logical r2.__z_, r3.w, r1.z, r2.z\n"
"dcl_literal l64, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3._y__, r1.z, l64\n"
"iadd r1.__z_, r1.z, r3.x\n"
"cmov_logical r1.__z_, r3.y, r1.z, r2.z\n"
"ilt r2.__z_, r1.z, r2.y\n"
"ieq r3.x___, r2.y, r1.z\n"
"dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1._y__, r1.y, l65\n"
"and r1._y__, r3.x, r1.y\n"
"ior r1._y__, r2.z, r1.y\n"
"iadd r2.__z_, r2.y, r1.z_neg(xyzw)\n"
"dcl_literal l66, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1._y__, r1.y, r2.z, l66\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r1.y, l67\n"
"if_logicalnz r2.z\n"
"    ilt r3.x___, r2.w, r1.y\n"
"    iadd r3._y__, r1.y, r2.w_neg(xyzw)\n"
"    and r3.x___, r3.x, r3.y\n"
"   \n"
"    dcl_literal l68, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1._y__, r1.y, l68\n"
"   \n"
"    dcl_literal l69, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1._y__, r1.y, l69, r3.x\n"
"   \n"
"    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.x___, r1.y, l70\n"
"   \n"
"    dcl_literal l71, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3._y__, r1.y, l71\n"
"    cmov_logical r3._y__, r3.x, r3.y, r1.y\n"
"   \n"
"    dcl_literal l72, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.__z_, r1.y, l72\n"
"   \n"
"    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.___w, l73, r3.y_neg(xyzw)\n"
"    ushr r3.___w, r0.z, r3.w\n"
"    ishl r3._y__, r0.z, r3.y\n"
"    ishl r3.__z_, r0.y, r3.z\n"
"    ior r3.__z_, r3.w, r3.z\n"
"    cmov_logical r3.__z_, r3.x, r0.z, r3.z\n"
"   \n"
"    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.x___, r3.x, l74, r3.y\n"
"    cmov_logical r3._y__, r1.y, r3.z, r0.y\n"
"    cmov_logical r1._y__, r1.y, r3.x, r0.z\n"
"   \n"
"    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.x___, r1.z, l75\n"
"   \n"
"    dcl_literal l76, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.__z_, r1.z, l76\n"
"    cmov_logical r3.__z_, r3.x, r3.z, r1.z\n"
"   \n"
"    dcl_literal l77, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.___w, r1.z, l77\n"
"   \n"
"    dcl_literal l78, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.__z_, l78, r3.z_neg(xyzw)\n"
"    ushr r4.x___, r0.x, r3.z\n"
"    ishl r4._y__, r0.w, r3.w\n"
"    ior r4.x___, r4.x, r4.y\n"
"    cmov_logical r4.x___, r3.x, r0.x, r4.x\n"
"    cmov_logical r4.x___, r1.z, r4.x, r0.w\n"
"    ushr r3.__z_, r1.y, r3.z\n"
"    ishl r3.___w, r3.y, r3.w\n"
"    ior r3.__z_, r3.z, r3.w\n"
"    cmov_logical r3.x___, r3.x, r1.y, r3.z\n"
"    cmov_logical r1.__z_, r1.z, r3.x, r3.y\n"
"    udiv r3.x___, r4.x, r1.z\n"
"    umul r3.__z_, r3.x, r1.z\n"
"    ilt r3.___w, r4.x, r3.z\n"
"    iadd r4._y__, r3.z, r4.x_neg(xyzw)\n"
"    iadd r4._y__, r4.y, r1.z\n"
"   \n"
"    dcl_literal l79, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4._y__, r4.y, l79\n"
"    iadd r3.__z_, r4.x, r3.z_neg(xyzw)\n"
"    cmov_logical r3.__z_, r3.w, r4.y, r3.z\n"
"    udiv r1.__z_, r3.z, r1.z\n"
"    iadd r3.__z_, r3.x, r1.z_neg(xyzw)\n"
"    iadd r1.__z_, r3.x, r1.z\n"
"    cmov_logical r1.__z_, r3.w, r3.z, r1.z\n"
"   \n"
"    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.x___, r1.y, l80\n"
"   \n"
"    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.__z_, r1.y, l81\n"
"   \n"
"    dcl_literal l82, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r1.z, l82\n"
"   \n"
"    dcl_literal l83, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r1.__z_, r1.z, l83\n"
"    umul r4.x___, r3.z, r1.z\n"
"    umul r3.__z_, r3.z, r3.w\n"
"    umul r4._y__, r3.x, r1.z\n"
"    umul r3.x___, r3.x, r3.w\n"
"   \n"
"    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r3.x, l84\n"
"   \n"
"    dcl_literal l85, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.___w, r4.y, l85\n"
"    iadd r4.__z_, r4.z, r4.w\n"
"    iadd r3.__z_, r3.z, r4.z\n"
"   \n"
"    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r3.z, l86\n"
"    iadd r4.x___, r4.x, r4.z\n"
"   \n"
"    dcl_literal l87, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r4.y, l87\n"
"    iadd r4.x___, r4.x, r4.y\n"
"   \n"
"    dcl_literal l88, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3.__z_, r3.z, l88\n"
"   \n"
"    dcl_literal l89, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.x___, r3.x, l89\n"
"    ior r3.x___, r3.z, r3.x\n"
"   \n"
"    dcl_literal l90, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r3.y, l90\n"
"   \n"
"    dcl_literal l91, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r3.y, l91\n"
"    umul r4._y__, r4.y, r3.w\n"
"    umul r1.__z_, r3.z, r1.z\n"
"    umul r3.__z_, r3.z, r3.w\n"
"   \n"
"    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.___w, r3.z, l92\n"
"   \n"
"    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r1.__z_, r1.z, l93\n"
"    iadd r1.__z_, r3.w, r1.z\n"
"    iadd r1.__z_, r4.y, r1.z\n"
"   \n"
"    dcl_literal l94, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r1.__z_, r1.z, l94\n"
"   \n"
"    dcl_literal l95, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r3.z, l95\n"
"    ior r1.__z_, r1.z, r3.z\n"
"    iadd r3.__z_, r1.z, r4.x\n"
"    ult r1.__z_, r3.z, r1.z\n"
"    ult r3.___w, r0.w, r3.z\n"
"    ieq r4.x___, r0.w, r3.z\n"
"    ult r4._y__, r0.x, r3.x\n"
"    and r4._y__, r4.x, r4.y\n"
"    ior r3.___w, r3.w, r4.y\n"
"   \n"
"    dcl_literal l96, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l97, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r3.___w, r3.w, l96, l97\n"
"    ieq r4._y__, r0.x, r3.x\n"
"    and r4.x___, r4.x, r4.y\n"
"   \n"
"    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.___w, r4.x, l98, r3.w\n"
"   \n"
"    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3.___w, r3.w, l99\n"
"    ior r1.__z_, r1.z, r3.w\n"
"    iadd r1._y__, r3.x, r1.y_neg(xyzw)\n"
"    ult r3.___w, r3.x, r1.y\n"
"    iadd r3.___w, r3.z, r3.w\n"
"    iadd r3._y__, r3.w, r3.y_neg(xyzw)\n"
"    cmov_logical r3._y__, r1.z, r3.y, r3.z\n"
"    cmov_logical r1._y__, r1.z, r1.y, r3.x\n"
"    iadd r1.__z_, r0.x, r1.y_neg(xyzw)\n"
"    ult r3.x___, r0.x, r1.z\n"
"    iadd r3.x___, r0.w, r3.x\n"
"    iadd r1._y__, r3.x, r3.y_neg(xyzw)\n"
"else\n"
"    mov r1._yz_, r0.wwxw\n"
"endif\n"
"ult r3.x___, r1.y, r0.y\n"
"ieq r3._y__, r1.y, r0.y\n"
"ult r3.__z_, r1.z, r0.z\n"
"and r3.__z_, r3.y, r3.z\n"
"ior r3.x___, r3.x, r3.z\n"
"dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l101, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r3.x___, r3.x, l100, l101\n"
"ieq r3.__z_, r1.z, r0.z\n"
"and r3._y__, r3.y, r3.z\n"
"dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r3.y, l102, r3.x\n"
"dcl_literal l103, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3._y__, r1.y, l103\n"
"dcl_literal l104, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3.__z_, r1.y, l104\n"
"dcl_literal l105, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.___w, r1.z, l105\n"
"ior r3._y__, r3.y, r3.w\n"
"dcl_literal l106, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3._y__, r3.y, l106\n"
"dcl_literal l107, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.___w, r1.z, l107\n"
"dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.z, l108\n"
"dcl_literal l109, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l109\n"
"dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l110\n"
"dcl_literal l111, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l111, r4.x_neg(xyzw)\n"
"dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l112\n"
"dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l113\n"
"dcl_literal l114, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l114\n"
"dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.__z_, r3.z, r4.x, l115\n"
"dcl_literal l116, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.y, l116\n"
"dcl_literal l117, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l117\n"
"dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l118\n"
"dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l119, r4.x_neg(xyzw)\n"
"dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l120\n"
"dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l121\n"
"dcl_literal l122, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l122\n"
"dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r4.x, l123\n"
"dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.w, l124\n"
"dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l125\n"
"dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l126\n"
"dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l127, r4.x_neg(xyzw)\n"
"dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l128\n"
"dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l129\n"
"dcl_literal l130, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r4.x___, r4.x, l130\n"
"dcl_literal l131, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.___w, r3.w, r4.x, l131\n"
"dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r4.x___, r3.z, l132\n"
"iadd r3._y__, r3.z, r3.y\n"
"cmov_logical r3.__z_, r4.x, r3.y, r3.z\n"
"dcl_literal l133, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r4.x___, r3.y, l133\n"
"iadd r3._y__, r3.y, r3.w\n"
"cmov_logical r3._y__, r4.x, r3.y, r3.z\n"
"ilt r3.__z_, r3.y, r2.y\n"
"ieq r3.___w, r2.y, r3.y\n"
"dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r3.x___, r3.x, l134\n"
"and r3.x___, r3.w, r3.x\n"
"ior r3.x___, r3.z, r3.x\n"
"and r2.__z_, r2.z, r3.x\n"
"iadd r3.x___, r2.y, r3.y_neg(xyzw)\n"
"dcl_literal l135, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r2.__z_, r2.z, r3.x, l135\n"
"dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r3.x___, r2.z, l136\n"
"if_logicalnz r3.x\n"
"    ilt r3.__z_, r2.w, r2.z\n"
"    iadd r3.___w, r2.z, r2.w_neg(xyzw)\n"
"    and r3.__z_, r3.z, r3.w\n"
"   \n"
"    dcl_literal l137, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, r2.z, l137\n"
"   \n"
"    dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.__z_, r2.z, l138, r3.z\n"
"   \n"
"    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.__z_, r2.z, l139\n"
"   \n"
"    dcl_literal l140, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.___w, r2.z, l140\n"
"    cmov_logical r3.___w, r3.z, r3.w, r2.z\n"
"   \n"
"    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.x___, r2.z, l141\n"
"   \n"
"    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4._y__, l142, r3.w_neg(xyzw)\n"
"    ushr r4._y__, r0.z, r4.y\n"
"    ishl r3.___w, r0.z, r3.w\n"
"    ishl r4.x___, r0.y, r4.x\n"
"    ior r4.x___, r4.y, r4.x\n"
"    cmov_logical r4.x___, r3.z, r0.z, r4.x\n"
"   \n"
"    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.__z_, r3.z, l143, r3.w\n"
"    cmov_logical r3.___w, r2.z, r4.x, r0.y\n"
"    cmov_logical r2.__z_, r2.z, r3.z, r0.z\n"
"   \n"
"    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.__z_, r3.y, l144\n"
"   \n"
"    dcl_literal l145, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4.x___, r3.y, l145\n"
"    cmov_logical r4.x___, r3.z, r4.x, r3.y\n"
"   \n"
"    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4._y__, r3.y, l146\n"
"   \n"
"    dcl_literal l147, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.x___, l147, r4.x_neg(xyzw)\n"
"    ushr r4.__z_, r1.z, r4.x\n"
"    ishl r4.___w, r1.y, r4.y\n"
"    ior r4.__z_, r4.z, r4.w\n"
"    cmov_logical r4.__z_, r3.z, r1.z, r4.z\n"
"    cmov_logical r4.__z_, r3.y, r4.z, r1.y\n"
"    ushr r4.x___, r2.z, r4.x\n"
"    ishl r4._y__, r3.w, r4.y\n"
"    ior r4.x___, r4.x, r4.y\n"
"    cmov_logical r3.__z_, r3.z, r2.z, r4.x\n"
"    cmov_logical r3._y__, r3.y, r3.z, r3.w\n"
"    udiv r3.__z_, r4.z, r3.y\n"
"    umul r4.x___, r3.z, r3.y\n"
"    ilt r4._y__, r4.z, r4.x\n"
"    iadd r4.___w, r4.x, r4.z_neg(xyzw)\n"
"    iadd r4.___w, r4.w, r3.y\n"
"   \n"
"    dcl_literal l148, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.___w, r4.w, l148\n"
"    iadd r4.x___, r4.z, r4.x_neg(xyzw)\n"
"    cmov_logical r4.x___, r4.y, r4.w, r4.x\n"
"    udiv r3._y__, r4.x, r3.y\n"
"    iadd r4.x___, r3.z, r3.y_neg(xyzw)\n"
"    iadd r3._y__, r3.z, r3.y\n"
"    cmov_logical r3._y__, r4.y, r4.x, r3.y\n"
"   \n"
"    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r2.z, l149\n"
"   \n"
"    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r2.z, l150\n"
"   \n"
"    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4._y__, r3.y, l151\n"
"   \n"
"    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3._y__, r3.y, l152\n"
"    umul r4.__z_, r4.x, r3.y\n"
"    umul r4.x___, r4.x, r4.y\n"
"    umul r4.___w, r3.z, r3.y\n"
"    umul r3.__z_, r3.z, r4.y\n"
"   \n"
"    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r3.z, l153\n"
"   \n"
"    dcl_literal l154, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r4.w, l154\n"
"    iadd r5.x___, r5.x, r5.y\n"
"    iadd r4.x___, r4.x, r5.x\n"
"   \n"
"    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r4.x, l155\n"
"    iadd r4.__z_, r4.z, r5.x\n"
"   \n"
"    dcl_literal l156, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r4.w, l156\n"
"    iadd r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r4.x___, r4.x, l157\n"
"   \n"
"    dcl_literal l158, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r3.z, l158\n"
"    ior r3.__z_, r4.x, r3.z\n"
"   \n"
"    dcl_literal l159, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r3.w, l159\n"
"   \n"
"    dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.w, l160\n"
"    umul r4.___w, r4.w, r4.y\n"
"    umul r3._y__, r4.x, r3.y\n"
"    umul r4.x___, r4.x, r4.y\n"
"   \n"
"    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r4.x, l161\n"
"   \n"
"    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r3.y, l162\n"
"    iadd r3._y__, r4.y, r3.y\n"
"    iadd r3._y__, r4.w, r3.y\n"
"   \n"
"    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3._y__, r3.y, l163\n"
"   \n"
"    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r4.x, l164\n"
"    ior r3._y__, r3.y, r4.x\n"
"    iadd r4.x___, r3.y, r4.z\n"
"    ult r3._y__, r4.x, r3.y\n"
"    ult r4._y__, r1.y, r4.x\n"
"    ieq r4.__z_, r1.y, r4.x\n"
"    ult r4.___w, r1.z, r3.z\n"
"    and r4.___w, r4.z, r4.w\n"
"    ior r4._y__, r4.y, r4.w\n"
"   \n"
"    dcl_literal l165, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l166, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4._y__, r4.y, l165, l166\n"
"    ieq r4.___w, r1.z, r3.z\n"
"    and r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4._y__, r4.z, l167, r4.y\n"
"   \n"
"    dcl_literal l168, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, r4.y, l168\n"
"    ior r3._y__, r3.y, r4.y\n"
"    iadd r2.__z_, r3.z, r2.z_neg(xyzw)\n"
"    ult r4._y__, r3.z, r2.z\n"
"    iadd r4._y__, r4.x, r4.y\n"
"    iadd r3.___w, r4.y, r3.w_neg(xyzw)\n"
"    cmov_logical r3.___w, r3.y, r3.w, r4.x\n"
"    cmov_logical r2.__z_, r3.y, r2.z, r3.z\n"
"    iadd r2.__z_, r1.z, r2.z_neg(xyzw)\n"
"    ult r3._y__, r1.z, r2.z\n"
"    iadd r3._y__, r1.y, r3.y\n"
"    iadd r1._y__, r3.y, r3.w_neg(xyzw)\n"
"    mov r1.__z_, r2.z\n"
"endif\n"
"ult r2.__z_, r1.y, r0.y\n"
"ieq r3._y__, r1.y, r0.y\n"
"ult r3.__z_, r1.z, r0.z\n"
"and r3.__z_, r3.y, r3.z\n"
"ior r2.__z_, r2.z, r3.z\n"
"dcl_literal l169, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l170, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2.__z_, r2.z, l169, l170\n"
"ieq r3.__z_, r1.z, r0.z\n"
"and r3._y__, r3.y, r3.z\n"
"dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r3.y, l171, r2.z\n"
"dcl_literal l172, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3._y__, r1.y, l172\n"
"dcl_literal l173, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3.__z_, r1.y, l173\n"
"dcl_literal l174, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.___w, r1.z, l174\n"
"ior r3._y__, r3.y, r3.w\n"
"dcl_literal l175, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3._y__, r3.y, l175\n"
"dcl_literal l176, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.___w, r1.z, l176\n"
"dcl_literal l177, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.z, l177\n"
"dcl_literal l178, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l178\n"
"dcl_literal l179, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l179\n"
"dcl_literal l180, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l180, r4.x_neg(xyzw)\n"
"dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l181\n"
"dcl_literal l182, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l182\n"
"dcl_literal l183, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l183\n"
"dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.__z_, r3.z, r4.x, l184\n"
"dcl_literal l185, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.y, l185\n"
"dcl_literal l186, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l186\n"
"dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l187\n"
"dcl_literal l188, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l188, r4.x_neg(xyzw)\n"
"dcl_literal l189, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l189\n"
"dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l190\n"
"dcl_literal l191, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l191\n"
"dcl_literal l192, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r4.x, l192\n"
"dcl_literal l193, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.w, l193\n"
"dcl_literal l194, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l194\n"
"dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l195\n"
"dcl_literal l196, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l196, r4.x_neg(xyzw)\n"
"dcl_literal l197, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l197\n"
"dcl_literal l198, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l198\n"
"dcl_literal l199, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r4.x___, r4.x, l199\n"
"dcl_literal l200, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.___w, r3.w, r4.x, l200\n"
"dcl_literal l201, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r4.x___, r3.z, l201\n"
"iadd r3._y__, r3.z, r3.y\n"
"cmov_logical r3.__z_, r4.x, r3.y, r3.z\n"
"dcl_literal l202, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r4.x___, r3.y, l202\n"
"iadd r3._y__, r3.y, r3.w\n"
"cmov_logical r3._y__, r4.x, r3.y, r3.z\n"
"ilt r3.__z_, r3.y, r2.y\n"
"ieq r3.___w, r2.y, r3.y\n"
"dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r2.z, l203\n"
"and r2.__z_, r3.w, r2.z\n"
"ior r2.__z_, r3.z, r2.z\n"
"and r2.__z_, r3.x, r2.z\n"
"iadd r3.x___, r2.y, r3.y_neg(xyzw)\n"
"dcl_literal l204, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r2.__z_, r2.z, r3.x, l204\n"
"dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r3.x___, r2.z, l205\n"
"if_logicalnz r3.x\n"
"    ilt r3.__z_, r2.w, r2.z\n"
"    iadd r3.___w, r2.z, r2.w_neg(xyzw)\n"
"    and r3.__z_, r3.z, r3.w\n"
"   \n"
"    dcl_literal l206, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, r2.z, l206\n"
"   \n"
"    dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.__z_, r2.z, l207, r3.z\n"
"   \n"
"    dcl_literal l208, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.__z_, r2.z, l208\n"
"   \n"
"    dcl_literal l209, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.___w, r2.z, l209\n"
"    cmov_logical r3.___w, r3.z, r3.w, r2.z\n"
"   \n"
"    dcl_literal l210, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.x___, r2.z, l210\n"
"   \n"
"    dcl_literal l211, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4._y__, l211, r3.w_neg(xyzw)\n"
"    ushr r4._y__, r0.z, r4.y\n"
"    ishl r3.___w, r0.z, r3.w\n"
"    ishl r4.x___, r0.y, r4.x\n"
"    ior r4.x___, r4.y, r4.x\n"
"    cmov_logical r4.x___, r3.z, r0.z, r4.x\n"
"   \n"
"    dcl_literal l212, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.__z_, r3.z, l212, r3.w\n"
"    cmov_logical r3.___w, r2.z, r4.x, r0.y\n"
"    cmov_logical r2.__z_, r2.z, r3.z, r0.z\n"
"   \n"
"    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.__z_, r3.y, l213\n"
"   \n"
"    dcl_literal l214, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4.x___, r3.y, l214\n"
"    cmov_logical r4.x___, r3.z, r4.x, r3.y\n"
"   \n"
"    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4._y__, r3.y, l215\n"
"   \n"
"    dcl_literal l216, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.x___, l216, r4.x_neg(xyzw)\n"
"    ushr r4.__z_, r1.z, r4.x\n"
"    ishl r4.___w, r1.y, r4.y\n"
"    ior r4.__z_, r4.z, r4.w\n"
"    cmov_logical r4.__z_, r3.z, r1.z, r4.z\n"
"    cmov_logical r4.__z_, r3.y, r4.z, r1.y\n"
"    ushr r4.x___, r2.z, r4.x\n"
"    ishl r4._y__, r3.w, r4.y\n"
"    ior r4.x___, r4.x, r4.y\n"
"    cmov_logical r3.__z_, r3.z, r2.z, r4.x\n"
"    cmov_logical r3._y__, r3.y, r3.z, r3.w\n"
"    udiv r3.__z_, r4.z, r3.y\n"
"    umul r4.x___, r3.z, r3.y\n"
"    ilt r4._y__, r4.z, r4.x\n"
"    iadd r4.___w, r4.x, r4.z_neg(xyzw)\n"
"    iadd r4.___w, r4.w, r3.y\n"
"   \n"
"    dcl_literal l217, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.___w, r4.w, l217\n"
"    iadd r4.x___, r4.z, r4.x_neg(xyzw)\n"
"    cmov_logical r4.x___, r4.y, r4.w, r4.x\n"
"    udiv r3._y__, r4.x, r3.y\n"
"    iadd r4.x___, r3.z, r3.y_neg(xyzw)\n"
"    iadd r3._y__, r3.z, r3.y\n"
"    cmov_logical r3._y__, r4.y, r4.x, r3.y\n"
"   \n"
"    dcl_literal l218, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r2.z, l218\n"
"   \n"
"    dcl_literal l219, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r2.z, l219\n"
"   \n"
"    dcl_literal l220, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4._y__, r3.y, l220\n"
"   \n"
"    dcl_literal l221, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3._y__, r3.y, l221\n"
"    umul r4.__z_, r4.x, r3.y\n"
"    umul r4.x___, r4.x, r4.y\n"
"    umul r4.___w, r3.z, r3.y\n"
"    umul r3.__z_, r3.z, r4.y\n"
"   \n"
"    dcl_literal l222, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r3.z, l222\n"
"   \n"
"    dcl_literal l223, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r4.w, l223\n"
"    iadd r5.x___, r5.x, r5.y\n"
"    iadd r4.x___, r4.x, r5.x\n"
"   \n"
"    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r4.x, l224\n"
"    iadd r4.__z_, r4.z, r5.x\n"
"   \n"
"    dcl_literal l225, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r4.w, l225\n"
"    iadd r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r4.x___, r4.x, l226\n"
"   \n"
"    dcl_literal l227, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r3.z, l227\n"
"    ior r3.__z_, r4.x, r3.z\n"
"   \n"
"    dcl_literal l228, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r3.w, l228\n"
"   \n"
"    dcl_literal l229, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.w, l229\n"
"    umul r4.___w, r4.w, r4.y\n"
"    umul r3._y__, r4.x, r3.y\n"
"    umul r4.x___, r4.x, r4.y\n"
"   \n"
"    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r4.x, l230\n"
"   \n"
"    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r3.y, l231\n"
"    iadd r3._y__, r4.y, r3.y\n"
"    iadd r3._y__, r4.w, r3.y\n"
"   \n"
"    dcl_literal l232, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3._y__, r3.y, l232\n"
"   \n"
"    dcl_literal l233, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r4.x, l233\n"
"    ior r3._y__, r3.y, r4.x\n"
"    iadd r4.x___, r3.y, r4.z\n"
"    ult r3._y__, r4.x, r3.y\n"
"    ult r4._y__, r1.y, r4.x\n"
"    ieq r4.__z_, r1.y, r4.x\n"
"    ult r4.___w, r1.z, r3.z\n"
"    and r4.___w, r4.z, r4.w\n"
"    ior r4._y__, r4.y, r4.w\n"
"   \n"
"    dcl_literal l234, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l235, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4._y__, r4.y, l234, l235\n"
"    ieq r4.___w, r1.z, r3.z\n"
"    and r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l236, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4._y__, r4.z, l236, r4.y\n"
"   \n"
"    dcl_literal l237, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, r4.y, l237\n"
"    ior r3._y__, r3.y, r4.y\n"
"    iadd r2.__z_, r3.z, r2.z_neg(xyzw)\n"
"    ult r4._y__, r3.z, r2.z\n"
"    iadd r4._y__, r4.x, r4.y\n"
"    iadd r3.___w, r4.y, r3.w_neg(xyzw)\n"
"    cmov_logical r3.___w, r3.y, r3.w, r4.x\n"
"    cmov_logical r2.__z_, r3.y, r2.z, r3.z\n"
"    iadd r2.__z_, r1.z, r2.z_neg(xyzw)\n"
"    ult r3._y__, r1.z, r2.z\n"
"    iadd r3._y__, r1.y, r3.y\n"
"    iadd r1._y__, r3.y, r3.w_neg(xyzw)\n"
"    mov r1.__z_, r2.z\n"
"endif\n"
"ult r2.__z_, r1.y, r0.y\n"
"ieq r3._y__, r1.y, r0.y\n"
"ult r3.__z_, r1.z, r0.z\n"
"and r3.__z_, r3.y, r3.z\n"
"ior r2.__z_, r2.z, r3.z\n"
"dcl_literal l238, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l239, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2.__z_, r2.z, l238, l239\n"
"ieq r3.__z_, r1.z, r0.z\n"
"and r3._y__, r3.y, r3.z\n"
"dcl_literal l240, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r3.y, l240, r2.z\n"
"dcl_literal l241, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3._y__, r1.y, l241\n"
"dcl_literal l242, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3.__z_, r1.y, l242\n"
"dcl_literal l243, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.___w, r1.z, l243\n"
"ior r3._y__, r3.y, r3.w\n"
"dcl_literal l244, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3._y__, r3.y, l244\n"
"dcl_literal l245, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.___w, r1.z, l245\n"
"dcl_literal l246, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.z, l246\n"
"dcl_literal l247, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l247\n"
"dcl_literal l248, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l248\n"
"dcl_literal l249, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l249, r4.x_neg(xyzw)\n"
"dcl_literal l250, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l250\n"
"dcl_literal l251, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l251\n"
"dcl_literal l252, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l252\n"
"dcl_literal l253, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.__z_, r3.z, r4.x, l253\n"
"dcl_literal l254, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.y, l254\n"
"dcl_literal l255, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l255\n"
"dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l256\n"
"dcl_literal l257, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l257, r4.x_neg(xyzw)\n"
"dcl_literal l258, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l258\n"
"dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l259\n"
"dcl_literal l260, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.x___, r4.x, l260\n"
"dcl_literal l261, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r4.x, l261\n"
"dcl_literal l262, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.x___, r3.w, l262\n"
"dcl_literal l263, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.x___, r4.x, l263\n"
"dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l264\n"
"dcl_literal l265, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.x___, l265, r4.x_neg(xyzw)\n"
"dcl_literal l266, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.x___, r4.x, l266\n"
"dcl_literal l267, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.x___, r4.x, l267\n"
"dcl_literal l268, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r4.x___, r4.x, l268\n"
"dcl_literal l269, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.___w, r3.w, r4.x, l269\n"
"dcl_literal l270, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r4.x___, r3.z, l270\n"
"iadd r3._y__, r3.z, r3.y\n"
"cmov_logical r3.__z_, r4.x, r3.y, r3.z\n"
"dcl_literal l271, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r4.x___, r3.y, l271\n"
"iadd r3._y__, r3.y, r3.w\n"
"cmov_logical r3._y__, r4.x, r3.y, r3.z\n"
"ilt r3.__z_, r3.y, r2.y\n"
"ieq r3.___w, r2.y, r3.y\n"
"dcl_literal l272, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r2.z, l272\n"
"and r2.__z_, r3.w, r2.z\n"
"ior r2.__z_, r3.z, r2.z\n"
"and r2.__z_, r3.x, r2.z\n"
"iadd r2._y__, r2.y, r3.y_neg(xyzw)\n"
"dcl_literal l273, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r2._y__, r2.z, r2.y, l273\n"
"dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r2.y, l274\n"
"if_logicalnz r2.z\n"
"    ilt r2.__z_, r2.w, r2.y\n"
"    iadd r2.___w, r2.y, r2.w_neg(xyzw)\n"
"    and r2.__z_, r2.z, r2.w\n"
"   \n"
"    dcl_literal l275, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, r2.y, l275\n"
"   \n"
"    dcl_literal l276, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2._y__, r2.y, l276, r2.z\n"
"   \n"
"    dcl_literal l277, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2.__z_, r2.y, l277\n"
"   \n"
"    dcl_literal l278, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r2.___w, r2.y, l278\n"
"    cmov_logical r2.___w, r2.z, r2.w, r2.y\n"
"   \n"
"    dcl_literal l279, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.x___, r2.y, l279\n"
"   \n"
"    dcl_literal l280, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.__z_, l280, r2.w_neg(xyzw)\n"
"    ushr r3.__z_, r0.z, r3.z\n"
"    ishl r2.___w, r0.z, r2.w\n"
"    ishl r3.x___, r0.y, r3.x\n"
"    ior r3.x___, r3.z, r3.x\n"
"    cmov_logical r3.x___, r2.z, r0.z, r3.x\n"
"   \n"
"    dcl_literal l281, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.__z_, r2.z, l281, r2.w\n"
"    cmov_logical r0._y__, r2.y, r3.x, r0.y\n"
"    cmov_logical r0.__z_, r2.y, r2.z, r0.z\n"
"   \n"
"    dcl_literal l282, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2._y__, r3.y, l282\n"
"   \n"
"    dcl_literal l283, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r2.__z_, r3.y, l283\n"
"    cmov_logical r2.__z_, r2.y, r2.z, r3.y\n"
"   \n"
"    dcl_literal l284, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r2.___w, r3.y, l284\n"
"   \n"
"    dcl_literal l285, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r2.__z_, l285, r2.z_neg(xyzw)\n"
"    ushr r3.x___, r1.z, r2.z\n"
"    ishl r3.__z_, r1.y, r2.w\n"
"    ior r3.x___, r3.x, r3.z\n"
"    cmov_logical r3.x___, r2.y, r1.z, r3.x\n"
"    cmov_logical r3.x___, r3.y, r3.x, r1.y\n"
"    ushr r2.__z_, r0.z, r2.z\n"
"    ishl r2.___w, r0.y, r2.w\n"
"    ior r2.__z_, r2.z, r2.w\n"
"    cmov_logical r2._y__, r2.y, r0.z, r2.z\n"
"    cmov_logical r2._y__, r3.y, r2.y, r0.y\n"
"    udiv r2.__z_, r3.x, r2.y\n"
"    umul r2.___w, r2.z, r2.y\n"
"    ilt r3._y__, r3.x, r2.w\n"
"    iadd r3.__z_, r2.w, r3.x_neg(xyzw)\n"
"    iadd r3.__z_, r3.z, r2.y\n"
"   \n"
"    dcl_literal l286, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r3.__z_, r3.z, l286\n"
"    iadd r2.___w, r3.x, r2.w_neg(xyzw)\n"
"    cmov_logical r2.___w, r3.y, r3.z, r2.w\n"
"    udiv r2._y__, r2.w, r2.y\n"
"    iadd r2.___w, r2.z, r2.y_neg(xyzw)\n"
"    iadd r2._y__, r2.z, r2.y\n"
"    cmov_logical r2._y__, r3.y, r2.w, r2.y\n"
"   \n"
"    dcl_literal l287, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.__z_, r0.z, l287\n"
"   \n"
"    dcl_literal l288, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r2.___w, r0.z, l288\n"
"   \n"
"    dcl_literal l289, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.x___, r2.y, l289\n"
"   \n"
"    dcl_literal l290, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r2._y__, r2.y, l290\n"
"    umul r3._y__, r2.w, r2.y\n"
"    umul r2.___w, r2.w, r3.x\n"
"    umul r3.__z_, r2.z, r2.y\n"
"    umul r2.__z_, r2.z, r3.x\n"
"   \n"
"    dcl_literal l291, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.___w, r2.z, l291\n"
"   \n"
"    dcl_literal l292, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r3.z, l292\n"
"    iadd r3.___w, r3.w, r4.x\n"
"    iadd r2.___w, r2.w, r3.w\n"
"   \n"
"    dcl_literal l293, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.___w, r2.w, l293\n"
"    iadd r3._y__, r3.y, r3.w\n"
"   \n"
"    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.__z_, r3.z, l294\n"
"    iadd r3._y__, r3.y, r3.z\n"
"   \n"
"    dcl_literal l295, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r2.___w, r2.w, l295\n"
"   \n"
"    dcl_literal l296, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.__z_, r2.z, l296\n"
"    ior r2.__z_, r2.w, r2.z\n"
"   \n"
"    dcl_literal l297, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.___w, r0.y, l297\n"
"   \n"
"    dcl_literal l298, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.__z_, r0.y, l298\n"
"    umul r3.__z_, r3.z, r3.x\n"
"    umul r2._y__, r2.w, r2.y\n"
"    umul r2.___w, r2.w, r3.x\n"
"   \n"
"    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.x___, r2.w, l299\n"
"   \n"
"    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2._y__, r2.y, l300\n"
"    iadd r2._y__, r3.x, r2.y\n"
"    iadd r2._y__, r3.z, r2.y\n"
"   \n"
"    dcl_literal l301, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r2._y__, r2.y, l301\n"
"   \n"
"    dcl_literal l302, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.___w, r2.w, l302\n"
"    ior r2._y__, r2.y, r2.w\n"
"    iadd r2.___w, r2.y, r3.y\n"
"    ult r2._y__, r2.w, r2.y\n"
"    ult r3.x___, r1.y, r2.w\n"
"    ieq r3._y__, r1.y, r2.w\n"
"    ult r3.__z_, r1.z, r2.z\n"
"    and r3.__z_, r3.y, r3.z\n"
"    ior r3.x___, r3.x, r3.z\n"
"   \n"
"    dcl_literal l303, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l304, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r3.x___, r3.x, l303, l304\n"
"    ieq r3.__z_, r1.z, r2.z\n"
"    and r3._y__, r3.y, r3.z\n"
"   \n"
"    dcl_literal l305, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.x___, r3.y, l305, r3.x\n"
"   \n"
"    dcl_literal l306, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3.x___, r3.x, l306\n"
"    ior r2._y__, r2.y, r3.x\n"
"    iadd r0.__z_, r2.z, r0.z_neg(xyzw)\n"
"    ult r3.x___, r2.z, r0.z\n"
"    iadd r3.x___, r2.w, r3.x\n"
"    iadd r0._y__, r3.x, r0.y_neg(xyzw)\n"
"    cmov_logical r0._yz_, r2.y, r0.yyzy, r2.wwzw\n"
"    iadd r0.__z_, r1.z, r0.z_neg(xyzw)\n"
"    ult r2._y__, r1.z, r0.z\n"
"    iadd r2._y__, r1.y, r2.y\n"
"    iadd r1._y__, r2.y, r0.y_neg(xyzw)\n"
"    mov r1.__z_, r0.z\n"
"endif\n"
"dcl_literal l307, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0._y__, r1.w, l307\n"
"cmov_logical r0.x_z_, r0.y, r0.xxwx, r1.zzyz\n"
"dcl_literal l308, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r1.w, r0.xzxx, l308\n"
"dcl_literal l309, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r2.x, l309, r0.xyxx\n"
"inegate r0.__z_, r0.x\n"
"dcl_literal l310, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r0.___w, l310, r0.z\n"
"iadd r0.___w, r0.w, r0.y_neg(xyzw)\n"
"cmov_logical r0.xy__, r1.x, r0.zwzz, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smod_i8",
"mdef(406)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l1, 0x000000FF, 0x000000FF, 0x00000080, 0x00000000\n"
"and r1.xyz_, r0.xyxx, l1\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l2\n"
"dcl_literal l3, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00\n"
"ior r1.___w, r1.x, l3\n"
"cmov_logical r1.x___, r1.z, r1.w, r1.x\n"
"dcl_literal l4, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"and r1.__z_, r0.w, l4\n"
"dcl_literal l5, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00\n"
"ior r1.___w, r0.w, l5\n"
"cmov_logical r0.___w, r1.z, r1.w, r0.w\n"
"ixor r1.__z_, r1.x, r0.w\n"
"imax r1.___w, r1.x, r1.x_neg(xyzw)\n"
"imax r2.x___, r0.w, r0.w_neg(xyzw)\n"
"udiv r1.___w, r1.w, r2.x\n"
"inegate r2.x___, r1.w\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r1.__z_, r1.z, l6\n"
"cmov_logical r1.__z_, r1.z, r2.x, r1.w\n"
"dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.y, r1.z, l7\n"
"imul r0.___w, r0.w, r1.y\n"
"iadd r0.___w, r1.x, r0.w_neg(xyzw)\n"
"dcl_literal l8, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.__z_, r0.w, l8\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smoothstep_f32",
"mdef(407)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"ge r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x00000000\n"
"and r1.xyz_, r0.xyzx, l0\n"
"add r0.xy__, r0.x_neg(xyzw), r0.zyzz\n"
"\n"
"dcl_literal l1, 0x7F800000, 0x7F800000, 0x7F800000, 0x00000000\n"
"ilt r1.xyz_, l1, r1.xyzx\n"
"ior r0.__z_, r0.w, r1.x\n"
"ior r0.__z_, r1.y, r0.z\n"
"ior r0.__z_, r1.z, r0.z\n"
"div_zeroop(infinity)_sat r0.x___, r0.x, r0.y\n"
"mul_ieee r0._y__, r0.x, r0.x\n"
"\n"
"dcl_literal l2, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"\n"
"dcl_literal l3, 0x40400000, 0x40400000, 0x40400000, 0x40400000\n"
"mad_ieee r0.x___, r0.x_neg(xyzw), l2, l3\n"
"mul_ieee r0.x___, r0.y, r0.x\n"
"\n"
"dcl_literal l4, 0x7FC00001, 0x7FC00001, 0x7FC00001, 0x7FC00001\n"
"cmov_logical r0.x___, r0.z, l4, r0.x\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__smul24_i32",
"mdef(408)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"\n"
"dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishl r1.xy__, r0.xyxx, l0\n"
"\n"
"dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishr r1.xy__, r1.xyxx, l1\n"
"imul r0.x___, r1.x, r1.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smul_hi_i16",
"mdef(409)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y_, r1.x\n"
"imul r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l2, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ishr r0.x___, r0.w, l2\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smul_hi_i32",
"mdef(410)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y_, r1.x\n"
"\n"
"dcl_literal l4, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ishr r1.xy__, r0.xyxx, l4\n"
"ixor r0.___w, r0.y, r0.x\n"
"\n"
"dcl_literal l5, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"ishr r0.___w, r0.w, l5\n"
"ixor r2.xy__, r0.xyxx, r1.xyxx\n"
"iadd r1.xy__, r2.xyxx, r1.xyxx_neg(xyzw)\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"and r1.__zw, r1.xxxy, l6\n"
"\n"
"dcl_literal l7, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.xy__, r1.xyxx, l7\n"
"umul r2.x___, r1.x, r1.y\n"
"umul r1.xyz_, r1.xzzx, r1.wyww\n"
"\n"
"dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.___w, r1.z, l8\n"
"\n"
"dcl_literal l9, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r2._y__, r1.y, l9\n"
"iadd r1.___w, r1.w, r2.y\n"
"iadd r1.x___, r1.x, r1.w\n"
"\n"
"dcl_literal l10, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.___w, r1.x, l10\n"
"iadd r1.___w, r2.x, r1.w\n"
"\n"
"dcl_literal l11, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1._y__, r1.y, l11\n"
"iadd r1._y__, r1.w, r1.y\n"
"\n"
"dcl_literal l12, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ishl r1.x___, r1.x, l12\n"
"\n"
"dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r1.__z_, r1.z, l13\n"
"ior r1.x___, r1.x, r1.z\n"
"ixor r1.x_z_, r0.w, r1.xxyx\n"
"iadd r1.x__w, r1.xxxz, r0.w_neg(xyzw)\n"
"cmov_logical r1.x___, r1.x, r1.z, r1.w\n"
"cmov_logical r0.x___, r0.w, r1.x, r1.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__smul_hi_i8",
"mdef(411)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y_, r1.x\n"
"imul r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ishr r0.___w, r0.w, l0\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sqrt_f32",
"mdef(412)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000\n"
"and r0._yz_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.__z_, r0.z, l1\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r0.___w, r0.y, l2\n"
"and r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r0.x, l3\n"
"and r0.___w, r0.w, r1.x\n"
"ior r0.__z_, r0.z, r0.w\n"
"\n"
"dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l4, r0.y\n"
"ior r0.__z_, r0.z, r0.y\n"
"if_logicalnz r0.z\n"
"    \n"
"    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.__z_, r0.x, l5\n"
"    itof r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l6, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r1.xy__, r0.z, l6\n"
"    \n"
"    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.__z_, r1.x, l7\n"
"    \n"
"    dcl_literal l8, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    iadd r0.__z_, r0.z, l8\n"
"    \n"
"    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r1.x___, r1.y, l9\n"
"    \n"
"    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.__z_, l10, r0.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r1._y__, l11, r0.z\n"
"    \n"
"    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.__z_, r1.y, l12, r0.z\n"
"    \n"
"    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1._y__, l13, r0.z\n"
"    ishr r1.__z_, r1.x, r0.z\n"
"    inegate r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.__z_, r0.z, l14\n"
"    iadd r0.__z_, r1.x, r0.z\n"
"    cmov_logical r0.__z_, r1.y, r1.z, r0.z\n"
"    sqrt_vec r0.__z_, r0.z\n"
"    \n"
"    dcl_literal l15, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r1.xy__, r0.z, l15\n"
"    if_logicalz r1.x\n"
"        itof r1.__z_, r1.y\n"
"        \n"
"        dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r1.__zw, r1.z, l16\n"
"        \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.__z_, r1.z, l17\n"
"        \n"
"        dcl_literal l18, 0xFFFFFFF4, 0xFFFFFFF4, 0xFFFFFFF4, 0xFFFFFFF4\n"
"        iadd r1.__z_, r1.z, l18\n"
"        \n"
"        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l19\n"
"        \n"
"        dcl_literal l20, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1.__z_, l20, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.x___, l21, r1.z\n"
"        \n"
"        dcl_literal l22, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.__z_, r2.x, l22, r1.z\n"
"        \n"
"        dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2.x___, l23, r1.z\n"
"        ishr r2._y__, r1.w, r1.z\n"
"        inegate r1.__z_, r1.z\n"
"        \n"
"        dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.__z_, r1.z, l24\n"
"        iadd r1.__z_, r1.w, r1.z\n"
"        cmov_logical r1.__z_, r2.x, r2.y, r1.z\n"
"    else\n"
"        \n"
"        dcl_literal l25, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r0.__z_, r0.z, l25\n"
"        \n"
"        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.x___, r1.x, l26\n"
"        \n"
"        dcl_literal l27, 0xFA000000, 0xFA000000, 0xFA000000, 0xFA000000\n"
"        iadd r0.__z_, r0.z, l27\n"
"        \n"
"        dcl_literal l28, 0xFFFFFF75, 0xFFFFFF75, 0xFFFFFF75, 0xFFFFFF75\n"
"        iadd r1.x___, r1.x, l28\n"
"        \n"
"        dcl_literal l29, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r1.x___, l29, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r1.___w, l30, r1.x\n"
"        \n"
"        dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1._y__, r1.y, l31\n"
"        ishr r1.x___, r1.y, r1.x\n"
"        cmov_logical r1.__z_, r1.w, r1.x, r0.z\n"
"    endif\n"
"    \n"
"    dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"    cmov_logical r0.__z_, r0.w, l32, r1.z\n"
"    \n"
"    dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"    ior r0.___w, r0.x, l33\n"
"    cmov_logical r0.x___, r0.y, r0.w, r0.z\n"
"else\n"
"    sqrt_vec r0.x___, r0.x\n"
"endif\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sqrt_f64",
"mdef(413)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x00000001, 0x3ff00000, 0x000fffff, 0x3ff80000\n"
"dcl_literal l2, 0xfff80000, 0x3fe00000, -1, 0\n"
"dcl_literal l3, 0x10000000, 256, -128, 0x7FF00000\n"
"ilt r10.x, r0.y, l2.0\n"
"deq r10.y, r0.xy, l2.00\n"
"ult r10.z, r0.y, l3.x\n"
"deq r10.w, r0.xy, l3.0w\n"
"ior r10.w, r10.w, r10.y\n"
"cmov_logical r4.x, r10.z, l3.y, l3.0\n"
"cmov_logical r10.z, r10.z, l3.z, l3.0\n"
"dldexp  r5.xy, r0.xy, r4.x\n"
"dsqrt  r1.xy, r5.xy\n"
"mov r1.x, l2.0\n"
"drcp_zeroop(infinity) r3.xy, r1.xy\n"
"mov r3.x, l2.0\n"
"dmad  r4.xy, r1.xy, r1.xy, r5.xy_neg(yw)\n"
"dldexp  r4.xy, r4.xy, l2.z\n"
"dmad  r1.xy, r4.xy, r3.xy_neg(yw), r1.xy\n"
"dmad  r4.xy, r1.xy_neg(yw), r3.xy, l1.0y\n"
"dmad  r3.xy, r3.xy, r4.xy, r3.xy\n"
"dmad  r4.xy, r1.xy, r1.xy, r5.xy_neg(yw)\n"
"dldexp  r4.xy, r4.xy, l2.z\n"
"dmad  r1.xy, r4.xy, r3.xy_neg(yw), r1.xy\n"
"dmad  r4.xy, r1.xy, r1.xy, r5.xy_neg(yw)\n"
"dldexp  r4.xy, r4.xy, l2.z\n"
"dmad  r1.xy, r4.xy, r3.xy_neg(yw), r1.xy\n"
"dldexp  r1.xy, r1.xy, r10.z\n"
"cmov_logical r1.xy, r10.xx, l2.0x, r1.xy\n"
"cmov_logical r0.xy, r10.ww, r0.xy, r1.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sqrt_f64_7XX",
"mdef(414)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x00000001, 0x3ff00000, 0x40000000, 0x3fe00000\n"
"dcl_literal l2, 0xfff80000, 0x7FF00000, -1, 0\n"
"dfrexp r20, r0\n"
"iand r21.x, r20.y, l1.x\n"
"ishr r20.y, r20.y, l1.x\n"
"dldexp r20.xy, l1.0y, r20.y\n"
"dldexp r20.zw, r20.zw, r21.x\n"
"d2f r21.x, r20.zw\n"
"sqrt r21.y, r21.x\n"
"iadd r21.y, r21.y, l2.z\n"
"rsq r21.z, r21.x\n"
"f2d r22.xy, r21.y\n"
"f2d r21.xy, r21.z\n"
"dmad r23.xy, r22.xy, r21.xy_neg(yw),l1.0y\n"
"dmad r21.xy, r21.xy, r23.xy, r21.xy\n"
"dmad r22.xy, r20.zw, r21.xy, r22.xy\n"
"dmul r22.xy, r22.xy, l1.0w\n"
"dmad r23.xy, r22.xy, r21.xy_neg(yw),l1.0y\n"
"dmad r21.xy, r21.xy, r23.xy, r21.xy\n"
"dmad r22.xy, r20.zw, r21.xy, r22.xy\n"
"dmul r22.xy, r22.xy, l1.0w\n"
"dadd r21.zw, r22.xy, r22.0y_neg(yw)\n"
"dmad r23.xy, r22.0y, r22.0y, r20.zw_neg(yw)\n"
"dmul r23.zw, r22.0y, r21.zw\n"
"dmad r23.xy, r23.zw, l1.0z, r23.xy\n"
"dmad r23.xy, r21.zw, r21.zw, r23.xy\n"
"dmul r23.xy, r23.xy_neg(yw), r21.xy\n"
"dmad r22.xy, r23.xy, l1.0w, r22.xy\n"
"dmul r20.xy, r22.xy, r20.xy\n"
"ilt r10.x, r0.y, l2.0\n"
"deq r10.y, r0.xy, l2.00\n"
"deq r10.w, r0.xy, l2.0y\n"
"ixor r10.z, r0.y, r0.y_abs\n"
"cmov_logical r20.xy, r10.xx, l2.0x, r20.xy\n"
"cmov_logical r20.xy, r10.yy, r10.0z, r20.xy\n"
"cmov_logical r0.xy, r10.ww, r0.xy, r20.xy\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__sra_i64_i64",
"mdef(415)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x, r1.x, l0.x\n"
"iand r3.x, r1.x, l0.y\n"
"iadd r4.x, l0.y, r2_neg(x)\n"
"ishr r5.x, r0.y, r2.x\n"
"ishr r6.x, r0.y, l0.x\n"
"ushr r7.x, r0.x, r2.x\n"
"ishl r8.x, r0.y, r4.x\n"
"cmov_logical r9.x, r2.x, r8.x, l0.z\n"
"ior r10.x, r7.x, r9.x\n"
"cmov_logical r0.x___, r3.x, r5.x, r10.x\n"
"cmov_logical r0._y__, r3.x, r6.x, r5.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sra_i64_v2i64",
"mdef(416)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x_z, r1.x0z, l0.x\n"
"iand r3.x_z, r1.x0z, l0.y\n"
"iadd r4.x_z, l0.y, r2_neg(xyz)\n"
"ishr r5.x_z, r0.y0w, r2.x0z\n"
"ishr r6.x_z, r0.y0w, l0.x\n"
"ushr r7.x_z, r0.x0z, r2.x0z\n"
"ishl r8.x_z, r0.y0w, r4.x0z\n"
"cmov_logical r9.x_z, r2.x0z, r8.x0z, l0.z\n"
"ior r10.x_z, r7.x0z, r9.x0z\n"
"cmov_logical r0.x_z_, r3.x0z, r5.x0z, r10.x0z\n"
"cmov_logical r0._y_w, r3.0x0z, r6.0x0z, r5.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sra_i64",
"mdef(417)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x, r1.x, l0.x\n"
"iand r3.x, r1.x, l0.y\n"
"iadd r4.x, l0.y, r2_neg(x)\n"
"ishr r5.x, r0.y, r2.x\n"
"ishr r6.x, r0.y, l0.x\n"
"ushr r7.x, r0.x, r2.x\n"
"ishl r8.x, r0.y, r4.x\n"
"cmov_logical r9.x, r2.x, r8.x, l0.z\n"
"ior r10.x, r7.x, r9.x\n"
"cmov_logical r0.x___, r3.x, r5.x, r10.x\n"
"cmov_logical r0._y__, r3.x, r6.x, r5.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__sra_v2i64",
"mdef(418)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"dcl_literal l0, 31, 32, 0, 0\n"
"iand r2.x_z, r1.x0z, l0.x\n"
"iand r3.x_z, r1.x0z, l0.y\n"
"iadd r4.x_z, l0.y, r2_neg(xyz)\n"
"ishr r5.x_z, r0.y0w, r2.x0z\n"
"ishr r6.x_z, r0.y0w, l0.x\n"
"ushr r7.x_z, r0.x0z, r2.x0z\n"
"ishl r8.x_z, r0.y0w, r4.x0z\n"
"cmov_logical r9.x_z, r2.x0z, r8.x0z, l0.z\n"
"ior r10.x_z, r7.x0z, r9.x0z\n"
"cmov_logical r0.x_z_, r3.x0z, r5.x0z, r10.x0z\n"
"cmov_logical r0._y_w, r3.0x0z, r6.0x0z, r5.0x0z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__srhadd_i16",
"mdef(419)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r0.___w, r0.w, l4\n"
"\n"
"dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r0.x___, r0.w, l5\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__srhadd_i32",
"mdef(420)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"ior r0.___w, r0.y, r0.x\n"
"\n"
"dcl_literal l8, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.___w, r0.w, l8\n"
"\n"
"dcl_literal l9, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r1.xy__, r0.xyxx, l9\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__srhadd_i8",
"mdef(421)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l0, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r0.___w, r1.x, l0\n"
"\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ishr r0.___w, r0.w, l1\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__srotate_i16",
"mdef(422)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"\n"
"dcl_literal l8, 0x0000000F, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.yxyy, l8\n"
"ishl r0.___w, r1.y, r1.x\n"
"\n"
"dcl_literal l9, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"iadd r1.x___, l9, r1.x_neg(xyzw)\n"
"ushr r1.x___, r1.y, r1.x\n"
"ior r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l10, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.___w, r0.w, l10\n"
"\n"
"dcl_literal l11, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ishl r0.___w, r0.w, l11\n"
"\n"
"dcl_literal l12, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ishr r0.x___, r0.w, l12\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__srotate_i32",
"mdef(423)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"\n"
"dcl_literal l16, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"and r0.___w, r0.y, l16\n"
"ishl r1.x___, r0.x, r0.w\n"
"\n"
"dcl_literal l17, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r0.___w, l17, r0.w_neg(xyzw)\n"
"ushr r0.___w, r0.x, r0.w\n"
"ior r0.x___, r1.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__srotate_i8",
"mdef(424)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"\n"
"dcl_literal l0, 0x00000007, 0x000000FF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.yxyy, l0\n"
"ishl r0.___w, r1.y, r1.x\n"
"\n"
"dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"iadd r1.x___, l1, r1.x_neg(xyzw)\n"
"ushr r1.x___, r1.y, r1.x\n"
"ior r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.___w, r0.w, l2\n"
"\n"
"dcl_literal l3, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ishl r0.___w, r0.w, l3\n"
"\n"
"dcl_literal l4, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ishr r0.x___, r0.w, l4\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ssub_sat_i16",
"mdef(425)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l3, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000\n"
"imax r0.___w, r0.w, l3\n"
"\n"
"dcl_literal l4, 0x00007FFF, 0x00007FFF, 0x00007FFF, 0x00007FFF\n"
"imin r0.x___, r0.w, l4\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ssub_sat_i32",
"mdef(426)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r0.y, l6\n"
"ilt r1._y__, r0.w, r0.x\n"
"and r1.x___, r1.x, r1.y\n"
"\n"
"dcl_literal l7, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"cmov_logical r1.x___, r1.x, l7, r0.w\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, l8, r0.y\n"
"ilt r0.___w, r0.x, r0.w\n"
"and r0.___w, r1.y, r0.w\n"
"\n"
"dcl_literal l9, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"cmov_logical r0.x___, r0.w, l9, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ssub_sat_i8",
"mdef(427)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l0, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80\n"
"imax r0.___w, r0.w, l0\n"
"\n"
"dcl_literal l1, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"imin r0.x___, r0.w, l1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__step_f32",
"mdef(428)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"lt r0.__z_, r0.y, r0.x\n"
"\n"
"dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r0.z, l0, l1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__store_128bit_global",
"mdef(429)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x], r1\n"
"mend\n"
,2,0
},
{ "__store_128bit_local",
"mdef(430)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"lds_store_vec_id(0) mem, r0.x, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_128bit_private",
"mdef(431)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x], r1\n"
"mend\n"
,2,0
},
{ "__store_128bit_uav",
"mdef(432)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"uav_raw_store_id(0) mem0, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_32bit_local",
"mdef(433)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"lds_store_id(0) mem, r0.x, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_32bit_uav",
"mdef(434)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"uav_raw_store_id(0) mem0.x, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_64bit_local",
"mdef(435)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"lds_store_vec_id(0) mem.xy__, r0.x, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_64bit_uav",
"mdef(436)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"uav_raw_store_id(0) mem0.xy, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_96bit_global",
"mdef(437)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].xyz_, r1\n"
"mend\n"
,2,0
},
{ "__store_96bit_local",
"mdef(438)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"lds_store_vec_id(0) mem.xyz_, r0.x, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_96bit_private",
"mdef(439)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].xyz_, r1\n"
"mend\n"
,2,0
},
{ "__store_96bit_uav",
"mdef(440)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"uav_raw_store_id(0) mem0.xyz, r0.x, r1\n"
"mend\n"
,2,0
},
{ "__store_hi_64bit_global",
"mdef(441)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].__zw, r1.00xy\n"
"mend\n"
,2,0
},
{ "__store_hi_64bit_private",
"mdef(442)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].__zw, r1.00xy\n"
"mend\n"
,2,0
},
{ "__store_lo_64bit_global",
"mdef(443)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].xy__, r1.xy\n"
"mend\n"
,2,0
},
{ "__store_lo_64bit_private",
"mdef(444)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].xy__, r1.xy\n"
"mend\n"
,2,0
},
{ "__store_w_32bit_global",
"mdef(445)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].w, r1.x\n"
"mend\n"
,2,0
},
{ "__store_w_32bit_private",
"mdef(446)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].w, r1.x\n"
"mend\n"
,2,0
},
{ "__store_x_32bit_global",
"mdef(447)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].x, r1.x\n"
"mend\n"
,2,0
},
{ "__store_x_32bit_private",
"mdef(448)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].x, r1.x\n"
"mend\n"
,2,0
},
{ "__store_y_32bit_global",
"mdef(449)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].y, r1.x\n"
"mend\n"
,2,0
},
{ "__store_y_32bit_private",
"mdef(450)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].y, r1.x\n"
"mend\n"
,2,0
},
{ "__store_z_32bit_global",
"mdef(451)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov g[r0.x].z, r1.x\n"
"mend\n"
,2,0
},
{ "__store_z_32bit_private",
"mdef(452)_out(0)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov x0[r0.x].z, r1.x\n"
"mend\n"
,2,0
},
{ "__tanh_f32",
"mdef(453)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0._y__, r0.x_abs\n"
"\n"
"dcl_literal l0, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"mul_ieee r0.__z_, r0.y, l0\n"
"\n"
"dcl_literal l1, 0x4038AA3B, 0x4038AA3B, 0x4038AA3B, 0x4038AA3B\n"
"\n"
"dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r0.___w, r0.y, l1, l2\n"
"round_z r0.___w, r0.w\n"
"\n"
"dcl_literal l3, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mul_ieee r1.x___, r0.w, l3\n"
"\n"
"dcl_literal l4, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r1.x___, r0.y, l4, r1.x_neg(xyzw)\n"
"\n"
"dcl_literal l5, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1._y__, r0.w_neg(xyzw), l5, r1.x\n"
"mul_ieee r1.__z_, r1.y, r1.y\n"
"\n"
"dcl_literal l6, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l7, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r1.___w, r1.z, l6, l7\n"
"\n"
"dcl_literal l8, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r1.___w, r1.z, r1.w, l8\n"
"\n"
"dcl_literal l9, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r1.___w, r1.z, r1.w, l9\n"
"\n"
"dcl_literal l10, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r1.___w, r1.z, r1.w, l10\n"
"mad_ieee r1.__z_, r1.z_neg(xyzw), r1.w, r1.y\n"
"mul_ieee r1._y__, r1.y, r1.z\n"
"\n"
"dcl_literal l11, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1.__z_, r1.z_neg(xyzw), l11\n"
"div_zeroop(infinity) r1._y__, r1.y, r1.z\n"
"\n"
"dcl_literal l12, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1._y__, r0.w, l12, r1.y_neg(xyzw)\n"
"add r1.x___, r1.x_neg(xyzw), r1.y\n"
"\n"
"dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.x___, r1.x_neg(xyzw), l13\n"
"\n"
"dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r1._y__, r0.w, l14\n"
"if_logicalnz r1.y\n"
"    ftoi r1._y__, r0.w\n"
"    \n"
"    dcl_literal l15, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r2.xyz_, r1.x, l15\n"
"    if_logicalz r2.y\n"
"        itof r1.__z_, r2.z\n"
"        \n"
"        dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"        and r1.__zw, r1.z, l16\n"
"        \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r1.__z_, r1.z, l17\n"
"        iadd r1.__z_, r1.z, r1.y\n"
"        \n"
"        dcl_literal l18, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l18\n"
"        \n"
"        dcl_literal l19, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r1.__z_, l19, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r2.___w, l20, r1.z\n"
"        \n"
"        dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.__z_, r2.w, l21, r1.z\n"
"        \n"
"        dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r2.___w, l22, r1.z\n"
"        ishr r3.x___, r1.w, r1.z\n"
"        inegate r1.__z_, r1.z\n"
"        \n"
"        dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.__z_, r1.z, l23\n"
"        iadd r1.__z_, r1.w, r1.z\n"
"        cmov_logical r1.__z_, r2.w, r3.x, r1.z\n"
"    else\n"
"        \n"
"        dcl_literal l24, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r1.___w, r1.x, l24\n"
"        \n"
"        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2._y__, r2.y, l25\n"
"        iadd r2._y__, r2.y, r1.y\n"
"        \n"
"        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1._y__, r1.y, l26\n"
"        iadd r1._y__, r1.w, r1.y\n"
"        \n"
"        dcl_literal l27, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"        iadd r1.___w, r2.y, l27\n"
"        \n"
"        dcl_literal l28, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2._y__, l28, r1.w\n"
"        \n"
"        dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r1._y__, r2.y, l29, r1.y\n"
"        \n"
"        dcl_literal l30, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r1.___w, l30, r1.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2._y__, r2.z, l31\n"
"        \n"
"        dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000017\n"
"        ilt r2.__zw, l32, r1.w\n"
"        \n"
"        dcl_literal l33, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.___w, r2.w, l33, r1.w\n"
"        ishr r1.___w, r2.y, r1.w\n"
"        cmov_logical r1.__z_, r2.z, r1.w, r1.y\n"
"    endif\n"
"    \n"
"    dcl_literal l34, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"    lt r0.___w, l34, r0.w\n"
"    \n"
"    dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r0.w, l35, r1.z\n"
"    ior r1.x___, r2.x, r0.w\n"
"endif\n"
"\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r0.z, l36\n"
"\n"
"dcl_literal l37, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r0.___w, r0.w, l37, l38\n"
"\n"
"dcl_literal l39, 0xC038AA3B, 0xC038AA3B, 0xC038AA3B, 0xC038AA3B\n"
"mad_ieee r0.___w, r0.y, l39, r0.w\n"
"round_z r0.___w, r0.w\n"
"\n"
"dcl_literal l40, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mul_ieee r1._y__, r0.w, l40\n"
"\n"
"dcl_literal l41, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"mad_ieee r1._y__, r0.y, l41, r1.y_neg(xyzw)\n"
"\n"
"dcl_literal l42, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1.__z_, r0.w_neg(xyzw), l42, r1.y\n"
"mul_ieee r1.___w, r1.z, r1.z\n"
"\n"
"dcl_literal l43, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l44, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r2.x___, r1.w, l43, l44\n"
"\n"
"dcl_literal l45, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r2.x___, r1.w, r2.x, l45\n"
"\n"
"dcl_literal l46, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r2.x___, r1.w, r2.x, l46\n"
"\n"
"dcl_literal l47, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r2.x___, r1.w, r2.x, l47\n"
"mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r1.z\n"
"mul_ieee r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l48, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r1.___w, r1.w_neg(xyzw), l48\n"
"div_zeroop(infinity) r1.__z_, r1.z, r1.w\n"
"\n"
"dcl_literal l49, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r1.__z_, r0.w, l49, r1.z_neg(xyzw)\n"
"add r1._y__, r1.y_neg(xyzw), r1.z\n"
"mov r1.__z_, r1.y_neg(xyzw)\n"
"\n"
"dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ne r1.___w, r0.w, l50\n"
"if_logicalnz r1.w\n"
"    \n"
"    dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1.___w, r1.z, l51\n"
"    ftoi r0.___w, r0.w\n"
"    \n"
"    dcl_literal l52, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r2.xyz_, r1.w, l52\n"
"    if_logicalz r2.y\n"
"        itof r2.___w, r2.z\n"
"        \n"
"        dcl_literal l53, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r3.xy__, r2.w, l53\n"
"        \n"
"        dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.___w, r3.x, l54\n"
"        iadd r2.___w, r2.w, r0.w\n"
"        \n"
"        dcl_literal l55, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r3.x___, r3.y, l55\n"
"        \n"
"        dcl_literal l56, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"        iadd r2.___w, l56, r2.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l57, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ilt r3._y__, l57, r2.w\n"
"        \n"
"        dcl_literal l58, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r2.___w, r3.y, l58, r2.w\n"
"        \n"
"        dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ilt r3._y__, l59, r2.w\n"
"        ishr r3.__z_, r3.x, r2.w\n"
"        inegate r2.___w, r2.w\n"
"        \n"
"        dcl_literal l60, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r2.___w, r2.w, l60\n"
"        iadd r2.___w, r3.x, r2.w\n"
"        cmov_logical r2.___w, r3.y, r3.z, r2.w\n"
"    else\n"
"        \n"
"        dcl_literal l61, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"        and r1.___w, r1.w, l61\n"
"        \n"
"        dcl_literal l62, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2._y__, r2.y, l62\n"
"        iadd r2._y__, r2.y, r0.w\n"
"        \n"
"        dcl_literal l63, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r0.___w, r0.w, l63\n"
"        iadd r0.___w, r1.w, r0.w\n"
"        \n"
"        dcl_literal l64, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"        iadd r1.___w, r2.y, l64\n"
"        \n"
"        dcl_literal l65, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        ilt r2._y__, l65, r1.w\n"
"        \n"
"        dcl_literal l66, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        cmov_logical r0.___w, r2.y, l66, r0.w\n"
"        \n"
"        dcl_literal l67, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"        iadd r1.___w, l67, r1.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l68, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r2._y__, r2.z, l68\n"
"        \n"
"        dcl_literal l69, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"        ilt r3.xy__, l69, r1.w\n"
"        \n"
"        dcl_literal l70, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"        cmov_logical r1.___w, r3.y, l70, r1.w\n"
"        ishr r1.___w, r2.y, r1.w\n"
"        cmov_logical r2.___w, r3.x, r1.w, r0.w\n"
"    endif\n"
"    ior r1._y__, r2.x, r2.w\n"
"    \n"
"    dcl_literal l71, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"    add r1.__z_, r1.y, l71\n"
"else\n"
"    \n"
"    dcl_literal l72, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    add r1._y__, r1.z, l72\n"
"endif\n"
"\n"
"dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.z, l73\n"
"\n"
"dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.___w, r0.w, l74\n"
"\n"
"dcl_literal l75, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r1.___w, r0.z, l75\n"
"and r0.___w, r0.w, r1.w\n"
"cmov_logical r0.__z_, r0.w, r0.z, r1.z\n"
"\n"
"dcl_literal l76, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r0.___w, r0.x, l76\n"
"mul_ieee r0.___w, r0.x, r0.w\n"
"\n"
"dcl_literal l77, 0x00000000, 0x00000000, 0x3F800000, 0x41B00000\n"
"ge r1.__zw, l77, r0.y\n"
"\n"
"dcl_literal l78, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1._y__, r1.y, l78\n"
"div_zeroop(infinity) r0.__z_, r0.z_neg(xyzw), r1.y\n"
"cmov_logical r0.__z_, r1.z, r0.z, r0.w\n"
"\n"
"dcl_literal l79, 0x00000000, 0x3F800000, 0x41B00000, 0x00000000\n"
"lt r1._yz_, l79, r0.y\n"
"and r0.___w, r1.w, r1.y\n"
"\n"
"dcl_literal l80, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.x___, r1.x, l80\n"
"\n"
"dcl_literal l81, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"div_zeroop(infinity) r1.x___, l81, r1.x\n"
"\n"
"dcl_literal l82, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.x___, r1.x_neg(xyzw), l82\n"
"cmov_logical r0.__z_, r0.w, r1.x, r0.z\n"
"\n"
"dcl_literal l83, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r1.z, l83, r0.z\n"
"\n"
"dcl_literal l84, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.y, l84\n"
"cmov_logical r0.__z_, r0.w, r0.z, r0.x\n"
"\n"
"dcl_literal l85, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.y, l85\n"
"\n"
"dcl_literal l86, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.__z_, r0.w, l86, r0.z\n"
"\n"
"dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r0.___w, r0.x, l87\n"
"cmov_logical r0.__z_, r0.w, r0.z_neg(xyzw), r0.z\n"
"\n"
"dcl_literal l88, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ult r0.___w, l88, r0.y\n"
"\n"
"dcl_literal l89, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r1.x___, r0.x, l89\n"
"cmov_logical r0.__z_, r0.w, r1.x, r0.z\n"
"cmov_logical r0.x___, r0.y, r0.z, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__tanpi_f32",
"mdef(454)_out(1)_in(1)\n"
"mov r0, in0\n"
"add r0._y__, r0.x_abs, r0.x_abs\n"
"round_nearest r0._y__, r0.y\n"
"dcl_literal l0, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r0.__z_, r0.x_abs, l0, r0.y_neg(xyzw)\n"
"dcl_literal l1, 0x00000000, 0x3E800000, 0x00000000, 0x3FC90FDB\n"
"mul_ieee r0._y_w, r0.yyyz, l1\n"
"mul_ieee r1.x___, r0.w, r0.w\n"
"mul_ieee r0.___w, r0.w, r1.x\n"
"dcl_literal l2, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3\n"
"dcl_literal l3, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587\n"
"mad_ieee r1._y__, r1.x_neg(xyzw), l2, l3\n"
"mul_ieee r0.___w, r0.w, r1.y\n"
"dcl_literal l4, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480\n"
"dcl_literal l5, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337\n"
"mad_ieee r1._y__, r1.x, l4, l5\n"
"dcl_literal l6, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425\n"
"mad_ieee r1.x___, r1.y, r1.x, l6\n"
"div_zeroop(infinity) r0.___w, r0.w, r1.x\n"
"dcl_literal l7, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"mad_ieee r0.__z_, r0.z, l7, r0.w\n"
"dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r0.___w, l8, r0.z\n"
"frc r0._y__, r0.y\n"
"dcl_literal l9, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"mul_ieee r0._y__, r0.y, l9\n"
"round_nearest r0._y__, r0.y\n"
"dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r1.x___, r0.y, l10\n"
"dcl_literal l11, 0x40400000, 0x40400000, 0x40400000, 0x40400000\n"
"eq r0._y__, r0.y, l11\n"
"frc r1.x___, r1.x\n"
"add r1.x___, r1.x, r1.x\n"
"round_nearest r1.x___, r1.x\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1.x___, l12, r1.x\n"
"cmov_logical r0.__z_, r1.x, r0.w_neg(xyzw), r0.z\n"
"dcl_literal l13, 0x7F800000, 0x7FFFFFFF, 0x7FFFFFFF, 0x00000000\n"
"and r1.xyz_, r0.x, l13\n"
"itof r0.___w, r1.z\n"
"dcl_literal l14, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r0.___w, r0.w, l14\n"
"dcl_literal l15, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r2.xy__, r0.w, l15\n"
"dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r0.___w, r2.x, l16\n"
"dcl_literal l17, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r1.___w, r2.y, l17\n"
"dcl_literal l18, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r0.___w, l18, r0.w_neg(xyzw)\n"
"inegate r2.x___, r0.w\n"
"dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.x___, r2.x, l19\n"
"iadd r2.x___, r1.w, r2.x\n"
"ishr r1.___w, r1.w, r0.w\n"
"dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l20, r0.w\n"
"cmov_logical r0.___w, r0.w, r1.w, r2.x\n"
"dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r2.xy__, r1.zxzz, l21\n"
"dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x7F800000\n"
"ieq r1.xy_w, r1.xyxz, l22\n"
"and r1.x___, r2.x, r1.x\n"
"cmov_logical r0.__z_, r1.x, r0.w, r0.z\n"
"dcl_literal l23, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ilt r0.___w, r1.z, l23\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, l24, r1.z\n"
"and r0.___w, r2.y, r0.w\n"
"dcl_literal l25, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r1.__z_, r0.x_abs, l25\n"
"cmov_logical r0.__z_, r0.w, r1.z, r0.z\n"
"frc r0.___w, r0.x_abs\n"
"add r1.__z_, r0.x_abs, r0.w_neg(xyzw)\n"
"dcl_literal l26, 0x00000000, 0x3F000000, 0x00000000, 0x00000000\n"
"eq r2.xy__, r0.w, l26\n"
"dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.x___, r0.x, l27\n"
"dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ge r0.___w, r1.z, l28\n"
"and r0.___w, r2.x, r0.w\n"
"ior r0.___w, r1.y, r0.w\n"
"dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r0.w, l29, r0.z\n"
"dcl_literal l30, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000\n"
"dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r0._y__, r0.y, l30, l31\n"
"cmov_logical r0._y__, r2.y, r0.y, r0.z\n"
"cmov_logical r0.x___, r0.x, r0.y_neg(xyzw), r0.y\n"
"dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0.x___, r1.w, l32, r0.x\n"
"dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"cmov_logical r0.x___, r1.x, l33, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__tan_f32",
"mdef(455)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0._y__, r0.x_abs\n"
"\n"
"dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000\n"
"ige r0.___w, r0.z, l1\n"
"\n"
"dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r1.x___, r0.z, l2\n"
"and r0.___w, r0.w, r1.x\n"
"if_logicalnz r0.w\n"
"    \n"
"    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680\n"
"    lt r0.___w, r0.y, l3\n"
"    if_logicalnz r0.w\n"
"        \n"
"        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983\n"
"        mul_ieee r0.___w, r0.y, l4\n"
"        round_nearest r0.___w, r0.w\n"
"        \n"
"        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"        and r1.x___, r0.w, l5\n"
"        add r1._y__, r0.w, r1.x_neg(xyzw)\n"
"        \n"
"        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"        mul_ieee r1.__z_, r0.w, l6\n"
"        \n"
"        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000\n"
"        mul_ieee r2.xyz_, r0.w, l7\n"
"        \n"
"        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)\n"
"        \n"
"        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.x, l9, r3.xyxx\n"
"        \n"
"        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.y, l10, r3.xyxx\n"
"        \n"
"        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000\n"
"        mad_ieee r3.xy__, r1.y, l11, r3.xyxx\n"
"        add r0.___w, r0.y, r2.x_neg(xyzw)\n"
"        add r1.___w, r0.y, r0.w_neg(xyzw)\n"
"        add r1.___w, r2.x_neg(xyzw), r1.w\n"
"        add r1.___w, r3.x_neg(xyzw), r1.w\n"
"        add r0.___w, r0.w, r1.w\n"
"        add r1.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r1.w_neg(xyzw)\n"
"        add r0.___w, r2.y_neg(xyzw), r0.w\n"
"        add r0.___w, r3.y_neg(xyzw), r0.w\n"
"        add r0.___w, r1.w, r0.w\n"
"        \n"
"        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.___w, r1.x, l12, r2.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1.x___, r1.x, l13, r1.w\n"
"        \n"
"        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000\n"
"        mad_ieee r1.x___, r1.y, l14, r1.x\n"
"        \n"
"        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000\n"
"        mad_ieee r1.x___, r1.y, l15, r1.x\n"
"        add r1._y__, r2.z_neg(xyzw), r0.w\n"
"        add r0.___w, r0.w, r1.y_neg(xyzw)\n"
"        add r0.___w, r2.z_neg(xyzw), r0.w\n"
"        add r0.___w, r1.y, r0.w\n"
"        frc r1._y__, r1.z\n"
"        \n"
"        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"        mul_ieee r1._y__, r1.y, l16\n"
"        round_nearest r1._y__, r1.y\n"
"        mov r1.x___, r1.x_neg(xyzw)\n"
"    else\n"
"        \n"
"        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r1.__z_, r0.y, l17\n"
"        \n"
"        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"        and r1.___w, r0.y, l18\n"
"        \n"
"        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"        ior r1.___w, r1.w, l19\n"
"        \n"
"        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r1.w, l20\n"
"        \n"
"        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r1.___w, r1.w, l21\n"
"        \n"
"        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r3, l22, r1.w\n"
"        \n"
"        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041\n"
"        umul r4, l23, r2.x\n"
"        \n"
"        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2._yz_, r4.yywy, l24\n"
"        \n"
"        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r5.xy__, r3.ywyy, l25\n"
"        iadd r2._yz_, r2.yyzy, r5.xxyx\n"
"        iadd r2._yz_, r4.xxzx, r2.yyzy\n"
"        \n"
"        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r4.x_z_, r2.yyzy, l26\n"
"        iadd r3.x_z_, r3.xxzx, r4.xxzx\n"
"        \n"
"        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l27\n"
"        \n"
"        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2._yz_, r2.yyzy, l28\n"
"        \n"
"        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r4.xy__, r4.ywyy, l29\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        ior r4.xy__, r2.yzyy, r4.xyxx\n"
"        iadd r5.__z_, r3.x, r4.y\n"
"        ult r2._y__, r5.z, r4.y\n"
"        \n"
"        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r3.y, l30\n"
"        cmov_logical r2._y__, r2.y, r2.z, r3.y\n"
"        \n"
"        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r3, l31, r1.w\n"
"        \n"
"        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0\n"
"        umul r6, l32, r2.x\n"
"        \n"
"        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l33\n"
"        \n"
"        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l34\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"        \n"
"        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l35\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"        \n"
"        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l36\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        \n"
"        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l37\n"
"        \n"
"        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l38\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r5._y__, r2.y, r2.z\n"
"        ult r2._y__, r5.y, r2.z\n"
"        \n"
"        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001\n"
"        iadd r3.__zw, r3.xxxy, l39\n"
"        cmov_logical r2._y__, r2.y, r3.z, r3.x\n"
"        iadd r5.x___, r2.y, r2.w\n"
"        ult r2._y__, r5.x, r2.w\n"
"        cmov_logical r2._y__, r2.y, r3.w, r3.y\n"
"        \n"
"        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r3, l40, r1.w\n"
"        \n"
"        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529\n"
"        umul r6, l41, r2.x\n"
"        \n"
"        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__zw, r6.yyyw, l42\n"
"        \n"
"        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"        and r7.xy__, r3.ywyy, l43\n"
"        iadd r2.__zw, r2.zzzw, r7.xxxy\n"
"        iadd r2.__zw, r6.xxxz, r2.zzzw\n"
"        \n"
"        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6.x_z_, r2.zzwz, l44\n"
"        iadd r3.x_z_, r3.xxzx, r6.xxzx\n"
"        \n"
"        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r3._y_w, r3.yyyw, l45\n"
"        iadd r3.xy__, r3.xzxx, r3.ywyy\n"
"        \n"
"        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r2.__zw, r2.zzzw, l46\n"
"        \n"
"        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF\n"
"        and r3.__zw, r6.yyyw, l47\n"
"        ior r2.__zw, r2.zzzw, r3.zzzw\n"
"        iadd r3.___w, r2.y, r2.z\n"
"        ult r2._y__, r3.w, r2.z\n"
"        \n"
"        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000\n"
"        iadd r6.xy__, r3.xyxx, l48\n"
"        cmov_logical r2._y__, r2.y, r6.x, r3.x\n"
"        iadd r3.__z_, r2.y, r2.w\n"
"        ult r2._y__, r3.z, r2.w\n"
"        cmov_logical r2._y__, r2.y, r6.y, r3.y\n"
"        \n"
"        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E\n"
"        umul r2.__zw, l49, r1.w\n"
"        \n"
"        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000\n"
"        umul r3.xy__, l50, r2.x\n"
"        \n"
"        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r1.___w, r3.y, l51\n"
"        \n"
"        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.x___, r2.w, l52\n"
"        iadd r1.___w, r1.w, r2.x\n"
"        iadd r1.___w, r3.x, r1.w\n"
"        \n"
"        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.x___, r1.w, l53\n"
"        iadd r2.x___, r2.z, r2.x\n"
"        \n"
"        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r2.__z_, r2.w, l54\n"
"        iadd r2.x___, r2.x, r2.z\n"
"        \n"
"        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ishl r1.___w, r1.w, l55\n"
"        \n"
"        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r2.__z_, r3.y, l56\n"
"        ior r1.___w, r1.w, r2.z\n"
"        iadd r2._y__, r2.y, r1.w\n"
"        ult r1.___w, r2.y, r1.w\n"
"        \n"
"        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r2.x, l57\n"
"        cmov_logical r1.___w, r1.w, r2.z, r2.x\n"
"        \n"
"        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000\n"
"        iadd r2.x_z_, r1.z, l58\n"
"        \n"
"        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r6.x___, r2.x, l59\n"
"        \n"
"        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r1.__z_, r6.x, l60\n"
"        iadd r1.__z_, r2.x, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l61, r6.x\n"
"        \n"
"        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r7, r2.x, l62\n"
"        inegate r2.___w, r7.x\n"
"        \n"
"        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r8.x___, r7.y, l63\n"
"        \n"
"        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r8._y__, r7.z, l64\n"
"        \n"
"        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r8.__z_, r7.w, l65\n"
"        inegate r7.xyz_, r8.xyzx\n"
"        \n"
"        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r8, r2.x, l66\n"
"        \n"
"        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r9.x___, r8.x, l67\n"
"        \n"
"        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r9._yzw, r8.yyzw, l68\n"
"        inegate r8, r9\n"
"        and r2.x___, r1.w, r2.w\n"
"        and r3.xy__, r2.y, r7.xyxx\n"
"        ior r2.x___, r2.x, r3.x\n"
"        and r7._yzw, r3.zzzw, r7.yyzz\n"
"        ior r2.x___, r2.x, r7.y\n"
"        ior r2.x___, r7.w, r2.x\n"
"        and r9, r5.xxyy, r8.xyyz\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.z, r2.x\n"
"        and r7._y_w, r5.z, r8.zzzw\n"
"        ior r2.x___, r2.x, r7.y\n"
"        and r2.___w, r4.x, r8.w\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r2.___w, r1.w, r7.x\n"
"        ior r2.___w, r3.y, r2.w\n"
"        ior r2.___w, r7.z, r2.w\n"
"        and r3.x___, r3.w, r8.x\n"
"        ior r2.___w, r2.w, r3.x\n"
"        ior r2.___w, r9.y, r2.w\n"
"        ior r2.___w, r9.w, r2.w\n"
"        ior r2.___w, r7.w, r2.w\n"
"        \n"
"        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r3.x___, l69, r1.z\n"
"        and r3.x___, r2.x, r3.x\n"
"        inegate r3._y__, r1.z\n"
"        \n"
"        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"        iadd r6._y__, l70, r3.y\n"
"        \n"
"        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        ult r4._y__, l71, r1.z\n"
"        \n"
"        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.__z_, r1.z, l72\n"
"        \n"
"        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ushr r1.__z_, l73, r1.z\n"
"        and r1.__z_, r2.x, r1.z\n"
"        ior r1.__z_, r3.x, r1.z\n"
"        ushr r1.__z_, r1.z, r6.y\n"
"        ushr r2.x___, r3.x, r6.y\n"
"        \n"
"        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        and r2.___w, r2.w, l74\n"
"        \n"
"        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.___w, r2.w, l75\n"
"        ior r2.x___, r2.x, r2.w\n"
"        cmov_logical r7.__z_, r4.y, r1.z, r2.x\n"
"        \n"
"        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r8.x___, r6.x, l76\n"
"        \n"
"        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"        ishl r6.__z_, l77, r3.y\n"
"        \n"
"        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6.___w, r6.z, l78\n"
"        \n"
"        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF\n"
"        mov r8._yzw, l79\n"
"        cmov_logical r6, r6.y, r6, r8\n"
"        \n"
"        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r1.__z_, r6.y, l80\n"
"        \n"
"        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r1.__z_, l81, r1.z\n"
"        \n"
"        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r2.x___, r1.z, l82\n"
"        switch r6.x\n"
"        case  0\n"
"        and r3.x___, r1.w, r1.z\n"
"        \n"
"        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"        \n"
"        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l83, l84\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"            \n"
"            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l85\n"
"            \n"
"            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l86\n"
"            \n"
"            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.zzwz_neg(xyzw), l87\n"
"            \n"
"            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r11.x___, r2.y_neg(xyzw), l88\n"
"            and r3._y__, r1.w, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.x___, r2.y\n"
"            mov r11._yz_, r3.zzwz\n"
"            mov r3._y__, r1.w\n"
"        endif\n"
"        and r8.x___, r2.x, r3.y\n"
"        mov r8._yzw, r11.xxyz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  1\n"
"        and r3.x___, r2.y, r1.z\n"
"        \n"
"        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"        \n"
"        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.xy__, r3.x, l89, l90\n"
"        if_logicalnz r3.y\n"
"            inegate r10.___w, r4.x\n"
"            \n"
"            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"            iadd r10._y__, r5.y_neg(xyzw), l91\n"
"            \n"
"            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"            iadd r6.xy__, r5.zxzz_neg(xyzw), l92\n"
"            \n"
"            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"            iadd r11._yz_, r3.wwzw_neg(xyzw), l93\n"
"            and r3._y__, r2.y, r6.w\n"
"            iadd r3._y__, r6.w, r3.y_neg(xyzw)\n"
"            mov r10.x___, r6.y\n"
"            mov r10.__z_, r6.x\n"
"            mov r11.xy__, r11.zyzz\n"
"        else\n"
"            mov r10.xyz_, r5.xyzx\n"
"            mov r10.___w, r4.x\n"
"            mov r11.xy__, r3.zwzz\n"
"            mov r3._y__, r2.y\n"
"        endif\n"
"        and r11.__z_, r2.x, r3.y\n"
"        \n"
"        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l94\n"
"        mov r8, r11.wzxy\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        case  2\n"
"        and r3.x___, r3.z, r1.z\n"
"        \n"
"        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l95, l96\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97\n"
"        \n"
"        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r6._y__, r3.w_neg(xyzw), l98\n"
"        and r4._y__, r3.z, r6.w\n"
"        iadd r6.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r5.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r5\n"
"        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz\n"
"        and r11.x___, r2.x, r11.y\n"
"        \n"
"        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.___w, l99\n"
"        mov r8, r11.wwxz\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  3\n"
"        and r3.x___, r3.w, r1.z\n"
"        \n"
"        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l100, l101\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102\n"
"        and r4._y__, r3.w, r6.w\n"
"        iadd r4._y__, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        cmov_logical r3.x___, r3.x, r4.y, r3.w\n"
"        and r11.___w, r2.x, r3.x\n"
"        \n"
"        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r11.xyz_, l103\n"
"        mov r8, r11\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  4\n"
"        and r3.x___, r5.x, r1.z\n"
"        \n"
"        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l104, l105\n"
"        inegate r10.___w, r4.x\n"
"        \n"
"        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000\n"
"        iadd r10._yz_, r5.yyzy_neg(xyzw), l106\n"
"        and r4._y__, r5.x, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r11.xyz_, r5.xyzx\n"
"        mov r11.___w, r4.x\n"
"        cmov_logical r10, r3.x, r10, r11\n"
"        and r3.x___, r2.x, r10.x\n"
"        \n"
"        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l107\n"
"        mov r9._yzw, r10.yyzw\n"
"        mov r9.x___, r3.x\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  5\n"
"        and r3.x___, r5.y, r1.z\n"
"        \n"
"        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l108, l109\n"
"        inegate r10.__z_, r4.x\n"
"        \n"
"        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        iadd r10._y__, r5.z_neg(xyzw), l110\n"
"        and r4._y__, r5.y, r6.w\n"
"        iadd r10.x___, r6.w, r4.y_neg(xyzw)\n"
"        mov r4.__zw, r5.yyyz\n"
"        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx\n"
"        and r10._y__, r2.x, r10.x\n"
"        \n"
"        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.x___, l111\n"
"        \n"
"        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l112\n"
"        mov r9, r10\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  6\n"
"        and r3.x___, r5.z, r1.z\n"
"        \n"
"        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3._y__, r3.x, l113, l114\n"
"        inegate r4.__z_, r4.x\n"
"        and r4.___w, r5.z, r6.w\n"
"        iadd r4._y__, r6.w, r4.w_neg(xyzw)\n"
"        mov r6.x___, r5.z\n"
"        mov r6._y__, r4.x\n"
"        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx\n"
"        and r10.x___, r2.x, r10.y\n"
"        \n"
"        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r10.___w, l115\n"
"        \n"
"        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l116\n"
"        mov r9, r10.wwxz\n"
"        mov r2.___w, r3.y\n"
"        break\n"
"        case  7\n"
"        and r1.__z_, r4.x, r1.z\n"
"        \n"
"        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        \n"
"        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r3.x___, r1.z, l117, l118\n"
"        and r3._y__, r4.x, r6.w\n"
"        iadd r3._y__, r6.z, r3.y_neg(xyzw)\n"
"        cmov_logical r1.__z_, r1.z, r3.y, r4.x\n"
"        and r6.___w, r2.x, r1.z\n"
"        \n"
"        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r6.xyz_, l119\n"
"        \n"
"        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r8, l120\n"
"        mov r9, r6\n"
"        mov r2.___w, r3.x\n"
"        break\n"
"        default\n"
"        mov r8.__zw, r3.zzzw\n"
"        mov r8._y__, r2.y\n"
"        mov r8.x___, r1.w\n"
"        mov r9.___w, r4.x\n"
"        mov r9.xyz_, r5.xyzx\n"
"        \n"
"        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        mov r2.___w, l121\n"
"        break\n"
"        endswitch\n"
"        mov r3, r8\n"
"        mov r4, r9\n"
"        mov r1.__z_, r2.w\n"
"        \n"
"        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r5, r3, l122\n"
"        \n"
"        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r5, r5, l123\n"
"        \n"
"        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r6, r5, l124\n"
"        \n"
"        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r6, r6, l125\n"
"        \n"
"        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l126\n"
"        \n"
"        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r6, l127, r6_neg(xyzw)\n"
"        \n"
"        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r6, r6, l128\n"
"        \n"
"        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r6, r6, l129\n"
"        \n"
"        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r6, r6, l130\n"
"        \n"
"        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r5, r5, r6, l131\n"
"        \n"
"        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r3, l132\n"
"        \n"
"        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l133\n"
"        \n"
"        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l134\n"
"        \n"
"        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l135\n"
"        \n"
"        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l136, r8_neg(xyzw)\n"
"        \n"
"        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l137\n"
"        \n"
"        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l138\n"
"        \n"
"        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l139\n"
"        \n"
"        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l140\n"
"        \n"
"        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r8, r5, l141\n"
"        iadd r6, r5, r6\n"
"        cmov_logical r5, r8, r6, r5\n"
"        \n"
"        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ushr r6, r4, l142\n"
"        \n"
"        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r6, r6, l143\n"
"        \n"
"        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r8, r6, l144\n"
"        \n"
"        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r8, r8, l145\n"
"        \n"
"        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l146\n"
"        \n"
"        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r8, l147, r8_neg(xyzw)\n"
"        \n"
"        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r8, r8, l148\n"
"        \n"
"        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r8, r8, l149\n"
"        \n"
"        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r8, r8, l150\n"
"        \n"
"        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r6, r6, r8, l151\n"
"        \n"
"        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"        and r8, r4, l152\n"
"        \n"
"        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r9, r8, l153\n"
"        \n"
"        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r9, r9, l154\n"
"        \n"
"        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l155\n"
"        \n"
"        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r9, l156, r9_neg(xyzw)\n"
"        \n"
"        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r9, r9, l157\n"
"        \n"
"        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ushr r9, r9, l158\n"
"        \n"
"        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"        iadd r9, r9, l159\n"
"        \n"
"        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        cmov_logical r8, r8, r9, l160\n"
"        \n"
"        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"        ieq r9, r6, l161\n"
"        iadd r8, r6, r8\n"
"        cmov_logical r6, r9, r8, r6\n"
"        \n"
"        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"        ieq r1.___w, r5.x, l162\n"
"        \n"
"        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060\n"
"        iadd r2.xy_w, r5.yzyw, l163\n"
"        cmov_logical r1.___w, r1.w, r2.x, r5.x\n"
"        \n"
"        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"        ieq r2.x___, r1.w, l164\n"
"        cmov_logical r1.___w, r2.x, r2.y, r1.w\n"
"        \n"
"        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060\n"
"        ieq r2.x___, r1.w, l165\n"
"        cmov_logical r1.___w, r2.x, r2.w, r1.w\n"
"        \n"
"        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"        ieq r2.x___, r1.w, l166\n"
"        \n"
"        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0\n"
"        iadd r5, r6, l167\n"
"        cmov_logical r1.___w, r2.x, r5.x, r1.w\n"
"        \n"
"        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0\n"
"        ieq r2.x___, r1.w, l168\n"
"        cmov_logical r1.___w, r2.x, r5.y, r1.w\n"
"        \n"
"        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0\n"
"        ieq r2.x___, r1.w, l169\n"
"        cmov_logical r1.___w, r2.x, r5.z, r1.w\n"
"        \n"
"        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0\n"
"        ieq r2.x___, r1.w, l170\n"
"        cmov_logical r1.___w, r2.x, r5.w, r1.w\n"
"        \n"
"        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishr r2.x___, r1.w, l171\n"
"        \n"
"        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ishl r2._y__, r2.x, l172\n"
"        iadd r2._y__, r1.w, r2.y_neg(xyzw)\n"
"        iadd r1.___w, r2.z, r1.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ishl r2.x___, l173, r2.x\n"
"        \n"
"        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008\n"
"        and r5, r2.x, l174\n"
"        inegate r2.__z_, r5.x\n"
"        \n"
"        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        ushr r6.x__w, r5.y, l175\n"
"        \n"
"        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"        ushr r6._y__, r5.z, l176\n"
"        \n"
"        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003\n"
"        ushr r6.__z_, r5.w, l177\n"
"        inegate r5, r6\n"
"        \n"
"        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080\n"
"        and r6, r2.x, l178\n"
"        \n"
"        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004\n"
"        ushr r8.x___, r6.x, l179\n"
"        \n"
"        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005\n"
"        ushr r8._y__, r6.y, l180\n"
"        \n"
"        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006\n"
"        ushr r8.__z_, r6.z, l181\n"
"        \n"
"        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007\n"
"        ushr r8.___w, r6.w, l182\n"
"        inegate r6, r8\n"
"        and r2.x__w, r3.xxxy, r2.z\n"
"        and r8, r3.yzwz, r5\n"
"        ior r2.x__w, r2.xxxw, r8.xxxw\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        and r8, r4, r6\n"
"        ior r2.x___, r2.x, r8.x\n"
"        ior r2.x___, r8.y, r2.x\n"
"        ior r2.x___, r8.z, r2.x\n"
"        ior r8._y_w, r8.w, r2.x\n"
"        and r2.x___, r3.w, r5.y\n"
"        ior r2.x___, r2.w, r2.x\n"
"        and r2.___w, r4.x, r5.z\n"
"        ior r2.x___, r2.x, r2.w\n"
"        and r9.xyz_, r4.yzwy, r6.xyzx\n"
"        ior r2.x___, r2.x, r9.x\n"
"        ior r2.x___, r9.y, r2.x\n"
"        ior r8.x___, r9.z, r2.x\n"
"        \n"
"        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r2.y, l183\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r8.y, r2.y\n"
"            ushr r2.x___, r2.x, r2.y\n"
"            \n"
"            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2.___w, l184, r2.y_neg(xyzw)\n"
"            ushr r8.___w, r2.x, r2.w\n"
"            \n"
"            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"            iadd r3._y__, r2.y, l185\n"
"            ishl r2.x___, r2.x, r3.y\n"
"            ushr r3.x___, r2.x, r3.y\n"
"        else\n"
"            and r2.x___, r3.z, r2.z\n"
"            and r2.__z_, r3.w, r5.w\n"
"            ior r2.x___, r2.x, r2.z\n"
"            and r2.__zw, r4.xxxy, r5.yyyz\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r2.x___, r2.w, r2.x\n"
"            and r2.__zw, r4.zzzw, r6.xxxy\n"
"            ior r2.x___, r2.x, r2.z\n"
"            ior r4._y__, r2.w, r2.x\n"
"            \n"
"            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.x___, l186, r2.y\n"
"            \n"
"            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000\n"
"            iadd r4.x_z_, r2.y, l187\n"
"            ishl r2.__z_, r8.y, r4.x\n"
"            ishl r2.___w, r8.x, r4.z\n"
"            \n"
"            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r2._y__, l188, r2.y_neg(xyzw)\n"
"            ushr r2._y__, r8.x, r2.y\n"
"            ior r4.___w, r2.z, r2.y\n"
"            ushr r4.x___, r2.w, r4.z\n"
"            \n"
"            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"            mov r8.__z_, l189\n"
"            cmov_logical r8, r2.x, r4.yxzw, r8\n"
"            mov r3.xy__, r8.yzyy\n"
"        endif\n"
"        \n"
"        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r2.xy__, r8.w, l190\n"
"        \n"
"        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.___w, r8.w, l191\n"
"        \n"
"        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.___w, r2.w, l192\n"
"        \n"
"        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l193\n"
"        \n"
"        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.___w, l194, r2.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.___w, r2.w, l195\n"
"        \n"
"        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.___w, r2.w, l196\n"
"        inegate r8._y__, r2.w\n"
"        \n"
"        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r2.__z_, l197\n"
"        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww\n"
"        iadd r2._y__, r1.w, r2.y\n"
"        \n"
"        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r2._y__, r2.y, l198\n"
"        \n"
"        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r2._y__, r2.y, l199\n"
"        ior r7.x___, r2.x, r2.y\n"
"        \n"
"        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"        ult r2.x___, r3.y, l200\n"
"        if_logicalnz r2.x\n"
"            ishl r2.x___, r3.x, r3.y\n"
"            ushr r2.x___, r2.x, r3.y\n"
"            \n"
"            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            iadd r2._y__, l201, r3.y_neg(xyzw)\n"
"            ushr r2.x___, r2.x, r2.y\n"
"        else\n"
"            \n"
"            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"            ult r2.__z_, l202, r3.y\n"
"            \n"
"            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"            iadd r2.___w, r3.y, l203\n"
"            ishl r2.___w, r3.x, r2.w\n"
"            \n"
"            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028\n"
"            iadd r3._y__, l204, r3.y_neg(xyzw)\n"
"            ushr r3._y__, r8.x, r3.y\n"
"            ior r2.___w, r2.w, r3.y\n"
"            cmov_logical r2.x___, r2.z, r2.w, r3.x\n"
"        endif\n"
"        \n"
"        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8\n"
"        iadd r1.___w, r1.w, l205\n"
"        \n"
"        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"        and r3.xy__, r2.x, l206\n"
"        \n"
"        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        ior r2.__z_, r2.x, l207\n"
"        \n"
"        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"        add r2.__z_, r2.z, l208\n"
"        \n"
"        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l209\n"
"        \n"
"        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"        iadd r2.__z_, l210, r2.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"        and r2.__z_, r2.z, l211\n"
"        \n"
"        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishr r2.__z_, r2.z, l212\n"
"        inegate r2._y__, r2.z\n"
"        \n"
"        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"        mov r3.__z_, l213\n"
"        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx\n"
"        iadd r1.___w, r1.w, r2.z\n"
"        \n"
"        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"        iadd r1.___w, r1.w, l214\n"
"        \n"
"        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"        ishl r1.___w, r1.w, l215\n"
"        ior r1.___w, r2.y, r1.w\n"
"        \n"
"        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"        cmov_logical r7._y__, r2.x, r1.w, l216\n"
"        \n"
"        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"        iadd r2.__z_, r7.z, l217\n"
"        mov r2.xy__, r7.xyxx_neg(xyzw)\n"
"        cmov_logical r2.xyz_, r1.z, r2.xyzx, r7.xyzx\n"
"        \n"
"        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003\n"
"        and r1.__zw, r2.xxxz, l218\n"
"        add r2.__z_, r2.x, r1.z_neg(xyzw)\n"
"        \n"
"        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mul_ieee r0.___w, r2.x, l219\n"
"        \n"
"        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r2.x___, r1.z, l220, r0.w_neg(xyzw)\n"
"        \n"
"        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.__z_, r1.z, l221, r2.x\n"
"        \n"
"        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000\n"
"        mad_ieee r1.__z_, r2.z, l222, r1.z\n"
"        \n"
"        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22\n"
"        mad_ieee r1.__z_, r2.z, l223, r1.z\n"
"        utof r1._y__, r1.w\n"
"        \n"
"        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"        mad_ieee r1.x___, r2.y, l224, r1.z\n"
"    endif\n"
"    \n"
"    dcl_literal l225, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"    mul_ieee r1._y__, r1.y, l225\n"
"    frc r1._y__, r1.y\n"
"    add r1._y__, r1.y, r1.y\n"
"    round_nearest r1._y__, r1.y\n"
"    add r0.___w, r0.w, r1.x\n"
"    mul_ieee r1.x___, r0.w, r0.w\n"
"    mul_ieee r1.__z_, r0.w, r1.x\n"
"    \n"
"    dcl_literal l226, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3\n"
"    \n"
"    dcl_literal l227, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587\n"
"    mad_ieee r1.___w, r1.x_neg(xyzw), l226, l227\n"
"    mul_ieee r1.__z_, r1.z, r1.w\n"
"    \n"
"    dcl_literal l228, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480\n"
"    \n"
"    dcl_literal l229, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337\n"
"    mad_ieee r1.___w, r1.x, l228, l229\n"
"    \n"
"    dcl_literal l230, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425\n"
"    mad_ieee r1.x___, r1.w, r1.x, l230\n"
"    div_zeroop(infinity) r1.x___, r1.z, r1.x\n"
"    add r0.___w, r0.w, r1.x\n"
"    \n"
"    dcl_literal l231, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"    div_zeroop(infinity) r1.x___, l231, r0.w\n"
"    \n"
"    dcl_literal l232, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    lt r1._y__, l232, r1.y\n"
"    cmov_logical r0._y__, r1.y, r1.x_neg(xyzw), r0.w\n"
"endif\n"
"\n"
"dcl_literal l233, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, r0.x, l233\n"
"cmov_logical r0._y__, r0.w, r0.y_neg(xyzw), r0.y\n"
"\n"
"dcl_literal l234, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ieq r0.___w, r0.z, l234\n"
"\n"
"dcl_literal l235, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.w, l235, r0.y\n"
"\n"
"dcl_literal l236, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0.__z_, l236, r0.z\n"
"\n"
"dcl_literal l237, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.x___, r0.x, l237\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__tgamma_f32",
"mdef(456)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x7F800000\n"
"and r0._yzw, r0.x, l0\n"
"frc r1.x___, r0.y\n"
"\n"
"dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r1._y__, r0.x, l1\n"
"\n"
"dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"lt r1.__z_, l2, r0.x\n"
"and r1.__z_, r1.y, r1.z\n"
"\n"
"dcl_literal l3, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.___w, r0.x, l3\n"
"cmov_logical r1.__z_, r1.z, r1.w, r0.x\n"
"\n"
"dcl_literal l4, 0x7FFFFFFF, 0x007FFFFF, 0x00000000, 0x00000000\n"
"and r2.xy__, r1.z, l4\n"
"\n"
"dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.___w, r2.x, l5\n"
"\n"
"dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r1.___w, r1.w, l6\n"
"\n"
"dcl_literal l7, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r2.__z_, l7, r2.y\n"
"\n"
"dcl_literal l8, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r2.__z_, r2.z, l8\n"
"\n"
"dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r2.___w, r2.z, l9\n"
"ior r2._y__, r2.y, r2.w\n"
"\n"
"dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.z, l10\n"
"iadd r1.___w, r1.w, r2.z\n"
"itof r1.___w, r1.w\n"
"\n"
"dcl_literal l11, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000\n"
"add r2._yz_, r2.y, l11\n"
"div_zeroop(infinity) r2.__z_, r2.y, r2.z\n"
"mul_ieee r2.___w, r2.z, r2.z\n"
"mul_ieee r3.x___, r2.w, r2.w\n"
"\n"
"dcl_literal l12, 0x00000000, 0x3E1CD04F, 0x3E178897, 0x00000000\n"
"\n"
"dcl_literal l13, 0x00000000, 0x3E638E29, 0x3E3A3325, 0x00000000\n"
"mad_ieee r3._yz_, r3.x, l12, l13\n"
"\n"
"dcl_literal l14, 0x00000000, 0x3ECCCCCD, 0x3E924925, 0x00000000\n"
"mad_ieee r3._yz_, r3.x, r3.yyzy, l14\n"
"mul_ieee r3._y__, r3.x, r3.y\n"
"\n"
"dcl_literal l15, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r3.x___, r3.x, r3.z, l15\n"
"mad_ieee r2.___w, r2.w, r3.x, r3.y\n"
"mul_ieee r3.x___, r2.y, r2.y\n"
"\n"
"dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.___w, r3.x, l16, r2.w\n"
"\n"
"dcl_literal l17, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r3._y__, r1.w, l17\n"
"mad_ieee r2.__z_, r2.z, r2.w, r3.y\n"
"\n"
"dcl_literal l18, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.__z_, r3.x, l18, r2.z_neg(xyzw)\n"
"add r2._y__, r2.y_neg(xyzw), r2.z\n"
"\n"
"dcl_literal l19, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r1.___w, r1.w, l19, r2.y_neg(xyzw)\n"
"\n"
"dcl_literal l20, 0x00000000, 0x3F666666, 0x41C80000, 0x00000000\n"
"ge r2._yz_, l20, r2.x\n"
"mov r2.___w, r1.w_neg(xyzw)\n"
"and r2.___w, r2.y, r2.w\n"
"\n"
"dcl_literal l21, 0x3F3B4A23, 0x3E6B851F, 0x00000000, 0x3F9D70A4\n"
"ge r3, r2.x, l21\n"
"and r2._y__, r2.y, r3.x\n"
"\n"
"dcl_literal l22, 0x3F800000, 0x40000000, 0x00000000, 0x00000000\n"
"add r4.xy__, r2.x_neg(xyzw), l22\n"
"and r2._y__, r2.y, r4.x\n"
"\n"
"dcl_literal l23, 0x3F3B4A23, 0x3E6B851F, 0x3F9D70A4, 0x3FDDA512\n"
"lt r5, r2.x, l23\n"
"and r3.xyz_, r3.yzwy, r5.xywx\n"
"\n"
"dcl_literal l24, 0xBEEC5B0C, 0xBF800000, 0xBFBB16C3, 0xC1C80000\n"
"add r6, r2.x, l24\n"
"cmov_logical r2._y__, r3.x, r6.x, r2.y\n"
"\n"
"dcl_literal l25, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r3.x___, r3.x, l25\n"
"cmov_logical r2._y__, r3.y, r2.x, r2.y\n"
"\n"
"dcl_literal l26, 0x3F666666, 0x00000000, 0x42040000, 0x00000000\n"
"lt r4.x_z_, l26, r2.x\n"
"and r3.___w, r5.z, r4.x\n"
"cmov_logical r2._y__, r3.w, r6.y, r2.y\n"
"ior r3._y__, r3.y, r3.w\n"
"\n"
"dcl_literal l27, 0x00000002, 0x00000002, 0x00000002, 0x00000002\n"
"cmov_logical r3.x___, r3.y, l27, r3.x\n"
"cmov_logical r2._y__, r3.z, r6.z, r2.y\n"
"\n"
"dcl_literal l28, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r3.x___, r3.z, l28, r3.x\n"
"\n"
"dcl_literal l29, 0x3FDDA512, 0x40000000, 0x42240000, 0x42200000\n"
"ge r5, r2.x, l29\n"
"\n"
"dcl_literal l30, 0x00000000, 0x40000000, 0x41000000, 0x00000000\n"
"lt r3._yz_, r2.x, l30\n"
"and r3.__zw, r5.xxxy, r3.yyyz\n"
"cmov_logical r2._y__, r3.z, r4.y, r2.y\n"
"\n"
"dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r3.z, l31, r3.x\n"
"mul_ieee r3.__z_, r2.y, r2.y\n"
"\n"
"dcl_literal l32, 0x37D383A2, 0x383C2C75, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l33, 0x39679767, 0x38E28445, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, l32, l33\n"
"\n"
"dcl_literal l34, 0x3A9C54A1, 0x3A05B634, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, r4.xyxx, l34\n"
"\n"
"dcl_literal l35, 0x3BF2027E, 0x3B3D6EC6, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, r4.xyxx, l35\n"
"\n"
"dcl_literal l36, 0x3D89F001, 0x3CA89915, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, r4.xyxx, l36\n"
"\n"
"dcl_literal l37, 0x3D9E233F, 0x3EA51A66, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, r4.xyxx, l37\n"
"mul_ieee r4._y__, r3.z, r4.y\n"
"mad_ieee r4.x___, r2.y, r4.x, r4.y\n"
"\n"
"dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r4.x___, r2.y_neg(xyzw), l38, r4.x\n"
"add r4.x___, r2.w, r4.x\n"
"mul_ieee r4._y__, r2.y, r3.z\n"
"\n"
"dcl_literal l39, 0x39A57B6B, 0xB9A3F927, 0x39AFE9F7, 0x00000000\n"
"\n"
"dcl_literal l40, 0xBAB7F476, 0x3A66F867, 0xBA0D3085, 0x00000000\n"
"mad_ieee r6.xyz_, r4.y, l39, l40\n"
"\n"
"dcl_literal l41, 0x3BC7E707, 0xBB7177FE, 0x3B141699, 0x00000000\n"
"mad_ieee r6.xyz_, r4.y, r6.xyzx, l41\n"
"\n"
"dcl_literal l42, 0xBD064D47, 0x3C93373D, 0xBC28FCFE, 0x00000000\n"
"mad_ieee r6.xyz_, r4.y, r6.xyzx, l42\n"
"\n"
"dcl_literal l43, 0x3EF7B95E, 0xBE17213C, 0x3D845A15, 0x00000000\n"
"mad_ieee r6.xyz_, r4.y, r6.xyzx, l43\n"
"mad_ieee r4.___w, r2.y, r6.z, r6.y\n"
"\n"
"dcl_literal l44, 0x31E61C52, 0x31E61C52, 0x31E61C52, 0x31E61C52\n"
"mad_ieee r4._y__, r4.y_neg(xyzw), r4.w, l44\n"
"mad_ieee r3.__z_, r3.z, r6.x, r4.y_neg(xyzw)\n"
"add r3.__z_, r2.w, r3.z\n"
"\n"
"dcl_literal l45, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD\n"
"add r3.__z_, r3.z, l45\n"
"\n"
"dcl_literal l46, 0x00000000, 0x3C5B3C5E, 0x00000000, 0x3B52D5DB\n"
"\n"
"dcl_literal l47, 0x00000000, 0x3E6A7578, 0x00000000, 0x3DD572AF\n"
"mad_ieee r4._y_w, r2.y, l46, l47\n"
"\n"
"dcl_literal l48, 0x00000000, 0x3F7A4BB2, 0x00000000, 0x3F44EFDF\n"
"mad_ieee r4._y_w, r2.y, r4.yyyw, l48\n"
"\n"
"dcl_literal l49, 0x00000000, 0x3FBA3AE7, 0x00000000, 0x4008392D\n"
"mad_ieee r4._y_w, r2.y, r4.yyyw, l49\n"
"\n"
"dcl_literal l50, 0x00000000, 0x3F2200F4, 0x00000000, 0x401D2EBE\n"
"mad_ieee r4._y_w, r2.y, r4.yyyw, l50\n"
"\n"
"dcl_literal l51, 0x00000000, 0xBD9E233F, 0x00000000, 0x3F800000\n"
"mad_ieee r4._y_w, r2.y, r4.yyyw, l51\n"
"mul_ieee r4._y__, r2.y, r4.y\n"
"div_zeroop(infinity) r4._y__, r4.y, r4.w\n"
"\n"
"dcl_literal l52, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"mad_ieee r2._y__, r2.y, l52, r4.y\n"
"add r2._y__, r2.w, r2.y\n"
"ftoi r2.___w, r2.x\n"
"round_z r4._y__, r2.x\n"
"add r4._y__, r2.x, r4.y_neg(xyzw)\n"
"\n"
"dcl_literal l53, 0x375943FE, 0x3A620FAB, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l54, 0x3B1F8219, 0x3CD01D14, 0x00000000, 0x00000000\n"
"mad_ieee r5.xy__, r4.y, l53, l54\n"
"\n"
"dcl_literal l55, 0x3D11C643, 0x3E53B452, 0x00000000, 0x00000000\n"
"mad_ieee r5.xy__, r5.xyxx, r4.y, l55\n"
"\n"
"dcl_literal l56, 0x3E11BDA2, 0x3F1E0B56, 0x00000000, 0x00000000\n"
"mad_ieee r5.xy__, r5.xyxx, r4.y, l56\n"
"\n"
"dcl_literal l57, 0x3E172A19, 0x3F1B09B3, 0x00000000, 0x00000000\n"
"mad_ieee r5.xy__, r5.xyxx, r4.y, l57\n"
"\n"
"dcl_literal l58, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9\n"
"mad_ieee r4.___w, r5.x, r4.y, l58\n"
"mul_ieee r4.___w, r4.y, r4.w\n"
"div_zeroop(infinity) r4.___w, r4.w, r5.y\n"
"\n"
"dcl_literal l59, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r4.___w, r4.y, l59, r4.w\n"
"\n"
"dcl_literal l60, 0x00000008, 0x00000007, 0x00000006, 0x00000005\n"
"ige r7, r2.w, l60\n"
"\n"
"dcl_literal l61, 0x40E00000, 0x40C00000, 0x40A00000, 0x40800000\n"
"add r8, r4.y, l61\n"
"\n"
"dcl_literal l62, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r5.x___, r7.x, r8.x, l62\n"
"mul_ieee r5._y__, r8.y, r5.x\n"
"cmov_logical r5.x___, r7.y, r5.y, r5.x\n"
"mul_ieee r5._y__, r8.z, r5.x\n"
"cmov_logical r5.x___, r7.z, r5.y, r5.x\n"
"mul_ieee r5._y__, r8.w, r5.x\n"
"cmov_logical r5.x___, r7.w, r5.y, r5.x\n"
"\n"
"dcl_literal l63, 0x00000004, 0x00000003, 0x00000000, 0x00000000\n"
"ige r6.xy__, r2.w, l63\n"
"\n"
"dcl_literal l64, 0x40400000, 0x40000000, 0x00000000, 0x00000000\n"
"add r7.xy__, r4.y, l64\n"
"mul_ieee r2.___w, r5.x, r7.x\n"
"cmov_logical r2.___w, r6.x, r2.w, r5.x\n"
"mul_ieee r4._y__, r7.y, r2.w\n"
"cmov_logical r2.___w, r6.y, r4.y, r2.w\n"
"\n"
"dcl_literal l65, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r4._y__, r2.w, l65\n"
"\n"
"dcl_literal l66, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r4._y__, r4.y, l66\n"
"\n"
"dcl_literal l67, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r2.w, l67\n"
"\n"
"dcl_literal l68, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r5.x___, l68, r2.w\n"
"\n"
"dcl_literal l69, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r5.x___, r5.x, l69\n"
"\n"
"dcl_literal l70, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r5._y__, r5.x, l70\n"
"ior r2.___w, r2.w, r5.y\n"
"\n"
"dcl_literal l71, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r5.x___, r5.x, l71\n"
"iadd r4._y__, r4.y, r5.x\n"
"itof r4._y__, r4.y\n"
"\n"
"dcl_literal l72, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r5.xy__, r2.w, l72\n"
"div_zeroop(infinity) r2.___w, r5.x, r5.y\n"
"mul_ieee r5._y__, r2.w, r2.w\n"
"mul_ieee r6.x___, r5.y, r5.y\n"
"\n"
"dcl_literal l73, 0x00000000, 0x3E1CD04F, 0x3E178897, 0x00000000\n"
"\n"
"dcl_literal l74, 0x00000000, 0x3E638E29, 0x3E3A3325, 0x00000000\n"
"mad_ieee r6._yz_, r6.x, l73, l74\n"
"\n"
"dcl_literal l75, 0x00000000, 0x3ECCCCCD, 0x3E924925, 0x00000000\n"
"mad_ieee r6._yz_, r6.x, r6.yyzy, l75\n"
"mul_ieee r6._y__, r6.x, r6.y\n"
"\n"
"dcl_literal l76, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r6.x___, r6.x, r6.z, l76\n"
"mad_ieee r5._y__, r5.y, r6.x, r6.y\n"
"mul_ieee r6.x___, r5.x, r5.x\n"
"\n"
"dcl_literal l77, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r5._y__, r6.x, l77, r5.y\n"
"\n"
"dcl_literal l78, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mul_ieee r6._y__, r4.y, l78\n"
"mad_ieee r2.___w, r2.w, r5.y, r6.y\n"
"\n"
"dcl_literal l79, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r2.___w, r6.x, l79, r2.w_neg(xyzw)\n"
"add r2.___w, r5.x_neg(xyzw), r2.w\n"
"\n"
"dcl_literal l80, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2.___w, r4.y, l80, r2.w_neg(xyzw)\n"
"add r2.___w, r4.w, r2.w\n"
"\n"
"dcl_literal l81, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.___w, r1.w, l81\n"
"mul_ieee r1.___w, r2.x, r1.w\n"
"cmov_logical r1.___w, r3.w, r2.w, r1.w\n"
"\n"
"dcl_literal l82, 0x00000000, 0x00000001, 0x00000002, 0x00000000\n"
"ieq r6.xyz_, r3.x, l82\n"
"and r3.xy_w, r3.y, r6.xyxz\n"
"cmov_logical r1.___w, r3.x, r4.x, r1.w\n"
"cmov_logical r1.___w, r3.y, r3.z, r1.w\n"
"ior r2.___w, r3.w, r3.w\n"
"cmov_logical r1.___w, r2.w, r2.y, r1.w\n"
"\n"
"dcl_literal l83, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2._y__, r1.w, l83\n"
"\n"
"dcl_literal l84, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l85, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r2._y__, r2.y, l84, l85\n"
"\n"
"dcl_literal l86, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r2._y__, r1.w, l86, r2.y\n"
"round_z r2._y__, r2.y\n"
"\n"
"dcl_literal l87, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r1.___w, r2.y_neg(xyzw), l87, r1.w\n"
"\n"
"dcl_literal l88, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r2.___w, r2.y_neg(xyzw), l88, r1.w\n"
"mul_ieee r3.x___, r2.w, r2.w\n"
"\n"
"dcl_literal l89, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l90, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r3._y__, r3.x, l89, l90\n"
"\n"
"dcl_literal l91, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r3._y__, r3.x, r3.y, l91\n"
"\n"
"dcl_literal l92, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r3._y__, r3.x, r3.y, l92\n"
"\n"
"dcl_literal l93, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3._y__, r3.x, r3.y, l93\n"
"mad_ieee r3.x___, r3.x_neg(xyzw), r3.y, r2.w\n"
"mul_ieee r2.___w, r2.w, r3.x\n"
"\n"
"dcl_literal l94, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r3.x___, r3.x_neg(xyzw), l94\n"
"div_zeroop(infinity) r2.___w, r2.w, r3.x\n"
"\n"
"dcl_literal l95, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r2.___w, r2.y, l95, r2.w_neg(xyzw)\n"
"add r1.___w, r1.w_neg(xyzw), r2.w\n"
"\n"
"dcl_literal l96, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r1.___w, r1.w_neg(xyzw), l96\n"
"ftoi r2.___w, r2.y\n"
"\n"
"dcl_literal l97, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"and r3.xyz_, r1.w, l97\n"
"if_logicalz r3.y\n"
"    itof r3.___w, r3.z\n"
"    \n"
"    dcl_literal l98, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r3.w, l98\n"
"    \n"
"    dcl_literal l99, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.___w, r4.x, l99\n"
"    iadd r3.___w, r3.w, r2.w\n"
"    \n"
"    dcl_literal l100, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4.x___, r4.y, l100\n"
"    \n"
"    dcl_literal l101, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r3.___w, l101, r3.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4._y__, l102, r3.w\n"
"    \n"
"    dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.___w, r4.y, l103, r3.w\n"
"    \n"
"    dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, l104, r3.w\n"
"    ishr r4.___w, r4.x, r3.w\n"
"    inegate r3.___w, r3.w\n"
"    \n"
"    dcl_literal l105, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.___w, r3.w, l105\n"
"    iadd r3.___w, r4.x, r3.w\n"
"    cmov_logical r3.___w, r4.y, r4.w, r3.w\n"
"else\n"
"    \n"
"    dcl_literal l106, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r1.___w, r1.w, l106\n"
"    \n"
"    dcl_literal l107, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l107\n"
"    iadd r3._y__, r3.y, r2.w\n"
"    \n"
"    dcl_literal l108, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2.___w, r2.w, l108\n"
"    iadd r1.___w, r1.w, r2.w\n"
"    \n"
"    dcl_literal l109, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r2.___w, r3.y, l109\n"
"    \n"
"    dcl_literal l110, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3._y__, l110, r2.w\n"
"    \n"
"    dcl_literal l111, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r1.___w, r3.y, l111, r1.w\n"
"    \n"
"    dcl_literal l112, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r2.___w, l112, r2.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l113, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3._y__, r3.z, l113\n"
"    \n"
"    dcl_literal l114, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"    ilt r4.xy__, l114, r2.w\n"
"    \n"
"    dcl_literal l115, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2.___w, r4.y, l115, r2.w\n"
"    ishr r2.___w, r3.y, r2.w\n"
"    cmov_logical r3.___w, r4.x, r2.w, r1.w\n"
"endif\n"
"\n"
"dcl_literal l116, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r1.___w, l116, r2.y\n"
"\n"
"dcl_literal l117, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r1.___w, r1.w, l117, r3.w\n"
"ior r1.___w, r3.x, r1.w\n"
"round_z r2._y__, r6.w\n"
"add r2._y__, r6.w, r2.y_neg(xyzw)\n"
"\n"
"dcl_literal l118, 0x41C80000, 0x42200000, 0x421C0000, 0x42180000\n"
"add r3, r2.y, l118\n"
"cmov_logical r6.___w, r2.z, r2.x, r3.x\n"
"\n"
"dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r2.__z_, l119, r6.w\n"
"mul_ieee r2.___w, r2.z, r2.z\n"
"\n"
"dcl_literal l120, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8\n"
"\n"
"dcl_literal l121, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2\n"
"mad_ieee r4.x___, r2.w, l120, l121\n"
"\n"
"dcl_literal l122, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C\n"
"mad_ieee r4.x___, r2.w, r4.x, l122\n"
"\n"
"dcl_literal l123, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD\n"
"mad_ieee r4.x___, r2.w, r4.x, l123\n"
"\n"
"dcl_literal l124, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r4.x___, r2.w, r4.x, l124\n"
"\n"
"dcl_literal l125, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB\n"
"mad_ieee r2.___w, r2.w, r4.x, l125\n"
"\n"
"dcl_literal l126, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D\n"
"mad_ieee r2.__z_, r2.z, r2.w, l126\n"
"\n"
"dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r2.___w, r5.z, r3.y, l127\n"
"mul_ieee r3._y__, r3.z, r2.w\n"
"cmov_logical r2.___w, r5.w, r3.y, r2.w\n"
"\n"
"dcl_literal l128, 0x421C0000, 0x42180000, 0x42140000, 0x42100000\n"
"ge r5, r2.x, l128\n"
"mul_ieee r3._y__, r3.w, r2.w\n"
"cmov_logical r2.___w, r5.x, r3.y, r2.w\n"
"\n"
"dcl_literal l129, 0x42140000, 0x42100000, 0x420C0000, 0x42080000\n"
"add r7, r2.y, l129\n"
"mul_ieee r3._y__, r2.w, r7.x\n"
"cmov_logical r2.___w, r5.y, r3.y, r2.w\n"
"mul_ieee r3._y__, r7.y, r2.w\n"
"cmov_logical r2.___w, r5.z, r3.y, r2.w\n"
"mul_ieee r3._y__, r7.z, r2.w\n"
"cmov_logical r2.___w, r5.w, r3.y, r2.w\n"
"\n"
"dcl_literal l130, 0x420C0000, 0x42080000, 0x42040000, 0x42000000\n"
"ge r5, r2.x, l130\n"
"mul_ieee r3._y__, r7.w, r2.w\n"
"cmov_logical r2.___w, r5.x, r3.y, r2.w\n"
"\n"
"dcl_literal l131, 0x42040000, 0x42000000, 0x41F80000, 0x41F00000\n"
"add r7, r2.y, l131\n"
"mul_ieee r3._y__, r2.w, r7.x\n"
"cmov_logical r2.___w, r5.y, r3.y, r2.w\n"
"mul_ieee r3._y__, r7.y, r2.w\n"
"cmov_logical r2.___w, r5.z, r3.y, r2.w\n"
"mul_ieee r3._y__, r7.z, r2.w\n"
"cmov_logical r2.___w, r5.w, r3.y, r2.w\n"
"\n"
"dcl_literal l132, 0x41F80000, 0x41F00000, 0x41E80000, 0x41E00000\n"
"ge r5, r2.x, l132\n"
"mul_ieee r3._y__, r7.w, r2.w\n"
"cmov_logical r2.___w, r5.x, r3.y, r2.w\n"
"\n"
"dcl_literal l133, 0x41E80000, 0x41E00000, 0x41D80000, 0x41D00000\n"
"add r7, r2.y, l133\n"
"mul_ieee r2._y__, r2.w, r7.x\n"
"cmov_logical r2._y__, r5.y, r2.y, r2.w\n"
"mul_ieee r2.___w, r7.y, r2.y\n"
"cmov_logical r2._y__, r5.z, r2.w, r2.y\n"
"mul_ieee r2.___w, r7.z, r2.y\n"
"cmov_logical r2._y__, r5.w, r2.w, r2.y\n"
"\n"
"dcl_literal l134, 0x00000000, 0x41D80000, 0x41D00000, 0x41000000\n"
"ge r3._yzw, r2.x, l134\n"
"mul_ieee r2.x___, r7.w, r2.y\n"
"cmov_logical r2.x___, r3.y, r2.x, r2.y\n"
"mul_ieee r2._y__, r3.x, r2.x\n"
"cmov_logical r2.x___, r3.z, r2.y, r2.x\n"
"\n"
"dcl_literal l135, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ilt r2._y__, r6.w, l135\n"
"\n"
"dcl_literal l136, 0x4C000000, 0x4C000000, 0x4C000000, 0x4C000000\n"
"mul_ieee r6._y__, r6.w, l136\n"
"\n"
"dcl_literal l137, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000\n"
"mov r6.x_z_, l137\n"
"cmov_logical r2._y_w, r2.y, r6.xxxy, r6.zzzw\n"
"\n"
"dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r2.w, l138\n"
"iadd r2._y__, r3.x, r2.y\n"
"\n"
"dcl_literal l139, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"iadd r2._y__, l139, r2.y\n"
"\n"
"dcl_literal l140, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r2.w, l140\n"
"\n"
"dcl_literal l141, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20\n"
"iadd r3.x___, l141, r2.w\n"
"\n"
"dcl_literal l142, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"and r3.x___, r3.x, l142\n"
"\n"
"dcl_literal l143, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ixor r3._y__, r3.x, l143\n"
"ior r2.___w, r2.w, r3.y\n"
"\n"
"dcl_literal l144, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r3.x___, r3.x, l144\n"
"iadd r2._y__, r2.y, r3.x\n"
"itof r2._y__, r2.y\n"
"\n"
"dcl_literal l145, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000\n"
"add r3.xy__, r2.w, l145\n"
"div_zeroop(infinity) r2.___w, r3.x, r3.y\n"
"mul_ieee r3._y__, r2.w, r2.w\n"
"mul_ieee r3.__z_, r3.y, r3.y\n"
"\n"
"dcl_literal l146, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000\n"
"\n"
"dcl_literal l147, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, l146, l147\n"
"\n"
"dcl_literal l148, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r3.z, r4.xyxx, l148\n"
"mul_ieee r4.x___, r3.z, r4.x\n"
"\n"
"dcl_literal l149, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB\n"
"mad_ieee r3.__z_, r3.z, r4.y, l149\n"
"mad_ieee r3._y__, r3.y, r3.z, r4.x\n"
"mul_ieee r3.__z_, r3.x, r3.x\n"
"\n"
"dcl_literal l150, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r4.x___, r3.z, l150\n"
"\n"
"dcl_literal l151, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mad_ieee r3._y__, r3.z, l151, r3.y\n"
"mad_ieee r2.___w, r2.w_neg(xyzw), r3.y, r4.x\n"
"add r2.___w, r3.x_neg(xyzw), r2.w\n"
"\n"
"dcl_literal l152, 0xBFB8AA3B, 0xBFB8AA3B, 0xBFB8AA3B, 0xBFB8AA3B\n"
"mul_ieee r2.___w, r2.w, l152\n"
"frc r3.x___, r2.w_abs\n"
"add r3._y__, r2.w_abs, r3.x_neg(xyzw)\n"
"\n"
"dcl_literal l153, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, r2.w, l153\n"
"\n"
"dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"\n"
"dcl_literal l155, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r2.___w, r2.w, l154, l155\n"
"mul_ieee r3.__z_, r3.x, r2.w\n"
"mad_ieee r2._y__, r3.y, r2.w, r2.y\n"
"frc r3._y__, r6.w_abs\n"
"add r4.x___, r6.w_abs, r3.y_neg(xyzw)\n"
"\n"
"dcl_literal l156, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r4._y__, r6.w, l156\n"
"\n"
"dcl_literal l157, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"\n"
"dcl_literal l158, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r4._y__, r4.y, l157, l158\n"
"mul_ieee r4.___w, r4.x, r4.y\n"
"mul_ieee r5.x___, r3.y, r4.y\n"
"\n"
"dcl_literal l159, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r5._y__, r3.z, l159\n"
"mad_ieee r2.___w, r3.x, r2.w, r5.y_neg(xyzw)\n"
"\n"
"dcl_literal l160, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r3.x___, r4.w, l160\n"
"mad_ieee r4.x___, r4.x, r4.y, r3.x_neg(xyzw)\n"
"mul_ieee r5.__z_, r3.z, r4.w\n"
"mad_ieee r5.___w, r5.y, r3.x, r5.z_neg(xyzw)\n"
"mad_ieee r5.___w, r5.y, r4.x, r5.w\n"
"mad_ieee r3.x___, r2.w, r3.x, r5.w\n"
"mad_ieee r3.x___, r2.w, r4.x, r3.x\n"
"\n"
"dcl_literal l161, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r4.x___, r2.y, l161\n"
"add r5.___w, r2.y, r4.x_neg(xyzw)\n"
"\n"
"dcl_literal l162, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000\n"
"and r6.x___, r5.x, l162\n"
"mad_ieee r3._y__, r3.y, r4.y, r6.x_neg(xyzw)\n"
"mul_ieee r4._y__, r2.y, r5.x\n"
"mad_ieee r6._y__, r4.x, r6.x, r4.y_neg(xyzw)\n"
"mad_ieee r4.x___, r4.x, r3.y, r6.y\n"
"mad_ieee r4.x___, r5.w, r6.x, r4.x\n"
"mad_ieee r4.x___, r5.w, r3.y, r4.x\n"
"mul_ieee r3.__z_, r3.z, r5.x\n"
"mad_ieee r5.x___, r5.y, r6.x, r3.z_neg(xyzw)\n"
"mad_ieee r5.x___, r5.y, r3.y, r5.x\n"
"mad_ieee r5.x___, r2.w, r6.x, r5.x\n"
"mad_ieee r2.___w, r2.w, r3.y, r5.x\n"
"frc r3._y__, r5.z_abs\n"
"add r5.x___, r5.z_abs, r3.y_neg(xyzw)\n"
"\n"
"dcl_literal l163, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r5._y__, r5.z, l163\n"
"\n"
"dcl_literal l164, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"\n"
"dcl_literal l165, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r5._y__, r5.y, l164, l165\n"
"mul_ieee r5.x___, r5.x, r5.y\n"
"mul_ieee r3._y__, r3.y, r5.y\n"
"mad_ieee r2._y__, r2.y, r4.w, r5.x\n"
"frc r4.___w, r4.y_abs\n"
"add r5.x___, r4.y_abs, r4.w_neg(xyzw)\n"
"\n"
"dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r4._y__, r4.y, l166\n"
"\n"
"dcl_literal l167, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"\n"
"dcl_literal l168, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r4._y__, r4.y, l167, l168\n"
"mul_ieee r4.___w, r4.w, r4.y\n"
"mad_ieee r2._y__, r5.x, r4.y, r2.y\n"
"frc r4._y__, r3.z_abs\n"
"add r5.x___, r3.z_abs, r4.y_neg(xyzw)\n"
"\n"
"dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r3.__z_, r3.z, l169\n"
"\n"
"dcl_literal l170, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"\n"
"dcl_literal l171, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r3.__z_, r3.z, l170, l171\n"
"mul_ieee r4._y__, r4.y, r3.z\n"
"mad_ieee r2._y__, r5.x, r3.z, r2.y\n"
"ge r3.__z_, r4.y_abs, r4.w_abs\n"
"cmov_logical r5.x___, r3.z, r4.y, r4.w\n"
"cmov_logical r3.__z_, r3.z, r4.w, r4.y\n"
"ge r4._y__, r5.x_abs, r3.y_abs\n"
"cmov_logical r4.___w, r4.y, r5.x, r3.y\n"
"cmov_logical r3._y__, r4.y, r3.y, r5.x\n"
"ge r4._y__, r3.z_abs, r3.y_abs\n"
"cmov_logical r5.x___, r4.y, r3.z, r3.y\n"
"cmov_logical r3._y__, r4.y, r3.y, r3.z\n"
"add r3.__z_, r3.x, r4.x\n"
"add r3.__z_, r2.w, r3.z\n"
"add r3.__z_, r3.y, r3.z\n"
"add r3.__z_, r5.x, r3.z\n"
"add r3.__z_, r4.w, r3.z\n"
"add r4._y__, r4.w, r3.z_neg(xyzw)\n"
"add r4._y__, r5.x, r4.y\n"
"add r3._y__, r3.y, r4.y\n"
"add r3.x___, r3.x, r3.y\n"
"add r3.x___, r4.x, r3.x\n"
"add r2.___w, r2.w, r3.x\n"
"frc r3.x___, r3.z_abs\n"
"add r3._y__, r3.z_abs, r3.x_neg(xyzw)\n"
"\n"
"dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r3.__z_, r3.z, l172\n"
"\n"
"dcl_literal l173, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"\n"
"dcl_literal l174, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r3.__z_, r3.z, l173, l174\n"
"mul_ieee r3.x___, r3.x, r3.z\n"
"mad_ieee r2._y__, r3.y, r3.z, r2.y\n"
"\n"
"dcl_literal l175, 0x00000000, 0x3F317180, 0x3717F7D1, 0x00000000\n"
"mul_ieee r3._yz_, r3.x, l175\n"
"mul_ieee r4.xy__, r3.yzyy, r3.yzyy\n"
"\n"
"dcl_literal l176, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mul_ieee r4._y__, r4.y, l176\n"
"\n"
"dcl_literal l177, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l178, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r4.___w, r4.x, l177, l178\n"
"\n"
"dcl_literal l179, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r4.___w, r4.x, r4.w, l179\n"
"\n"
"dcl_literal l180, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r4.___w, r4.x, r4.w, l180\n"
"\n"
"dcl_literal l181, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r4.___w, r4.x, r4.w, l181\n"
"mad_ieee r4.x___, r4.x_neg(xyzw), r4.w, r3.y\n"
"mul_ieee r3._y__, r3.y, r4.x\n"
"\n"
"dcl_literal l182, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"add r4.x___, r4.x, l182\n"
"div_zeroop(infinity) r3._y__, r3.y, r4.x\n"
"\n"
"dcl_literal l183, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r3._y__, r3.x_neg(xyzw), l183, r3.y\n"
"\n"
"dcl_literal l184, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r4.x___, r3.x, l184, r4.y_neg(xyzw)\n"
"mul_ieee r3.__z_, r3.z, r4.x\n"
"\n"
"dcl_literal l185, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000\n"
"add r4.x___, r4.x, l185\n"
"div_zeroop(infinity) r3.__z_, r3.z, r4.x\n"
"\n"
"dcl_literal l186, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3.x___, r3.x_neg(xyzw), l186, r3.z\n"
"\n"
"dcl_literal l187, 0x3F317180, 0x3717F7D1, 0x00000000, 0x00000000\n"
"mul_ieee r4.xy__, r2.w, l187\n"
"mul_ieee r5.xy__, r4.xyxx, r4.xyxx\n"
"\n"
"dcl_literal l188, 0x00000000, 0x00000000, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l189, 0x00000000, 0x00000000, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r5.__zw, r5.xxxy, l188, l189\n"
"\n"
"dcl_literal l190, 0x00000000, 0x00000000, 0x388AB355, 0x388AB355\n"
"mad_ieee r5.__zw, r5.xxxy, r5.zzzw, l190\n"
"\n"
"dcl_literal l191, 0x00000000, 0x00000000, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r5.__zw, r5.xxxy, r5.zzzw, l191\n"
"\n"
"dcl_literal l192, 0x00000000, 0x00000000, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r5.__zw, r5.xxxy, r5.zzzw, l192\n"
"mad_ieee r5.xy__, r5.xyxx_neg(xyzw), r5.zwzz, r4.xyxx\n"
"mul_ieee r4.xy__, r4.xyxx, r5.xyxx\n"
"\n"
"dcl_literal l193, 0xC0000000, 0xC0000000, 0x00000000, 0x00000000\n"
"add r5.xy__, r5.xyxx, l193\n"
"div_zeroop(infinity) r4.xy__, r4.xyxx, r5.xyxx\n"
"\n"
"dcl_literal l194, 0x3F317180, 0x3717F7D1, 0x00000000, 0x00000000\n"
"mad_ieee r4.xy__, r2.w_neg(xyzw), l194, r4.xyxx\n"
"mad_ieee r2.___w, r3.y, r4.x, r4.x_neg(xyzw)\n"
"add r2.___w, r3.y_neg(xyzw), r2.w\n"
"mad_ieee r3._y__, r3.x, r4.y, r4.y_neg(xyzw)\n"
"add r3.x___, r3.x_neg(xyzw), r3.y\n"
"mad_ieee r3.x___, r2.w, r3.x, r3.x\n"
"add r2.___w, r2.w, r3.x\n"
"\n"
"dcl_literal l195, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.___w, r2.w, l195\n"
"ftoi r3.x___, r2.y\n"
"\n"
"dcl_literal l196, 0x80000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r4.xy_w, r2.w, l196\n"
"if_logicalz r4.y\n"
"    itof r3._y__, r4.w\n"
"    \n"
"    dcl_literal l197, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3._yz_, r3.y, l197\n"
"    \n"
"    dcl_literal l198, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l198\n"
"    iadd r3._y__, r3.y, r3.x\n"
"    \n"
"    dcl_literal l199, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.__z_, r3.z, l199\n"
"    \n"
"    dcl_literal l200, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r3._y__, l200, r3.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l201, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r5.x___, l201, r3.y\n"
"    \n"
"    dcl_literal l202, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3._y__, r5.x, l202, r3.y\n"
"    \n"
"    dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5.x___, l203, r3.y\n"
"    ishr r5._y__, r3.z, r3.y\n"
"    inegate r3._y__, r3.y\n"
"    \n"
"    dcl_literal l204, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3._y__, r3.y, l204\n"
"    iadd r3._y__, r3.z, r3.y\n"
"    cmov_logical r3._y__, r5.x, r5.y, r3.y\n"
"else\n"
"    \n"
"    dcl_literal l205, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2.___w, r2.w, l205\n"
"    \n"
"    dcl_literal l206, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.__z_, r4.y, l206\n"
"    iadd r3.__z_, r3.z, r3.x\n"
"    \n"
"    dcl_literal l207, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.x___, r3.x, l207\n"
"    iadd r2.___w, r2.w, r3.x\n"
"    \n"
"    dcl_literal l208, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3.x___, r3.z, l208\n"
"    \n"
"    dcl_literal l209, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.__z_, l209, r3.x\n"
"    \n"
"    dcl_literal l210, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.___w, r3.z, l210, r2.w\n"
"    \n"
"    dcl_literal l211, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.x___, l211, r3.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l212, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.__z_, r4.w, l212\n"
"    \n"
"    dcl_literal l213, 0x00000000, 0x00000000, 0x00000000, 0x00000017\n"
"    ilt r4._y_w, l213, r3.x\n"
"    \n"
"    dcl_literal l214, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.x___, r4.w, l214, r3.x\n"
"    ishr r3.x___, r3.z, r3.x\n"
"    cmov_logical r3._y__, r4.y, r3.x, r2.w\n"
"endif\n"
"\n"
"dcl_literal l215, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r2._y__, l215, r2.y\n"
"\n"
"dcl_literal l216, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2._y__, r2.y, l216, r3.y\n"
"ior r2._y__, r4.x, r2.y\n"
"\n"
"dcl_literal l217, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r2.___w, r2.z, l217\n"
"\n"
"dcl_literal l218, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l219, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r2.___w, r2.w, l218, l219\n"
"\n"
"dcl_literal l220, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r2.___w, r2.z, l220, r2.w\n"
"round_z r2.___w, r2.w\n"
"\n"
"dcl_literal l221, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2.__z_, r2.w_neg(xyzw), l221, r2.z\n"
"\n"
"dcl_literal l222, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3.x___, r2.w_neg(xyzw), l222, r2.z\n"
"mul_ieee r3._y__, r3.x, r3.x\n"
"\n"
"dcl_literal l223, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l224, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r3.__z_, r3.y, l223, l224\n"
"\n"
"dcl_literal l225, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r3.__z_, r3.y, r3.z, l225\n"
"\n"
"dcl_literal l226, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r3.__z_, r3.y, r3.z, l226\n"
"\n"
"dcl_literal l227, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r3.__z_, r3.y, r3.z, l227\n"
"mad_ieee r3._y__, r3.y_neg(xyzw), r3.z, r3.x\n"
"mul_ieee r3.x___, r3.x, r3.y\n"
"\n"
"dcl_literal l228, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r3._y__, r3.y_neg(xyzw), l228\n"
"div_zeroop(infinity) r3.x___, r3.x, r3.y\n"
"\n"
"dcl_literal l229, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3.x___, r2.w, l229, r3.x_neg(xyzw)\n"
"add r2.__z_, r2.z_neg(xyzw), r3.x\n"
"\n"
"dcl_literal l230, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.__z_, r2.z_neg(xyzw), l230\n"
"ftoi r3.x___, r2.w\n"
"\n"
"dcl_literal l231, 0x80000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r4.xy_w, r2.z, l231\n"
"if_logicalz r4.y\n"
"    itof r3._y__, r4.w\n"
"    \n"
"    dcl_literal l232, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r3._yz_, r3.y, l232\n"
"    \n"
"    dcl_literal l233, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3._y__, r3.y, l233\n"
"    iadd r3._y__, r3.y, r3.x\n"
"    \n"
"    dcl_literal l234, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.__z_, r3.z, l234\n"
"    \n"
"    dcl_literal l235, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r3._y__, l235, r3.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l236, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r5.x___, l236, r3.y\n"
"    \n"
"    dcl_literal l237, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3._y__, r5.x, l237, r3.y\n"
"    \n"
"    dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5.x___, l238, r3.y\n"
"    ishr r5._y__, r3.z, r3.y\n"
"    inegate r3._y__, r3.y\n"
"    \n"
"    dcl_literal l239, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3._y__, r3.y, l239\n"
"    iadd r3._y__, r3.z, r3.y\n"
"    cmov_logical r3._y__, r5.x, r5.y, r3.y\n"
"else\n"
"    \n"
"    dcl_literal l240, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2.__z_, r2.z, l240\n"
"    \n"
"    dcl_literal l241, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.__z_, r4.y, l241\n"
"    iadd r3.__z_, r3.z, r3.x\n"
"    \n"
"    dcl_literal l242, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.x___, r3.x, l242\n"
"    iadd r2.__z_, r2.z, r3.x\n"
"    \n"
"    dcl_literal l243, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3.x___, r3.z, l243\n"
"    \n"
"    dcl_literal l244, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r3.__z_, l244, r3.x\n"
"    \n"
"    dcl_literal l245, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.__z_, r3.z, l245, r2.z\n"
"    \n"
"    dcl_literal l246, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.x___, l246, r3.x_neg(xyzw)\n"
"    \n"
"    dcl_literal l247, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.__z_, r4.w, l247\n"
"    \n"
"    dcl_literal l248, 0x00000000, 0x00000000, 0x00000000, 0x00000017\n"
"    ilt r4._y_w, l248, r3.x\n"
"    \n"
"    dcl_literal l249, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.x___, r4.w, l249, r3.x\n"
"    ishr r3.x___, r3.z, r3.x\n"
"    cmov_logical r3._y__, r4.y, r3.x, r2.z\n"
"endif\n"
"\n"
"dcl_literal l250, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r2.__z_, l250, r2.w\n"
"\n"
"dcl_literal l251, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.__z_, r2.z, l251, r3.y\n"
"ior r2.__z_, r4.x, r2.z\n"
"\n"
"dcl_literal l252, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"add r2.___w, r6.w, l252\n"
"\n"
"dcl_literal l253, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"lt r3.x___, r2.w, l253\n"
"\n"
"dcl_literal l254, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000\n"
"\n"
"dcl_literal l255, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"cmov_logical r3.x___, r3.x, l254, l255\n"
"\n"
"dcl_literal l256, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B\n"
"mad_ieee r3.x___, r2.w, l256, r3.x\n"
"round_z r3.x___, r3.x\n"
"\n"
"dcl_literal l257, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180\n"
"mad_ieee r2.___w, r3.x_neg(xyzw), l257, r2.w\n"
"\n"
"dcl_literal l258, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3._y__, r3.x_neg(xyzw), l258, r2.w\n"
"mul_ieee r3.__z_, r3.y, r3.y\n"
"\n"
"dcl_literal l259, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C\n"
"\n"
"dcl_literal l260, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E\n"
"mad_ieee r4.x___, r3.z, l259, l260\n"
"\n"
"dcl_literal l261, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355\n"
"mad_ieee r4.x___, r3.z, r4.x, l261\n"
"\n"
"dcl_literal l262, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61\n"
"mad_ieee r4.x___, r3.z, r4.x, l262\n"
"\n"
"dcl_literal l263, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB\n"
"mad_ieee r4.x___, r3.z, r4.x, l263\n"
"mad_ieee r3.__z_, r3.z_neg(xyzw), r4.x, r3.y\n"
"mul_ieee r3._y__, r3.y, r3.z\n"
"\n"
"dcl_literal l264, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"add r3.__z_, r3.z_neg(xyzw), l264\n"
"div_zeroop(infinity) r3._y__, r3.y, r3.z\n"
"\n"
"dcl_literal l265, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1\n"
"mad_ieee r3._y__, r3.x, l265, r3.y_neg(xyzw)\n"
"add r2.___w, r2.w_neg(xyzw), r3.y\n"
"\n"
"dcl_literal l266, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"add r2.___w, r2.w_neg(xyzw), l266\n"
"ftoi r3._y__, r3.x\n"
"\n"
"dcl_literal l267, 0x80000000, 0x7F800000, 0x00000000, 0x007FFFFF\n"
"and r4.xy_w, r2.w, l267\n"
"if_logicalz r4.y\n"
"    itof r3.__z_, r4.w\n"
"    \n"
"    dcl_literal l268, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r5.xy__, r3.z, l268\n"
"    \n"
"    dcl_literal l269, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.__z_, r5.x, l269\n"
"    iadd r3.__z_, r3.z, r3.y\n"
"    \n"
"    dcl_literal l270, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r5.x___, r5.y, l270\n"
"    \n"
"    dcl_literal l271, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r3.__z_, l271, r3.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l272, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r5._y__, l272, r3.z\n"
"    \n"
"    dcl_literal l273, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.__z_, r5.y, l273, r3.z\n"
"    \n"
"    dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5._y__, l274, r3.z\n"
"    ishr r5.__z_, r5.x, r3.z\n"
"    inegate r3.__z_, r3.z\n"
"    \n"
"    dcl_literal l275, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3.__z_, r3.z, l275\n"
"    iadd r3.__z_, r5.x, r3.z\n"
"    cmov_logical r3.__z_, r5.y, r5.z, r3.z\n"
"else\n"
"    \n"
"    dcl_literal l276, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2.___w, r2.w, l276\n"
"    \n"
"    dcl_literal l277, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r4._y__, r4.y, l277\n"
"    iadd r4._y__, r4.y, r3.y\n"
"    \n"
"    dcl_literal l278, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r3._y__, r3.y, l278\n"
"    iadd r2.___w, r2.w, r3.y\n"
"    \n"
"    dcl_literal l279, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81\n"
"    iadd r3._y__, r4.y, l279\n"
"    \n"
"    dcl_literal l280, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r4._y__, l280, r3.y\n"
"    \n"
"    dcl_literal l281, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r2.___w, r4.y, l281, r2.w\n"
"    \n"
"    dcl_literal l282, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3._y__, l282, r3.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l283, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4._y__, r4.w, l283\n"
"    \n"
"    dcl_literal l284, 0x00000000, 0x00000017, 0x00000000, 0x00000000\n"
"    ilt r5.xy__, l284, r3.y\n"
"    \n"
"    dcl_literal l285, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3._y__, r5.y, l285, r3.y\n"
"    ishr r3._y__, r4.y, r3.y\n"
"    cmov_logical r3.__z_, r5.x, r3.y, r2.w\n"
"endif\n"
"\n"
"dcl_literal l286, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000\n"
"lt r2.___w, l286, r3.x\n"
"\n"
"dcl_literal l287, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"cmov_logical r2.___w, r2.w, l287, r3.z\n"
"ior r2.___w, r4.x, r2.w\n"
"sqrt_vec r3.x___, r6.w\n"
"\n"
"dcl_literal l288, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.__z_, r1.z, l288\n"
"and r1.__z_, r4.z, r1.z\n"
"\n"
"dcl_literal l289, 0x2E800000, 0x2E800000, 0x2E800000, 0x2E800000\n"
"mul_ieee r3._y__, r2.y, l289\n"
"cmov_logical r2._y__, r1.z, r3.y, r2.y\n"
"mul_ieee r2.___w, r2.w, r3.x\n"
"div_zeroop(infinity) r3.x___, r2.y, r2.w\n"
"mul_ieee r3.x___, r2.z, r3.x\n"
"mul_ieee r3.x___, r2.x, r3.x\n"
"div_zeroop(infinity) r2._y__, r2.w, r2.y\n"
"div_zeroop(infinity) r2.x___, r2.y, r2.x\n"
"div_zeroop(infinity) r2.x___, r2.x, r2.z\n"
"cmov_logical r1.__z_, r1.z, r2.x, r3.x\n"
"cmov_logical r1.__z_, r3.w, r1.z, r1.w\n"
"\n"
"dcl_literal l290, 0x00800000, 0x32000000, 0x00000000, 0x00000000\n"
"ilt r2.xy__, r0.y, l290\n"
"itof r1.___w, r0.y\n"
"\n"
"dcl_literal l291, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF\n"
"and r2.__zw, r1.w, l291\n"
"\n"
"dcl_literal l292, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r2.__z_, r2.z, l292\n"
"\n"
"dcl_literal l293, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"iadd r2.__z_, r2.z, l293\n"
"\n"
"dcl_literal l294, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r2.___w, r2.w, l294\n"
"\n"
"dcl_literal l295, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r2.__z_, l295, r2.z_neg(xyzw)\n"
"\n"
"dcl_literal l296, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r3.x___, l296, r2.z\n"
"\n"
"dcl_literal l297, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r2.__z_, r3.x, l297, r2.z\n"
"\n"
"dcl_literal l298, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.x___, l298, r2.z\n"
"ishr r3._y__, r2.w, r2.z\n"
"inegate r2.__z_, r2.z\n"
"\n"
"dcl_literal l299, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r2.__z_, r2.z, l299\n"
"iadd r2.__z_, r2.w, r2.z\n"
"cmov_logical r2.__z_, r3.x, r3.y, r2.z\n"
"cmov_logical r2.__z_, r2.x, r2.z, r0.y\n"
"\n"
"dcl_literal l300, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"div_zeroop(infinity) r2.___w, l300, r2.z\n"
"ior r0.__z_, r0.z, r2.w\n"
"\n"
"dcl_literal l301, 0x35800000, 0x35800000, 0x35800000, 0x35800000\n"
"ige r2.___w, l301, r0.y\n"
"cmov_logical r1.__z_, r2.w, r0.z, r1.z\n"
"add r3.x___, r0.y, r1.x_neg(xyzw)\n"
"\n"
"dcl_literal l302, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"mul_ieee r3._y__, r3.x, l302\n"
"frc r3._y__, r3.y\n"
"\n"
"dcl_literal l303, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"eq r3._y__, r3.y, l303\n"
"add r3.__z_, r0.y, r0.y\n"
"round_nearest r3.__z_, r3.z\n"
"\n"
"dcl_literal l304, 0x40000000, 0x40000000, 0x40000000, 0x40000000\n"
"mad_ieee r3.___w, r0.y, l304, r3.z_neg(xyzw)\n"
"\n"
"dcl_literal l305, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000\n"
"mul_ieee r3.__z_, r3.z, l305\n"
"frc r3.__z_, r3.z\n"
"\n"
"dcl_literal l306, 0x40800000, 0x40800000, 0x40800000, 0x40800000\n"
"mul_ieee r3.__z_, r3.z, l306\n"
"round_nearest r3.__z_, r3.z\n"
"\n"
"dcl_literal l307, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB\n"
"mul_ieee r3.___w, r3.w, l307\n"
"mul_ieee r4.x___, r3.w, r3.w\n"
"mul_ieee r4._y__, r3.w, r4.x\n"
"\n"
"dcl_literal l308, 0x00000000, 0x00000000, 0x3636DF25, 0xB492923A\n"
"\n"
"dcl_literal l309, 0x00000000, 0x00000000, 0xB95009D4, 0x37D00AE2\n"
"mad_ieee r4.__zw, r4.x, l308, l309\n"
"\n"
"dcl_literal l310, 0x00000000, 0x00000000, 0x3C088887, 0xBAB60B60\n"
"mad_ieee r4.__zw, r4.x, r4.zzzw, l310\n"
"\n"
"dcl_literal l311, 0x00000000, 0x00000000, 0xBE2AAAAB, 0x3D2AAAAB\n"
"mad_ieee r4.__zw, r4.x, r4.zzzw, l311\n"
"mad_ieee r3.___w, r4.y, r4.z, r3.w\n"
"\n"
"dcl_literal l312, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000\n"
"\n"
"dcl_literal l313, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"mad_ieee r4._y__, r4.x_neg(xyzw), l312, l313\n"
"mul_ieee r4.x___, r4.x, r4.x\n"
"mad_ieee r4.x___, r4.x, r4.w, r4.y\n"
"\n"
"dcl_literal l314, 0x00000000, 0x3F800000, 0x40000000, 0x40400000\n"
"eq r5, r3.z, l314\n"
"\n"
"dcl_literal l315, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ge r3.__z_, r0.y, l315\n"
"and r5, r5, r3.z\n"
"and r3.__z_, r3.w, r5.x\n"
"cmov_logical r3.__z_, r5.y, r4.x, r3.z\n"
"cmov_logical r3.__z_, r5.z, r3.w_neg(xyzw), r3.z\n"
"cmov_logical r3.__z_, r5.w, r4.x_neg(xyzw), r3.z\n"
"\n"
"dcl_literal l316, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ine r4.xy__, r0.ywyy, l316\n"
"\n"
"dcl_literal l317, 0x00000000, 0x00000000, 0x7F800000, 0x00000000\n"
"ieq r5.xyz_, r0.wyyw, l317\n"
"and r0.___w, r4.x, r5.x\n"
"\n"
"dcl_literal l318, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r1.___w, r1.w, l318\n"
"\n"
"dcl_literal l319, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000\n"
"and r4.x_z_, r1.w, l319\n"
"\n"
"dcl_literal l320, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishr r1.___w, r4.x, l320\n"
"\n"
"dcl_literal l321, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"ior r3.___w, r4.z, l321\n"
"\n"
"dcl_literal l322, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"iadd r1.___w, l322, r1.w_neg(xyzw)\n"
"\n"
"dcl_literal l323, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ilt r4.x___, l323, r1.w\n"
"\n"
"dcl_literal l324, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"cmov_logical r1.___w, r4.x, l324, r1.w\n"
"\n"
"dcl_literal l325, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.x___, l325, r1.w\n"
"ishr r4.__z_, r3.w, r1.w\n"
"inegate r1.___w, r1.w\n"
"\n"
"dcl_literal l326, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1.___w, r1.w, l326\n"
"iadd r1.___w, r3.w, r1.w\n"
"cmov_logical r1.___w, r4.x, r4.z, r1.w\n"
"cmov_logical r0.___w, r0.w, r1.w, r3.z\n"
"and r1.___w, r2.y, r4.y\n"
"\n"
"dcl_literal l327, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"mul_ieee r2._y__, r0.y, l327\n"
"cmov_logical r0.___w, r1.w, r2.y, r0.w\n"
"\n"
"dcl_literal l328, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ge r1.___w, r3.x, l328\n"
"\n"
"dcl_literal l329, 0x00000000, 0x00000000, 0x3F000000, 0x00000000\n"
"eq r3.x_z_, r1.x, l329\n"
"and r1.x___, r1.w, r3.x\n"
"ior r1.x___, r5.y, r1.x\n"
"\n"
"dcl_literal l330, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.___w, r1.x, l330, r0.w\n"
"\n"
"dcl_literal l331, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"\n"
"dcl_literal l332, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"cmov_logical r1.x___, r3.y, l331, l332\n"
"cmov_logical r0.___w, r3.z, r1.x, r0.w\n"
"\n"
"dcl_literal l333, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1.x___, r0.x, l333\n"
"cmov_logical r0.___w, r1.x, r0.w_neg(xyzw), r0.w\n"
"mul_ieee r1.___w, r2.z, r0.w\n"
"\n"
"dcl_literal l334, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"div_zeroop(infinity) r1.___w, l334, r1.w\n"
"mul_ieee r1.___w, r1.z, r1.w\n"
"\n"
"dcl_literal l335, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF\n"
"and r3._yzw, r1.w, l335\n"
"if_logicalz r3.z\n"
"    itof r2._y__, r3.w\n"
"    \n"
"    dcl_literal l336, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000\n"
"    and r4.xy__, r2.y, l336\n"
"    \n"
"    dcl_literal l337, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r2._y__, r4.x, l337\n"
"    \n"
"    dcl_literal l338, 0xFFFFFFDE, 0xFFFFFFDE, 0xFFFFFFDE, 0xFFFFFFDE\n"
"    iadd r2._y__, r2.y, l338\n"
"    \n"
"    dcl_literal l339, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r4.x___, r4.y, l339\n"
"    \n"
"    dcl_literal l340, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r2._y__, l340, r2.y_neg(xyzw)\n"
"    \n"
"    dcl_literal l341, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r4._y__, l341, r2.y\n"
"    \n"
"    dcl_literal l342, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r2._y__, r4.y, l342, r2.y\n"
"    \n"
"    dcl_literal l343, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, l343, r2.y\n"
"    ishr r4.__z_, r4.x, r2.y\n"
"    inegate r2._y__, r2.y\n"
"    \n"
"    dcl_literal l344, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r2._y__, r2.y, l344\n"
"    iadd r2._y__, r4.x, r2.y\n"
"    cmov_logical r2._y__, r4.y, r4.z, r2.y\n"
"else\n"
"    \n"
"    dcl_literal l345, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r4.x___, r1.w, l345\n"
"    \n"
"    dcl_literal l346, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r3.__z_, r3.z, l346\n"
"    \n"
"    dcl_literal l347, 0xEF000000, 0xEF000000, 0xEF000000, 0xEF000000\n"
"    iadd r4.x___, r4.x, l347\n"
"    \n"
"    dcl_literal l348, 0xFFFFFF5F, 0xFFFFFF5F, 0xFFFFFF5F, 0xFFFFFF5F\n"
"    iadd r3.__z_, r3.z, l348\n"
"    \n"
"    dcl_literal l349, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"    iadd r3.__z_, l349, r3.z_neg(xyzw)\n"
"    \n"
"    dcl_literal l350, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r3.___w, r3.w, l350\n"
"    \n"
"    dcl_literal l351, 0x00000000, 0x00000000, 0x00000017, 0x00000000\n"
"    ilt r4._yz_, l351, r3.z\n"
"    \n"
"    dcl_literal l352, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r3.__z_, r4.z, l352, r3.z\n"
"    ishr r3.__z_, r3.w, r3.z\n"
"    cmov_logical r2._y__, r4.y, r3.z, r4.x\n"
"endif\n"
"ior r2._y__, r3.y, r2.y\n"
"\n"
"dcl_literal l353, 0x42040000, 0x42040000, 0x42040000, 0x42040000\n"
"lt r3._y__, l353, r2.z\n"
"and r3._y__, r1.y, r3.y\n"
"cmov_logical r1.___w, r3.y, r2.y, r1.w\n"
"\n"
"dcl_literal l354, 0x42040000, 0x42040000, 0x42040000, 0x42040000\n"
"ge r2._y__, l354, r2.z\n"
"and r2._y__, r1.y, r2.y\n"
"mul_ieee r3._y__, r2.z, r1.z\n"
"mul_ieee r0.___w, r0.w, r3.y\n"
"\n"
"dcl_literal l355, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB\n"
"div_zeroop(infinity) r0.___w, l355, r0.w\n"
"cmov_logical r0.___w, r2.y, r0.w, r1.w\n"
"div_zeroop(infinity) r1.___w, r1.z, r0.x\n"
"\n"
"dcl_literal l356, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"lt r2._y__, r2.z, l356\n"
"and r2._y__, r1.y, r2.y\n"
"cmov_logical r0.___w, r2.y, r1.w, r0.w\n"
"cmov_logical r0.__z_, r2.w, r0.z, r0.w\n"
"cmov_logical r0.__z_, r1.y, r0.z, r1.z\n"
"\n"
"dcl_literal l357, 0x00000000, 0x00000000, 0x80000000, 0x7F800000\n"
"and r1.__zw, r0.z, l357\n"
"if_logicalz r1.w\n"
"    \n"
"    dcl_literal l358, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"    and r0.___w, r0.z, l358\n"
"    itof r0.___w, r0.w\n"
"    \n"
"    dcl_literal l359, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000\n"
"    and r2._yz_, r0.w, l359\n"
"    \n"
"    dcl_literal l360, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r0.___w, r2.y, l360\n"
"    \n"
"    dcl_literal l361, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    iadd r0.___w, r0.w, l361\n"
"    \n"
"    dcl_literal l362, 0x00800000, 0x00800000, 0x00800000, 0x00800000\n"
"    ior r2._y__, r2.z, l362\n"
"    \n"
"    dcl_literal l363, 0x00000096, 0x00000096, 0x00000096, 0x00000096\n"
"    iadd r0.___w, l363, r0.w_neg(xyzw)\n"
"    \n"
"    dcl_literal l364, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ilt r2.__z_, l364, r0.w\n"
"    \n"
"    dcl_literal l365, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"    cmov_logical r0.___w, r2.z, l365, r0.w\n"
"    \n"
"    dcl_literal l366, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.__z_, l366, r0.w\n"
"    ishr r2.___w, r2.y, r0.w\n"
"    inegate r0.___w, r0.w\n"
"    \n"
"    dcl_literal l367, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishl r0.___w, r0.w, l367\n"
"    iadd r0.___w, r2.y, r0.w\n"
"    cmov_logical r0.___w, r2.z, r2.w, r0.w\n"
"else\n"
"    \n"
"    dcl_literal l368, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"    and r2._y__, r0.z, l368\n"
"    \n"
"    dcl_literal l369, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"    ishr r1.___w, r1.w, l369\n"
"    \n"
"    dcl_literal l370, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000\n"
"    iadd r2._y__, r2.y, l370\n"
"    \n"
"    dcl_literal l371, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99\n"
"    iadd r1.___w, r1.w, l371\n"
"    \n"
"    dcl_literal l372, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F\n"
"    ilt r1.___w, l372, r1.w\n"
"    \n"
"    dcl_literal l373, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"    cmov_logical r0.___w, r1.w, l373, r2.y\n"
"endif\n"
"ior r0.___w, r1.z, r0.w\n"
"cmov_logical r0.__z_, r2.x, r0.w, r0.z\n"
"\n"
"dcl_literal l374, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.___w, l374, r0.x\n"
"and r0.___w, r5.z, r0.w\n"
"cmov_logical r0.__z_, r0.w, r0.x, r0.z\n"
"\n"
"dcl_literal l375, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"ilt r0._y__, l375, r0.y\n"
"and r0.___w, r5.z, r1.x\n"
"ior r0._y__, r0.y, r0.w\n"
"\n"
"dcl_literal l376, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000\n"
"ior r0.___w, r0.x, l376\n"
"cmov_logical r0._y__, r0.y, r0.w, r0.z\n"
"and r0.__z_, r1.y, r3.x\n"
"\n"
"dcl_literal l377, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000\n"
"cmov_logical r0._y__, r0.z, l377, r0.y\n"
"\n"
"dcl_literal l378, 0x3F800000, 0x00000000, 0x40000000, 0x00000000\n"
"ieq r0.x_z_, r0.x, l378\n"
"ior r0.x___, r0.z, r0.x\n"
"\n"
"dcl_literal l379, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"cmov_logical r0.x___, r0.x, l379, r0.y\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__trunc_f32",
"mdef(457)_out(1)_in(1)\n"
"mov r0, in0\n"
"round_z r0.x___, r0.x\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uabs_diff_u16",
"mdef(458)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"imax r0.___w, r0.w_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l1, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.x___, r0.w, l1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uabs_diff_u32",
"mdef(459)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umin r0.___w, r0.y, r0.x\n"
"umax r1.x___, r0.y, r0.x\n"
"iadd r0.x___, r1.x, r0.w_neg(xyzw)\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uabs_diff_u8",
"mdef(460)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"imax r0.___w, r0.w_neg(xyzw), r0.w\n"
"\n"
"dcl_literal l0, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.x___, r0.w, l0\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uabs_u16",
"mdef(461)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uabs_u32",
"mdef(462)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uabs_u8",
"mdef(463)_out(1)_in(1)\n"
"mov r0, in0\n"
"mov r0, r0\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uadd_sat_i32",
"mdef(464)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"ult r1.x___, r0.w, r0.x\n"
"\n"
"dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r0.x___, r1.x, l10, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uadd_sat_u16",
"mdef(465)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l5, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"umin r0.x___, r0.w, l5\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uadd_sat_u8",
"mdef(466)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"umin r0.x___, r1.x, l2\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uall_u16",
"mdef(467)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000\n"
"and r0.__z_, r0.x, l3\n"
"\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l4, l5\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uall_u32",
"mdef(468)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r0.x___, r0.x, l6\n"
"\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l7, l8\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uall_u8",
"mdef(469)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l1, l2\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uany_i16",
"mdef(470)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000\n"
"and r0.__z_, r0.x, l3\n"
"\n"
"dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l4, l5\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uany_i32",
"mdef(471)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"and r0.x___, r0.x, l6\n"
"\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l7, l8\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uany_u8",
"mdef(472)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"\n"
"dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.z, l1, l2\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uclz_u16",
"mdef(473)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l10, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.x, l10\n"
"\n"
"dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l11\n"
"\n"
"dcl_literal l12, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l12\n"
"\n"
"dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l13\n"
"\n"
"dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l14, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l15\n"
"\n"
"dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l16\n"
"\n"
"dcl_literal l17, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.___w, r0.w, l17\n"
"\n"
"dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.x___, r0.z, r0.w, l18\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uclz_u32",
"mdef(474)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l19, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r0.__z_, r0.x, l19\n"
"\n"
"dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.z, l20\n"
"\n"
"dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l21\n"
"\n"
"dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l22\n"
"\n"
"dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l23\n"
"\n"
"dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l24, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l25\n"
"\n"
"dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l26\n"
"\n"
"dcl_literal l27, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.___w, r0.w, l27\n"
"\n"
"dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.__z_, r0.z, r0.w, l28\n"
"\n"
"dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.___w, r0.x, l29\n"
"\n"
"dcl_literal l30, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1.x___, r0.w, l30\n"
"\n"
"dcl_literal l31, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.x___, r1.x, l31\n"
"\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l32\n"
"\n"
"dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1.x___, l33, r1.x_neg(xyzw)\n"
"\n"
"dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l34\n"
"\n"
"dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1.x___, r1.x, l35\n"
"\n"
"dcl_literal l36, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r1.x___, r1.x, l36\n"
"\n"
"dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.___w, r0.w, r1.x, l37\n"
"\n"
"dcl_literal l38, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ieq r1.x___, r0.z, l38\n"
"iadd r0.___w, r0.z, r0.w\n"
"cmov_logical r0.x___, r1.x, r0.w, r0.z\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__uclz_u8",
"mdef(475)_out(1)_in(1)\n"
"mov r0, in0\n"
"\n"
"\n"
"dcl_literal l0, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.x, l0\n"
"\n"
"dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l1\n"
"\n"
"dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l2\n"
"\n"
"dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l3\n"
"\n"
"dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l4, r0.w_neg(xyzw)\n"
"\n"
"dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l5\n"
"\n"
"dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l6\n"
"\n"
"dcl_literal l7, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.___w, r0.w, l7\n"
"\n"
"dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"cmov_logical r0.__z_, r0.z, r0.w, l8\n"
"\n"
"dcl_literal l9, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8\n"
"iadd r0.x___, r0.z, l9\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__udiv_i16",
"mdef(476)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l21, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l21\n"
"dcl_literal l22, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l22\n"
"udiv r0.___w, r1.x, r0.w\n"
"dcl_literal l23, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.___w, r0.w, l23\n"
"dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r1.y, r0.w, l24\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__udiv_i32",
"mdef(477)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"udiv r0.x, r0.x, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__udiv_i64",
"mdef(478)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0.__zw, r1.yyxy\n"
"ieq r1.xy__, r0.yxyy, r0.wzww\n"
"ult r1.__zw, r0.yyyx, r0.wwwz\n"
"and r1.___w, r1.x, r1.w\n"
"ior r1.___w, r1.z, r1.w\n"
"dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.___w, r1.w, l1, l2\n"
"and r1._y__, r1.y, r1.x\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.y, l3, r1.w\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r2.xy__, r0.wzww, l4\n"
"and r1.___w, r2.y, r2.x\n"
"dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.__z_, r1.w, l5, r0.z\n"
"dcl_literal l6, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r2._yz_, r0.wwyw, l6\n"
"dcl_literal l7, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r2.___w, r0.x, l7\n"
"dcl_literal l8, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.xy__, r0.wyww, l8\n"
"dcl_literal l9, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.__z_, r0.z, l9\n"
"ior r3.x___, r3.x, r3.z\n"
"dcl_literal l10, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3.x___, r3.x, l10\n"
"dcl_literal l11, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.__z_, r0.z, l11\n"
"dcl_literal l12, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000\n"
"ior r4.xy__, r2.yzyy, l12\n"
"dcl_literal l13, 0xBF800000, 0xBF800000, 0x00000000, 0x00000000\n"
"add r4.xy__, r4.xyxx, l13\n"
"dcl_literal l14, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"and r4.xy__, r4.xyxx, l14\n"
"dcl_literal l15, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000\n"
"iadd r4.xy__, l15, r4.xyxx_neg(xyzw)\n"
"dcl_literal l16, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000\n"
"and r4.xy__, r4.xyxx, l16\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.xy__, r4.xyxx, l17\n"
"dcl_literal l18, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000\n"
"iadd r4.xy__, r4.xyxx, l18\n"
"dcl_literal l19, 0x00000000, 0x00000017, 0x00000017, 0x00000000\n"
"cmov_logical r2._yz_, r2.yyzy, r4.xxyx, l19\n"
"dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.x, l20\n"
"dcl_literal l21, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l21\n"
"dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l22\n"
"dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l23, r3.w_neg(xyzw)\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l24\n"
"dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l25\n"
"dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l26\n"
"dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.x___, r3.x, r3.w, l27\n"
"dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.z, l28\n"
"dcl_literal l29, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l29\n"
"dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l30\n"
"dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l31, r3.w_neg(xyzw)\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l32\n"
"dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l33\n"
"dcl_literal l34, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.___w, r3.w, l34\n"
"dcl_literal l35, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.__z_, r3.z, r3.w, l35\n"
"dcl_literal l36, 0x00000017, 0x00000017, 0x00000000, 0x00000000\n"
"ieq r4.xy__, r2.yzyy, l36\n"
"iadd r3.x___, r2.y, r3.x\n"
"cmov_logical r2._y__, r4.x, r3.x, r2.y\n"
"dcl_literal l37, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.___w, r3.x, l37\n"
"iadd r3.x___, r3.x, r3.z\n"
"cmov_logical r2._y__, r3.w, r3.x, r2.y\n"
"dcl_literal l38, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ige r3.x___, r2.y, l38\n"
"dcl_literal l39, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3.__z_, r2.y, l39\n"
"dcl_literal l40, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F\n"
"cmov_logical r3.x___, r3.x, r3.z, l40\n"
"ult r3.__z_, r0.x, r0.z\n"
"and r3.__z_, r1.x, r3.z\n"
"ior r1.__z_, r1.z, r3.z\n"
"dcl_literal l41, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.__z_, r1.z, l41, l42\n"
"ieq r3.__z_, r0.x, r0.z\n"
"and r1.x___, r1.x, r3.z\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.x___, r1.x, l43, r1.z\n"
"ior r1.__z_, r2.w, r3.y\n"
"dcl_literal l44, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.__z_, r1.z, l44\n"
"dcl_literal l45, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r2.___w, r0.x, l45\n"
"dcl_literal l46, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3._y__, r1.z, l46\n"
"dcl_literal l47, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3._y__, r3.y, l47\n"
"dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l48\n"
"dcl_literal l49, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3._y__, l49, r3.y_neg(xyzw)\n"
"dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l50\n"
"dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3._y__, r3.y, l51\n"
"dcl_literal l52, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3._y__, r3.y, l52\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r1.__z_, r1.z, r3.y, l53\n"
"dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3._y__, r2.w, l54\n"
"dcl_literal l55, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3._y__, r3.y, l55\n"
"dcl_literal l56, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l56\n"
"dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3._y__, l57, r3.y_neg(xyzw)\n"
"dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3._y__, r3.y, l58\n"
"dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3._y__, r3.y, l59\n"
"dcl_literal l60, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3._y__, r3.y, l60\n"
"dcl_literal l61, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r2.___w, r2.w, r3.y, l61\n"
"iadd r1.__z_, r2.z, r1.z\n"
"cmov_logical r2.__z_, r4.y, r1.z, r2.z\n"
"dcl_literal l62, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3._y__, r1.z, l62\n"
"iadd r1.__z_, r1.z, r2.w\n"
"cmov_logical r1.__z_, r3.y, r1.z, r2.z\n"
"ilt r2.__z_, r1.z, r2.y\n"
"ieq r2.___w, r2.y, r1.z\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r1.x, l63\n"
"and r1.x___, r2.w, r1.x\n"
"ior r1.x___, r2.z, r1.x\n"
"iadd r2.__z_, r2.y, r1.z_neg(xyzw)\n"
"dcl_literal l64, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.x___, r1.x, r2.z, l64\n"
"ilt r2.__z_, r3.x, r1.x\n"
"iadd r2.___w, r1.x, r3.x_neg(xyzw)\n"
"and r2.__z_, r2.z, r2.w\n"
"dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r2.___w, r1.x, l65\n"
"dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r2.w, l66, r2.z\n"
"dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r1.x, l67\n"
"if_logicalnz r1.x\n"
"   \n"
"    dcl_literal l68, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2.___w, r2.z, l68\n"
"   \n"
"    dcl_literal l69, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3._y__, r2.z, l69\n"
"    cmov_logical r3._y__, r2.w, r3.y, r2.z\n"
"   \n"
"    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.__z_, r2.z, l70\n"
"   \n"
"    dcl_literal l71, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.___w, l71, r3.y_neg(xyzw)\n"
"    ushr r3.___w, r0.z, r3.w\n"
"    ishl r3._y__, r0.z, r3.y\n"
"    ishl r3.__z_, r0.w, r3.z\n"
"    ior r3.__z_, r3.w, r3.z\n"
"    cmov_logical r3.__z_, r2.w, r0.z, r3.z\n"
"   \n"
"    dcl_literal l72, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.___w, r2.w, l72, r3.y\n"
"    cmov_logical r3._y__, r2.z, r3.z, r0.w\n"
"    cmov_logical r2.___w, r2.z, r2.w, r0.z\n"
"   \n"
"    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.__z_, r1.z, l73\n"
"   \n"
"    dcl_literal l74, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.___w, r1.z, l74\n"
"    cmov_logical r3.___w, r3.z, r3.w, r1.z\n"
"   \n"
"    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.x___, r1.z, l75\n"
"   \n"
"    dcl_literal l76, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.___w, l76, r3.w_neg(xyzw)\n"
"    ushr r4._y__, r0.x, r3.w\n"
"    ishl r4.__z_, r0.y, r4.x\n"
"    ior r4._y__, r4.y, r4.z\n"
"    cmov_logical r4._y__, r3.z, r0.x, r4.y\n"
"    cmov_logical r4._y__, r1.z, r4.y, r0.y\n"
"    ushr r3.___w, r2.w, r3.w\n"
"    ishl r4.x___, r3.y, r4.x\n"
"    ior r3.___w, r3.w, r4.x\n"
"    cmov_logical r3.__z_, r3.z, r2.w, r3.w\n"
"    cmov_logical r1.__z_, r1.z, r3.z, r3.y\n"
"    udiv r3.__z_, r4.y, r1.z\n"
"    umul r3.___w, r3.z, r1.z\n"
"    ilt r4.x___, r4.y, r3.w\n"
"    iadd r4.__z_, r3.w, r4.y_neg(xyzw)\n"
"    iadd r4.__z_, r4.z, r1.z\n"
"   \n"
"    dcl_literal l77, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.__z_, r4.z, l77\n"
"    iadd r3.___w, r4.y, r3.w_neg(xyzw)\n"
"    cmov_logical r3.___w, r4.x, r4.z, r3.w\n"
"    udiv r1.__z_, r3.w, r1.z\n"
"    iadd r3.___w, r3.z, r1.z_neg(xyzw)\n"
"    iadd r1.__z_, r3.z, r1.z\n"
"    cmov_logical r1.__z_, r4.x, r3.w, r1.z\n"
"   \n"
"    dcl_literal l78, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r2.w, l78\n"
"   \n"
"    dcl_literal l79, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.___w, r2.w, l79\n"
"   \n"
"    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r1.z, l80\n"
"   \n"
"    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r1.z, l81\n"
"    umul r4.__z_, r3.w, r4.y\n"
"    umul r3.___w, r3.w, r4.x\n"
"    umul r4.___w, r3.z, r4.y\n"
"    umul r3.__z_, r3.z, r4.x\n"
"   \n"
"    dcl_literal l82, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r3.z, l82\n"
"   \n"
"    dcl_literal l83, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r4.w, l83\n"
"    iadd r5.x___, r5.x, r5.y\n"
"    iadd r3.___w, r3.w, r5.x\n"
"   \n"
"    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r3.w, l84\n"
"    iadd r4.__z_, r4.z, r5.x\n"
"   \n"
"    dcl_literal l85, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r4.w, l85\n"
"    iadd r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3.___w, r3.w, l86\n"
"   \n"
"    dcl_literal l87, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r3.z, l87\n"
"    ior r3.__z_, r3.w, r3.z\n"
"   \n"
"    dcl_literal l88, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.y, l88\n"
"   \n"
"    dcl_literal l89, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.y, l89\n"
"    umul r4.___w, r4.w, r4.x\n"
"    umul r4._y__, r3.w, r4.y\n"
"    umul r3.___w, r3.w, r4.x\n"
"   \n"
"    dcl_literal l90, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r3.w, l90\n"
"   \n"
"    dcl_literal l91, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4._y__, r4.y, l91\n"
"    iadd r4.x___, r4.x, r4.y\n"
"    iadd r4.x___, r4.w, r4.x\n"
"   \n"
"    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r4.x___, r4.x, l92\n"
"   \n"
"    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.w, l93\n"
"    ior r3.___w, r4.x, r3.w\n"
"    iadd r4.x___, r3.w, r4.z\n"
"    ult r3.___w, r4.x, r3.w\n"
"    ult r4._y__, r0.y, r4.x\n"
"    ieq r4.__z_, r0.y, r4.x\n"
"    ult r4.___w, r0.x, r3.z\n"
"    and r4.___w, r4.z, r4.w\n"
"    ior r4._y__, r4.y, r4.w\n"
"   \n"
"    dcl_literal l94, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4._y__, r4.y, l94, l95\n"
"    ieq r4.___w, r0.x, r3.z\n"
"    and r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4._y__, r4.z, l96, r4.y\n"
"   \n"
"    dcl_literal l97, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4._y__, r4.y, l97\n"
"    ior r3.___w, r3.w, r4.y\n"
"   \n"
"    dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4._y__, r1.z, l98\n"
"    cmov_logical r1.__z_, r3.w, r4.y, r1.z\n"
"    iadd r2.___w, r3.z, r2.w_neg(xyzw)\n"
"    ult r4._y__, r3.z, r2.w\n"
"    iadd r4._y__, r4.x, r4.y\n"
"    iadd r3._y__, r4.y, r3.y_neg(xyzw)\n"
"    cmov_logical r3._y__, r3.w, r3.y, r4.x\n"
"    cmov_logical r2.___w, r3.w, r2.w, r3.z\n"
"    iadd r3.___w, r0.x, r2.w_neg(xyzw)\n"
"    ult r2.___w, r0.x, r3.w\n"
"    iadd r2.___w, r0.y, r2.w\n"
"    iadd r3.__z_, r2.w, r3.y_neg(xyzw)\n"
"else\n"
"    mov r3.__zw, r0.yyyx\n"
"   \n"
"    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r1.__z_, l99\n"
"endif\n"
"ult r2.___w, r3.z, r0.w\n"
"ieq r3._y__, r3.z, r0.w\n"
"ult r4.x___, r3.w, r0.z\n"
"and r4.x___, r3.y, r4.x\n"
"ior r2.___w, r2.w, r4.x\n"
"dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l101, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2.___w, r2.w, l100, l101\n"
"ieq r4.x___, r3.w, r0.z\n"
"and r3._y__, r3.y, r4.x\n"
"dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r3.y, l102, r2.w\n"
"dcl_literal l103, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3._y__, r3.z, l103\n"
"dcl_literal l104, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r4.x___, r3.z, l104\n"
"dcl_literal l105, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r4._y__, r3.w, l105\n"
"ior r3._y__, r3.y, r4.y\n"
"dcl_literal l106, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3._y__, r3.y, l106\n"
"dcl_literal l107, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r4._y__, r3.w, l107\n"
"dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.__z_, r4.x, l108\n"
"dcl_literal l109, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.__z_, r4.z, l109\n"
"dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.__z_, r4.z, l110\n"
"dcl_literal l111, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.__z_, l111, r4.z_neg(xyzw)\n"
"dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.__z_, r4.z, l112\n"
"dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.__z_, r4.z, l113\n"
"dcl_literal l114, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.__z_, r4.z, l114\n"
"dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r4.x___, r4.x, r4.z, l115\n"
"dcl_literal l116, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.__z_, r3.y, l116\n"
"dcl_literal l117, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.__z_, r4.z, l117\n"
"dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.__z_, r4.z, l118\n"
"dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.__z_, l119, r4.z_neg(xyzw)\n"
"dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.__z_, r4.z, l120\n"
"dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.__z_, r4.z, l121\n"
"dcl_literal l122, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r4.__z_, r4.z, l122\n"
"dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r4.z, l123\n"
"dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r4.__z_, r4.y, l124\n"
"dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r4.__z_, r4.z, l125\n"
"dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.__z_, r4.z, l126\n"
"dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r4.__z_, l127, r4.z_neg(xyzw)\n"
"dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r4.__z_, r4.z, l128\n"
"dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r4.__z_, r4.z, l129\n"
"dcl_literal l130, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r4.__z_, r4.z, l130\n"
"dcl_literal l131, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r4._y__, r4.y, r4.z, l131\n"
"dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r4.__z_, r4.x, l132\n"
"iadd r3._y__, r4.x, r3.y\n"
"cmov_logical r4.x___, r4.z, r3.y, r4.x\n"
"dcl_literal l133, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r4.__z_, r3.y, l133\n"
"iadd r3._y__, r3.y, r4.y\n"
"cmov_logical r3._y__, r4.z, r3.y, r4.x\n"
"ilt r4.x___, r3.y, r2.y\n"
"ieq r4._y__, r2.y, r3.y\n"
"dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.___w, r2.w, l134\n"
"and r2.___w, r4.y, r2.w\n"
"ior r2.___w, r4.x, r2.w\n"
"and r1.x___, r1.x, r2.w\n"
"iadd r2.___w, r2.y, r3.y_neg(xyzw)\n"
"dcl_literal l135, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.x___, r1.x, r2.w, l135\n"
"ilt r2.___w, r3.x, r1.x\n"
"iadd r4.x___, r1.x, r3.x_neg(xyzw)\n"
"and r2.___w, r2.w, r4.x\n"
"dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.x___, r1.x, l136\n"
"dcl_literal l137, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r4.x, l137, r2.w\n"
"dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r1.x, l138\n"
"if_logicalnz r1.x\n"
"   \n"
"    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r4.x___, r2.w, l139\n"
"   \n"
"    dcl_literal l140, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4._y__, r2.w, l140\n"
"    cmov_logical r4._y__, r4.x, r4.y, r2.w\n"
"   \n"
"    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.__z_, r2.w, l141\n"
"   \n"
"    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.___w, l142, r4.y_neg(xyzw)\n"
"    ushr r4.___w, r0.z, r4.w\n"
"    ishl r4._y__, r0.z, r4.y\n"
"    ishl r4.__z_, r0.w, r4.z\n"
"    ior r4.__z_, r4.w, r4.z\n"
"    cmov_logical r4.__z_, r4.x, r0.z, r4.z\n"
"   \n"
"    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.x___, r4.x, l143, r4.y\n"
"    cmov_logical r4.xy__, r2.w, r4.xzxx, r0.zwzz\n"
"   \n"
"    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r4.__z_, r3.y, l144\n"
"   \n"
"    dcl_literal l145, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4.___w, r3.y, l145\n"
"    cmov_logical r4.___w, r4.z, r4.w, r3.y\n"
"   \n"
"    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.x___, r3.y, l146\n"
"   \n"
"    dcl_literal l147, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.___w, l147, r4.w_neg(xyzw)\n"
"    ushr r5._y__, r3.w, r4.w\n"
"    ishl r5.__z_, r3.z, r5.x\n"
"    ior r5._y__, r5.y, r5.z\n"
"    cmov_logical r5._y__, r4.z, r3.w, r5.y\n"
"    cmov_logical r5._y__, r3.y, r5.y, r3.z\n"
"    ushr r4.___w, r4.x, r4.w\n"
"    ishl r5.x___, r4.y, r5.x\n"
"    ior r4.___w, r4.w, r5.x\n"
"    cmov_logical r4.__z_, r4.z, r4.x, r4.w\n"
"    cmov_logical r3._y__, r3.y, r4.z, r4.y\n"
"    udiv r4.__z_, r5.y, r3.y\n"
"    umul r4.___w, r4.z, r3.y\n"
"    ilt r5.x___, r5.y, r4.w\n"
"    iadd r5.__z_, r4.w, r5.y_neg(xyzw)\n"
"    iadd r5.__z_, r5.z, r3.y\n"
"   \n"
"    dcl_literal l148, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r5.__z_, r5.z, l148\n"
"    iadd r4.___w, r5.y, r4.w_neg(xyzw)\n"
"    cmov_logical r4.___w, r5.x, r5.z, r4.w\n"
"    udiv r3._y__, r4.w, r3.y\n"
"    iadd r4.___w, r4.z, r3.y_neg(xyzw)\n"
"    iadd r3._y__, r4.z, r3.y\n"
"    cmov_logical r3._y__, r5.x, r4.w, r3.y\n"
"   \n"
"    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r4.x, l149\n"
"   \n"
"    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r4.x, l150\n"
"   \n"
"    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r3.y, l151\n"
"   \n"
"    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5._y__, r3.y, l152\n"
"    umul r5.__z_, r4.w, r5.y\n"
"    umul r4.___w, r4.w, r5.x\n"
"    umul r5.___w, r4.z, r5.y\n"
"    umul r4.__z_, r4.z, r5.x\n"
"   \n"
"    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.x___, r4.z, l153\n"
"   \n"
"    dcl_literal l154, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6._y__, r5.w, l154\n"
"    iadd r6.x___, r6.x, r6.y\n"
"    iadd r4.___w, r4.w, r6.x\n"
"   \n"
"    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.x___, r4.w, l155\n"
"    iadd r5.__z_, r5.z, r6.x\n"
"   \n"
"    dcl_literal l156, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r5.w, l156\n"
"    iadd r5.__z_, r5.z, r5.w\n"
"   \n"
"    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r4.___w, r4.w, l157\n"
"   \n"
"    dcl_literal l158, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r4.z, l158\n"
"    ior r4.__z_, r4.w, r4.z\n"
"   \n"
"    dcl_literal l159, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.___w, r4.y, l159\n"
"   \n"
"    dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r4.y, l160\n"
"    umul r5.___w, r5.w, r5.x\n"
"    umul r5._y__, r4.w, r5.y\n"
"    umul r4.___w, r4.w, r5.x\n"
"   \n"
"    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r4.w, l161\n"
"   \n"
"    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r5.y, l162\n"
"    iadd r5.x___, r5.x, r5.y\n"
"    iadd r5.x___, r5.w, r5.x\n"
"   \n"
"    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r5.x___, r5.x, l163\n"
"   \n"
"    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.___w, r4.w, l164\n"
"    ior r4.___w, r5.x, r4.w\n"
"    iadd r5.x___, r4.w, r5.z\n"
"    ult r4.___w, r5.x, r4.w\n"
"    ult r5._y__, r3.z, r5.x\n"
"    ieq r5.__z_, r3.z, r5.x\n"
"    ult r5.___w, r3.w, r4.z\n"
"    and r5.___w, r5.z, r5.w\n"
"    ior r5._y__, r5.y, r5.w\n"
"   \n"
"    dcl_literal l165, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l166, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r5._y__, r5.y, l165, l166\n"
"    ieq r5.___w, r3.w, r4.z\n"
"    and r5.__z_, r5.z, r5.w\n"
"   \n"
"    dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r5._y__, r5.z, l167, r5.y\n"
"   \n"
"    dcl_literal l168, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5._y__, r5.y, l168\n"
"    ior r4.___w, r4.w, r5.y\n"
"   \n"
"    dcl_literal l169, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r5._y__, r3.y, l169\n"
"    cmov_logical r3._y__, r4.w, r5.y, r3.y\n"
"    iadd r4.x___, r4.z, r4.x_neg(xyzw)\n"
"    ult r5._y__, r4.z, r4.x\n"
"    iadd r5._y__, r5.x, r5.y\n"
"    iadd r4._y__, r5.y, r4.y_neg(xyzw)\n"
"    cmov_logical r4._y__, r4.w, r4.y, r5.x\n"
"    cmov_logical r4.x___, r4.w, r4.x, r4.z\n"
"    iadd r4.x___, r3.w, r4.x_neg(xyzw)\n"
"    ult r4.__z_, r3.w, r4.x\n"
"    iadd r4.__z_, r3.z, r4.z\n"
"    iadd r3.__z_, r4.z, r4.y_neg(xyzw)\n"
"    mov r3.___w, r4.x\n"
"else\n"
"   \n"
"    dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r3._y__, l170\n"
"endif\n"
"ult r4.x___, r3.z, r0.w\n"
"ieq r4._y__, r3.z, r0.w\n"
"ult r4.__z_, r3.w, r0.z\n"
"and r4.__z_, r4.y, r4.z\n"
"ior r4.x___, r4.x, r4.z\n"
"dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l172, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r4.x___, r4.x, l171, l172\n"
"ieq r4.__z_, r3.w, r0.z\n"
"and r4._y__, r4.y, r4.z\n"
"dcl_literal l173, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.x___, r4.y, l173, r4.x\n"
"dcl_literal l174, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r4._y__, r3.z, l174\n"
"dcl_literal l175, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r4.__z_, r3.z, l175\n"
"dcl_literal l176, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r4.___w, r3.w, l176\n"
"ior r4._y__, r4.y, r4.w\n"
"dcl_literal l177, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r4._y__, r4.y, l177\n"
"dcl_literal l178, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r4.___w, r3.w, l178\n"
"dcl_literal l179, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.x___, r4.z, l179\n"
"dcl_literal l180, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.x___, r5.x, l180\n"
"dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l181\n"
"dcl_literal l182, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.x___, l182, r5.x_neg(xyzw)\n"
"dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l183\n"
"dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.x___, r5.x, l184\n"
"dcl_literal l185, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.x___, r5.x, l185\n"
"dcl_literal l186, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r4.__z_, r4.z, r5.x, l186\n"
"dcl_literal l187, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.x___, r4.y, l187\n"
"dcl_literal l188, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.x___, r5.x, l188\n"
"dcl_literal l189, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l189\n"
"dcl_literal l190, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.x___, l190, r5.x_neg(xyzw)\n"
"dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l191\n"
"dcl_literal l192, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.x___, r5.x, l192\n"
"dcl_literal l193, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.x___, r5.x, l193\n"
"dcl_literal l194, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r4._y__, r4.y, r5.x, l194\n"
"dcl_literal l195, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.x___, r4.w, l195\n"
"dcl_literal l196, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.x___, r5.x, l196\n"
"dcl_literal l197, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l197\n"
"dcl_literal l198, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.x___, l198, r5.x_neg(xyzw)\n"
"dcl_literal l199, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.x___, r5.x, l199\n"
"dcl_literal l200, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.x___, r5.x, l200\n"
"dcl_literal l201, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r5.x___, r5.x, l201\n"
"dcl_literal l202, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r4.___w, r4.w, r5.x, l202\n"
"dcl_literal l203, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r5.x___, r4.z, l203\n"
"iadd r4._y__, r4.z, r4.y\n"
"cmov_logical r4.__z_, r5.x, r4.y, r4.z\n"
"dcl_literal l204, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r5.x___, r4.y, l204\n"
"iadd r4._y__, r4.y, r4.w\n"
"cmov_logical r4._y__, r5.x, r4.y, r4.z\n"
"ilt r4.__z_, r4.y, r2.y\n"
"ieq r4.___w, r2.y, r4.y\n"
"dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r4.x___, r4.x, l205\n"
"and r4.x___, r4.w, r4.x\n"
"ior r4.x___, r4.z, r4.x\n"
"and r1.x___, r1.x, r4.x\n"
"iadd r4.x___, r2.y, r4.y_neg(xyzw)\n"
"dcl_literal l206, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.x___, r1.x, r4.x, l206\n"
"ilt r4.x___, r3.x, r1.x\n"
"iadd r4.__z_, r1.x, r3.x_neg(xyzw)\n"
"and r4.x___, r4.x, r4.z\n"
"dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r4.__z_, r1.x, l207\n"
"dcl_literal l208, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.x___, r4.z, l208, r4.x\n"
"dcl_literal l209, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r1.x, l209\n"
"if_logicalnz r1.x\n"
"   \n"
"    dcl_literal l210, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r4.__z_, r4.x, l210\n"
"   \n"
"    dcl_literal l211, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4.___w, r4.x, l211\n"
"    cmov_logical r4.___w, r4.z, r4.w, r4.x\n"
"   \n"
"    dcl_literal l212, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.x___, r4.x, l212\n"
"   \n"
"    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5._y__, l213, r4.w_neg(xyzw)\n"
"    ushr r5._y__, r0.z, r5.y\n"
"    ishl r4.___w, r0.z, r4.w\n"
"    ishl r5.x___, r0.w, r5.x\n"
"    ior r5.x___, r5.y, r5.x\n"
"    cmov_logical r5.x___, r4.z, r0.z, r5.x\n"
"   \n"
"    dcl_literal l214, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.__z_, r4.z, l214, r4.w\n"
"    cmov_logical r4.___w, r4.x, r5.x, r0.w\n"
"    cmov_logical r4.__z_, r4.x, r4.z, r0.z\n"
"   \n"
"    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r5.x___, r4.y, l215\n"
"   \n"
"    dcl_literal l216, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r5._y__, r4.y, l216\n"
"    cmov_logical r5._y__, r5.x, r5.y, r4.y\n"
"   \n"
"    dcl_literal l217, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.__z_, r4.y, l217\n"
"   \n"
"    dcl_literal l218, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5._y__, l218, r5.y_neg(xyzw)\n"
"    ushr r5.___w, r3.w, r5.y\n"
"    ishl r6.x___, r3.z, r5.z\n"
"    ior r5.___w, r5.w, r6.x\n"
"    cmov_logical r5.___w, r5.x, r3.w, r5.w\n"
"    cmov_logical r5.___w, r4.y, r5.w, r3.z\n"
"    ushr r5._y__, r4.z, r5.y\n"
"    ishl r5.__z_, r4.w, r5.z\n"
"    ior r5._y__, r5.y, r5.z\n"
"    cmov_logical r5.x___, r5.x, r4.z, r5.y\n"
"    cmov_logical r4._y__, r4.y, r5.x, r4.w\n"
"    udiv r5.x___, r5.w, r4.y\n"
"    umul r5._y__, r5.x, r4.y\n"
"    ilt r5.__z_, r5.w, r5.y\n"
"    iadd r6.x___, r5.y, r5.w_neg(xyzw)\n"
"    iadd r6.x___, r6.x, r4.y\n"
"   \n"
"    dcl_literal l219, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r6.x___, r6.x, l219\n"
"    iadd r5._y__, r5.w, r5.y_neg(xyzw)\n"
"    cmov_logical r5._y__, r5.z, r6.x, r5.y\n"
"    udiv r4._y__, r5.y, r4.y\n"
"    iadd r5._y__, r5.x, r4.y_neg(xyzw)\n"
"    iadd r4._y__, r5.x, r4.y\n"
"    cmov_logical r4._y__, r5.z, r5.y, r4.y\n"
"   \n"
"    dcl_literal l220, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r4.z, l220\n"
"   \n"
"    dcl_literal l221, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5._y__, r4.z, l221\n"
"   \n"
"    dcl_literal l222, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.__z_, r4.y, l222\n"
"   \n"
"    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r4.y, l223\n"
"    umul r6.x___, r5.y, r5.w\n"
"    umul r5._y__, r5.y, r5.z\n"
"    umul r6._y__, r5.x, r5.w\n"
"    umul r5.x___, r5.x, r5.z\n"
"   \n"
"    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.__z_, r5.x, l224\n"
"   \n"
"    dcl_literal l225, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6.___w, r6.y, l225\n"
"    iadd r6.__z_, r6.z, r6.w\n"
"    iadd r5._y__, r5.y, r6.z\n"
"   \n"
"    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6.__z_, r5.y, l226\n"
"    iadd r6.x___, r6.x, r6.z\n"
"   \n"
"    dcl_literal l227, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r6.y, l227\n"
"    iadd r6.x___, r6.x, r6.y\n"
"   \n"
"    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r5._y__, r5.y, l228\n"
"   \n"
"    dcl_literal l229, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r5.x, l229\n"
"    ior r5.x___, r5.y, r5.x\n"
"   \n"
"    dcl_literal l230, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r4.w, l230\n"
"   \n"
"    dcl_literal l231, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r6._y__, r4.w, l231\n"
"    umul r6._y__, r6.y, r5.z\n"
"    umul r5._y_w, r5.y, r5.zzzw\n"
"   \n"
"    dcl_literal l232, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.__z_, r5.y, l232\n"
"   \n"
"    dcl_literal l233, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.___w, r5.w, l233\n"
"    iadd r5.__z_, r5.z, r5.w\n"
"    iadd r5.__z_, r6.y, r5.z\n"
"   \n"
"    dcl_literal l234, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r5.__z_, r5.z, l234\n"
"   \n"
"    dcl_literal l235, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5._y__, r5.y, l235\n"
"    ior r5._y__, r5.z, r5.y\n"
"    iadd r5.__z_, r5.y, r6.x\n"
"    ult r5._y__, r5.z, r5.y\n"
"    ult r5.___w, r3.z, r5.z\n"
"    ieq r6.x___, r3.z, r5.z\n"
"    ult r6._y__, r3.w, r5.x\n"
"    and r6._y__, r6.x, r6.y\n"
"    ior r5.___w, r5.w, r6.y\n"
"   \n"
"    dcl_literal l236, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l237, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r5.___w, r5.w, l236, l237\n"
"    ieq r6._y__, r3.w, r5.x\n"
"    and r6.x___, r6.x, r6.y\n"
"   \n"
"    dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r5.___w, r6.x, l238, r5.w\n"
"   \n"
"    dcl_literal l239, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r5.___w, r5.w, l239\n"
"    ior r5._y__, r5.y, r5.w\n"
"   \n"
"    dcl_literal l240, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r5.___w, r4.y, l240\n"
"    cmov_logical r4._y__, r5.y, r5.w, r4.y\n"
"    iadd r4.__z_, r5.x, r4.z_neg(xyzw)\n"
"    ult r5.___w, r5.x, r4.z\n"
"    iadd r5.___w, r5.z, r5.w\n"
"    iadd r4.___w, r5.w, r4.w_neg(xyzw)\n"
"    cmov_logical r4.__zw, r5.y, r4.zzzw, r5.xxxz\n"
"    iadd r4.__z_, r3.w, r4.z_neg(xyzw)\n"
"    ult r5.x___, r3.w, r4.z\n"
"    iadd r5.x___, r3.z, r5.x\n"
"    iadd r3.__z_, r5.x, r4.w_neg(xyzw)\n"
"    mov r3.___w, r4.z\n"
"else\n"
"   \n"
"    dcl_literal l241, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r4._y__, l241\n"
"endif\n"
"ult r4.__z_, r3.z, r0.w\n"
"ieq r4.___w, r3.z, r0.w\n"
"ult r5.x___, r3.w, r0.z\n"
"and r5.x___, r4.w, r5.x\n"
"ior r4.__z_, r4.z, r5.x\n"
"dcl_literal l242, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l243, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r4.__z_, r4.z, l242, l243\n"
"ieq r5.x___, r3.w, r0.z\n"
"and r4.___w, r4.w, r5.x\n"
"dcl_literal l244, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r4.__z_, r4.w, l244, r4.z\n"
"dcl_literal l245, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r4.___w, r3.z, l245\n"
"dcl_literal l246, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r5.x___, r3.z, l246\n"
"dcl_literal l247, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r5._y__, r3.w, l247\n"
"ior r4.___w, r4.w, r5.y\n"
"dcl_literal l248, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r4.___w, r4.w, l248\n"
"dcl_literal l249, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r5._y__, r3.w, l249\n"
"dcl_literal l250, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.__z_, r5.x, l250\n"
"dcl_literal l251, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.__z_, r5.z, l251\n"
"dcl_literal l252, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l252\n"
"dcl_literal l253, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.__z_, l253, r5.z_neg(xyzw)\n"
"dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l254\n"
"dcl_literal l255, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.__z_, r5.z, l255\n"
"dcl_literal l256, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.__z_, r5.z, l256\n"
"dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r5.x___, r5.x, r5.z, l257\n"
"dcl_literal l258, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.__z_, r4.w, l258\n"
"dcl_literal l259, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.__z_, r5.z, l259\n"
"dcl_literal l260, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l260\n"
"dcl_literal l261, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.__z_, l261, r5.z_neg(xyzw)\n"
"dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l262\n"
"dcl_literal l263, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.__z_, r5.z, l263\n"
"dcl_literal l264, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r5.__z_, r5.z, l264\n"
"dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r4.___w, r4.w, r5.z, l265\n"
"dcl_literal l266, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r5.__z_, r5.y, l266\n"
"dcl_literal l267, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r5.__z_, r5.z, l267\n"
"dcl_literal l268, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l268\n"
"dcl_literal l269, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r5.__z_, l269, r5.z_neg(xyzw)\n"
"dcl_literal l270, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r5.__z_, r5.z, l270\n"
"dcl_literal l271, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r5.__z_, r5.z, l271\n"
"dcl_literal l272, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r5.__z_, r5.z, l272\n"
"dcl_literal l273, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r5._y__, r5.y, r5.z, l273\n"
"dcl_literal l274, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r5.__z_, r5.x, l274\n"
"iadd r4.___w, r5.x, r4.w\n"
"cmov_logical r5.x___, r5.z, r4.w, r5.x\n"
"dcl_literal l275, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r5.__z_, r4.w, l275\n"
"iadd r4.___w, r4.w, r5.y\n"
"cmov_logical r4.___w, r5.z, r4.w, r5.x\n"
"ilt r5.x___, r4.w, r2.y\n"
"ieq r5._y__, r2.y, r4.w\n"
"dcl_literal l276, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r4.__z_, r4.z, l276\n"
"and r4.__z_, r5.y, r4.z\n"
"ior r4.__z_, r5.x, r4.z\n"
"and r1.x___, r1.x, r4.z\n"
"iadd r2._y__, r2.y, r4.w_neg(xyzw)\n"
"dcl_literal l277, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.x___, r1.x, r2.y, l277\n"
"ilt r2._y__, r3.x, r1.x\n"
"iadd r3.x___, r1.x, r3.x_neg(xyzw)\n"
"and r2._y__, r2.y, r3.x\n"
"dcl_literal l278, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r3.x___, r1.x, l278\n"
"dcl_literal l279, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2._y__, r3.x, l279, r2.y\n"
"dcl_literal l280, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r1.x, l280\n"
"if_logicalnz r1.x\n"
"   \n"
"    dcl_literal l281, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r1.x___, r2.y, l281\n"
"   \n"
"    dcl_literal l282, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.x___, r2.y, l282\n"
"    cmov_logical r3.x___, r1.x, r3.x, r2.y\n"
"   \n"
"    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.__z_, r2.y, l283\n"
"   \n"
"    dcl_literal l284, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r5.x___, l284, r3.x_neg(xyzw)\n"
"    ushr r5.x___, r0.z, r5.x\n"
"    ishl r3.x___, r0.z, r3.x\n"
"    ishl r4.__z_, r0.w, r4.z\n"
"    ior r4.__z_, r5.x, r4.z\n"
"    cmov_logical r4.__z_, r1.x, r0.z, r4.z\n"
"   \n"
"    dcl_literal l285, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.x___, r1.x, l285, r3.x\n"
"    cmov_logical r0.___w, r2.y, r4.z, r0.w\n"
"    cmov_logical r1.x___, r2.y, r1.x, r0.z\n"
"   \n"
"    dcl_literal l286, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3.x___, r4.w, l286\n"
"   \n"
"    dcl_literal l287, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r4.__z_, r4.w, l287\n"
"    cmov_logical r4.__z_, r3.x, r4.z, r4.w\n"
"   \n"
"    dcl_literal l288, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r5.x___, r4.w, l288\n"
"   \n"
"    dcl_literal l289, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.__z_, l289, r4.z_neg(xyzw)\n"
"    ushr r5._y__, r3.w, r4.z\n"
"    ishl r5.__z_, r3.z, r5.x\n"
"    ior r5._y__, r5.y, r5.z\n"
"    cmov_logical r5._y__, r3.x, r3.w, r5.y\n"
"    cmov_logical r5._y__, r4.w, r5.y, r3.z\n"
"    ushr r4.__z_, r1.x, r4.z\n"
"    ishl r5.x___, r0.w, r5.x\n"
"    ior r4.__z_, r4.z, r5.x\n"
"    cmov_logical r3.x___, r3.x, r1.x, r4.z\n"
"    cmov_logical r3.x___, r4.w, r3.x, r0.w\n"
"    udiv r4.__z_, r5.y, r3.x\n"
"    umul r4.___w, r4.z, r3.x\n"
"    ilt r5.x___, r5.y, r4.w\n"
"    iadd r5.__z_, r4.w, r5.y_neg(xyzw)\n"
"    iadd r5.__z_, r5.z, r3.x\n"
"   \n"
"    dcl_literal l290, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r5.__z_, r5.z, l290\n"
"    iadd r4.___w, r5.y, r4.w_neg(xyzw)\n"
"    cmov_logical r4.___w, r5.x, r5.z, r4.w\n"
"    udiv r3.x___, r4.w, r3.x\n"
"    iadd r4.___w, r4.z, r3.x_neg(xyzw)\n"
"    iadd r3.x___, r4.z, r3.x\n"
"    cmov_logical r3.x___, r5.x, r4.w, r3.x\n"
"   \n"
"    dcl_literal l291, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r1.x, l291\n"
"   \n"
"    dcl_literal l292, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r1.x___, r1.x, l292\n"
"   \n"
"    dcl_literal l293, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.___w, r3.x, l293\n"
"   \n"
"    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.x___, r3.x, l294\n"
"    umul r5._y__, r1.x, r5.x\n"
"    umul r1.x___, r1.x, r4.w\n"
"    umul r5.__z_, r4.z, r5.x\n"
"    umul r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l295, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r4.z, l295\n"
"   \n"
"    dcl_literal l296, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r6.x___, r5.z, l296\n"
"    iadd r5.___w, r5.w, r6.x\n"
"    iadd r1.x___, r1.x, r5.w\n"
"   \n"
"    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.___w, r1.x, l297\n"
"    iadd r5._y__, r5.y, r5.w\n"
"   \n"
"    dcl_literal l298, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r5.__z_, r5.z, l298\n"
"    iadd r5._y__, r5.y, r5.z\n"
"   \n"
"    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r1.x___, r1.x, l299\n"
"   \n"
"    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r4.z, l300\n"
"    ior r1.x___, r1.x, r4.z\n"
"   \n"
"    dcl_literal l301, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r0.w, l301\n"
"   \n"
"    dcl_literal l302, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r0.___w, r0.w, l302\n"
"    umul r0.___w, r0.w, r4.w\n"
"    umul r5.x___, r4.z, r5.x\n"
"    umul r4.__z_, r4.z, r4.w\n"
"   \n"
"    dcl_literal l303, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r4.z, l303\n"
"   \n"
"    dcl_literal l304, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r5.x, l304\n"
"    iadd r4.___w, r4.w, r5.x\n"
"    iadd r0.___w, r0.w, r4.w\n"
"   \n"
"    dcl_literal l305, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r0.___w, r0.w, l305\n"
"   \n"
"    dcl_literal l306, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r4.z, l306\n"
"    ior r0.___w, r0.w, r4.z\n"
"    iadd r4.__z_, r0.w, r5.y\n"
"    ult r0.___w, r4.z, r0.w\n"
"    ult r4.___w, r3.z, r4.z\n"
"    ieq r3.__z_, r3.z, r4.z\n"
"    ult r4.__z_, r3.w, r1.x\n"
"    and r4.__z_, r3.z, r4.z\n"
"    ior r4.__z_, r4.w, r4.z\n"
"   \n"
"    dcl_literal l307, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l308, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4.__z_, r4.z, l307, l308\n"
"    ieq r1.x___, r3.w, r1.x\n"
"    and r1.x___, r3.z, r1.x\n"
"   \n"
"    dcl_literal l309, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.x___, r1.x, l309, r4.z\n"
"   \n"
"    dcl_literal l310, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, r1.x, l310\n"
"    ior r0.___w, r0.w, r1.x\n"
"   \n"
"    dcl_literal l311, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r1.x___, r3.x, l311\n"
"    cmov_logical r0.___w, r0.w, r1.x, r3.x\n"
"else\n"
"   \n"
"    dcl_literal l312, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    mov r0.___w, l312\n"
"endif\n"
"dcl_literal l313, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.x___, r2.z, l313\n"
"dcl_literal l314, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3.x___, r2.z, l314\n"
"cmov_logical r3.x___, r1.x, r3.x, r2.z\n"
"dcl_literal l315, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r3.__z_, l315, r3.x_neg(xyzw)\n"
"ushr r3.__z_, r1.z, r3.z\n"
"ishl r3.x___, r1.z, r3.x\n"
"cmov_logical r3.__z_, r1.x, r1.z, r3.z\n"
"dcl_literal l316, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.x___, r1.x, l316, r3.x\n"
"dcl_literal l317, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r3.x___, r2.z, r3.z, l317\n"
"cmov_logical r1.x___, r2.z, r1.x, r1.z\n"
"dcl_literal l318, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.__z_, r2.w, l318\n"
"dcl_literal l319, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r2.__z_, r2.w, l319\n"
"cmov_logical r2.__z_, r1.z, r2.z, r2.w\n"
"dcl_literal l320, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r3.__z_, l320, r2.z_neg(xyzw)\n"
"ushr r3.__z_, r3.y, r3.z\n"
"ishl r2.__z_, r3.y, r2.z\n"
"cmov_logical r3.__z_, r1.z, r3.y, r3.z\n"
"dcl_literal l321, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.__z_, r1.z, l321, r2.z\n"
"dcl_literal l322, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r2.w, r3.z, l322\n"
"cmov_logical r1.__z_, r2.w, r1.z, r3.y\n"
"iadd r1.__z_, r1.x, r1.z\n"
"ult r1.x___, r1.z, r1.x\n"
"dcl_literal l323, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.x___, r1.x, l323\n"
"iadd r1.x___, r3.x, r1.x\n"
"iadd r1.x___, r2.z, r1.x\n"
"dcl_literal l324, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r2.__z_, r4.x, l324\n"
"dcl_literal l325, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r2.___w, r4.x, l325\n"
"cmov_logical r2.___w, r2.z, r2.w, r4.x\n"
"dcl_literal l326, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r3.x___, l326, r2.w_neg(xyzw)\n"
"ushr r3.x___, r4.y, r3.x\n"
"ishl r2.___w, r4.y, r2.w\n"
"cmov_logical r3.x___, r2.z, r4.y, r3.x\n"
"dcl_literal l327, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r2.z, l327, r2.w\n"
"dcl_literal l328, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r4.x, r3.x, l328\n"
"cmov_logical r2.__z_, r4.x, r2.z, r4.y\n"
"iadd r2.__z_, r1.z, r2.z\n"
"ult r1.__z_, r2.z, r1.z\n"
"dcl_literal l329, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.__z_, r1.z, l329\n"
"iadd r1.x___, r1.x, r1.z\n"
"iadd r1.x___, r2.w, r1.x\n"
"dcl_literal l330, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.__z_, r2.y, l330\n"
"dcl_literal l331, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r2.___w, r2.y, l331\n"
"cmov_logical r2.___w, r1.z, r2.w, r2.y\n"
"dcl_literal l332, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r3.x___, l332, r2.w_neg(xyzw)\n"
"ushr r3.x___, r0.w, r3.x\n"
"ishl r2.___w, r0.w, r2.w\n"
"cmov_logical r3.x___, r1.z, r0.w, r3.x\n"
"dcl_literal l333, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.__z_, r1.z, l333, r2.w\n"
"dcl_literal l334, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.___w, r2.y, r3.x, l334\n"
"cmov_logical r0.___w, r2.y, r1.z, r0.w\n"
"iadd r0.___w, r2.z, r0.w\n"
"ult r1.__z_, r0.w, r2.z\n"
"dcl_literal l335, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.__z_, r1.z, l335\n"
"iadd r1.x___, r1.x, r1.z\n"
"iadd r1.x___, r2.w, r1.x\n"
"dcl_literal l336, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r1._y__, r1.y, l336\n"
"dcl_literal l337, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.x___, r1.y, l337, r1.x\n"
"dcl_literal l338, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.___w, r1.y, l338, r0.w\n"
"dcl_literal l339, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ieq r0.__z_, r0.z, l339\n"
"and r0.__z_, r2.x, r0.z\n"
"cmov_logical r0._y__, r0.z, r0.y, r1.x\n"
"cmov_logical r0.x___, r0.z, r0.x, r0.w\n"
"dcl_literal l340, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r1.w, l340, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__udiv_i8",
"mdef(479)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l9, 0x000000FF, 0x000000FF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l9\n"
"dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l10\n"
"udiv r0.___w, r1.x, r0.w\n"
"dcl_literal l11, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.___w, r0.w, l11\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r1.y, r0.w, l12\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uhadd_u16",
"mdef(480)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l3, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ushr r0.x___, r0.w, l3\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uhadd_u32",
"mdef(481)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"and r0.___w, r0.y, r0.x\n"
"\n"
"dcl_literal l6, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.___w, r0.w, l6\n"
"\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ushr r1.xy__, r0.xyxx, l7\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__uhadd_u8",
"mdef(482)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ushr r0.x___, r1.x, l1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__ultof_f32",
"mdef(483)_out(1)_in(1)\n"
"mov r0, in0\n"
"dcl_literal l1, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r0.__z_, r0.y, l1\n"
"dcl_literal l2, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r0.___w, r0.x, l2\n"
"ior r0.__z_, r0.z, r0.w\n"
"dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r0.__z_, r0.z, l3\n"
"dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r0.___w, r0.z, l4\n"
"dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r0.___w, r0.w, l5\n"
"dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l6\n"
"dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r0.___w, l7, r0.w_neg(xyzw)\n"
"dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r0.___w, r0.w, l8\n"
"dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r0.___w, r0.w, l9\n"
"dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r0.___w, r0.w, l10\n"
"dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r0.__z_, r0.z, r0.w, l11\n"
"dcl_literal l12, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r0.___w, r0.y, l12\n"
"dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1.x___, r0.w, l13\n"
"dcl_literal l14, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1.x___, r1.x, l14\n"
"dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l15\n"
"dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1.x___, l16, r1.x_neg(xyzw)\n"
"dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1.x___, r1.x, l17\n"
"dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1.x___, r1.x, l18\n"
"dcl_literal l19, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r1.x___, r1.x, l19\n"
"dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r0.___w, r0.w, r1.x, l20\n"
"iadd r0.__z_, r0.w, r0.z\n"
"dcl_literal l21, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r1.x___, r0.x, l21\n"
"dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r1._y__, r1.x, l22\n"
"dcl_literal l23, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r1._y__, r1.y, l23\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1._y__, r1.y, l24\n"
"dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r1._y__, l25, r1.y_neg(xyzw)\n"
"dcl_literal l26, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r1._y__, r1.y, l26\n"
"dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r1._y__, r1.y, l27\n"
"dcl_literal l28, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r1._y__, r1.y, l28\n"
"dcl_literal l29, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r1.x___, r1.x, r1.y, l29\n"
"iadd r1.x___, r0.z, r1.x\n"
"dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r1._y__, r0.w, l30\n"
"cmov_logical r0.___w, r1.y, r0.z, r0.w\n"
"dcl_literal l31, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r0.__z_, r0.z, l31\n"
"cmov_logical r0.__z_, r0.z, r1.x, r0.w\n"
"dcl_literal l32, 0x00000040, 0x00000040, 0x00000040, 0x00000040\n"
"imin r0.___w, r0.z, l32\n"
"dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"imax r0.___w, r0.w, l33\n"
"dcl_literal l34, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"imin r1.x___, r0.w, l34\n"
"ishl r1.x___, r0.y, r1.x\n"
"dcl_literal l35, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r1._y__, r0.w, l35\n"
"dcl_literal l36, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"ige r1.__z_, r0.w, l36\n"
"cmov_logical r1._y__, r1.z, r1.y, r0.w\n"
"dcl_literal l37, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r1.___w, l37, r1.y_neg(xyzw)\n"
"ishl r1._y__, r0.x, r1.y\n"
"ushr r1.___w, r0.x, r1.w\n"
"ior r1.x___, r1.x, r1.w\n"
"cmov_logical r1.x___, r1.z, r1.y, r1.x\n"
"dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.z, l38, r1.y\n"
"cmov_logical r0.xy__, r0.w, r1.yxyy, r0.xyxx\n"
"dcl_literal l39, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF\n"
"and r0.___w, r0.y, l39\n"
"dcl_literal l40, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0._y__, r0.y, l40\n"
"dcl_literal l41, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ishl r1.x___, r0.w, l41\n"
"dcl_literal l42, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ushr r0.___w, r0.w, l42\n"
"dcl_literal l43, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ushr r1._y__, r0.x, l43\n"
"ior r1.x___, r1.x, r1.y\n"
"dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018\n"
"ishl r1._y__, r0.x, l44\n"
"dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r0.x___, r0.x, l45\n"
"dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ult r1._y__, l46, r1.y\n"
"dcl_literal l47, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1._y__, r1.y, l47\n"
"ior r1.x___, r1.x, r1.y\n"
"dcl_literal l48, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ieq r1._y__, r1.x, l48\n"
"dcl_literal l49, 0x80000000, 0x80000000, 0x80000000, 0x80000000\n"
"ult r1.x___, l49, r1.x\n"
"dcl_literal l50, 0x000000BE, 0x000000BE, 0x000000BE, 0x000000BE\n"
"iadd r1.__z_, r0.z_neg(xyzw), l50\n"
"dcl_literal l51, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F\n"
"iadd r0.__z_, l51, r0.z_neg(xyzw)\n"
"dcl_literal l52, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ishl r1.__z_, r1.z, l52\n"
"ior r0.___w, r0.w, r1.z\n"
"dcl_literal l53, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r1.__z_, r0.w, l53\n"
"iadd r1.__z_, r0.w, r1.z\n"
"cmov_logical r0.___w, r1.y, r1.z, r0.w\n"
"dcl_literal l54, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r1._y__, r0.w, l54\n"
"cmov_logical r0.___w, r1.x, r1.y, r0.w\n"
"and r0.x___, r0.y, r0.x\n"
"dcl_literal l55, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82\n"
"ilt r0._y__, r0.z, l55\n"
"ior r0.x___, r0.x, r0.y\n"
"dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.x___, r0.x, l56, r0.w\n"
"mov out0, r0\n"
"mend\n"
,1,1
},
{ "__umad24_u32",
"mdef(484)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"\n"
"dcl_literal l2, 0x00FFFFFF, 0x00FFFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l2\n"
"umul r1.x___, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umad_hi_u16",
"mdef(485)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"umul r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.x___, r1.x, l8\n"
"iadd r1.x___, r1.x, r0.z\n"
"\n"
"dcl_literal l9, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.x___, r1.x, l9\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umad_hi_u32",
"mdef(486)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"\n"
"dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l20\n"
"\n"
"dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.__zw, r0.xxxy, l21\n"
"umul r2.x___, r1.z, r1.w\n"
"umul r1.x_zw, r1.xxzx, r1.yyyw\n"
"\n"
"dcl_literal l22, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.x___, r1.x, l22\n"
"\n"
"dcl_literal l23, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r1._y__, r1.w, l23\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r1.x___, r1.z, r1.x\n"
"\n"
"dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.x___, r1.x, l24\n"
"iadd r1.x___, r2.x, r1.x\n"
"\n"
"dcl_literal l25, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1._y__, r1.w, l25\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.z\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umad_hi_u8",
"mdef(487)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"umul r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l3, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ushr r1.x___, r1.x, l3\n"
"iadd r1.x___, r1.x, r0.z\n"
"\n"
"dcl_literal l4, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.x___, r1.x, l4\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umad_sat_u16",
"mdef(488)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"umul r1.x___, r0.x, r0.y\n"
"iadd r1.x___, r1.x, r0.y\n"
"\n"
"dcl_literal l5, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"umin r0.___w, r1.x, l5\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umad_sat_u32",
"mdef(489)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"umul r1.x___, r0.x, r0.y\n"
"iadd r1._y__, r1.x, r0.y\n"
"ult r1.x___, r1.y, r1.x\n"
"\n"
"dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r0.___w, r1.x, l10, r1.y\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umad_sat_u8",
"mdef(490)_out(1)_in(3)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r2, in2\n"
"\n"
"mov r0._y__, r1.x\n"
"mov r0.__z_, r2.x\n"
"umul r1.x___, r0.x, r0.y\n"
"iadd r1.x___, r1.x, r0.y\n"
"\n"
"dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"umin r0.___w, r1.x, l2\n"
"mov r0.x___, r0.w\n"
"mov out0, r0\n"
"mend\n"
,3,1
},
{ "__umax_u16",
"mdef(491)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umax r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umax_u32",
"mdef(492)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umax r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umax_u8",
"mdef(493)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umax r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umin_u16",
"mdef(494)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umin r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umin_u32",
"mdef(495)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umin r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umin_u8",
"mdef(496)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"umin r0.x___, r0.y, r0.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umod_i16",
"mdef(497)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l21, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l21\n"
"dcl_literal l22, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l22\n"
"udiv r1.__z_, r1.x, r0.w\n"
"dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.y, r1.z, l23\n"
"umul r0.___w, r0.w, r1.y\n"
"iadd r0.___w, r1.x, r0.w_neg(xyzw)\n"
"dcl_literal l24, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.__z_, r0.w, l24\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umod_i32",
"mdef(498)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"udiv r2.x, r0.x, r1.x\n"
"umul r2.x, r2.x, r1.x\n"
"iadd r0.x, r0.x, r2.x_neg(xyzw)\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umod_i64",
"mdef(499)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0.__zw, r1.yyxy\n"
"ieq r1.xy__, r0.yxyy, r0.wzww\n"
"ult r1.__zw, r0.yyyx, r0.wwwz\n"
"and r1.___w, r1.x, r1.w\n"
"ior r1.___w, r1.z, r1.w\n"
"dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.___w, r1.w, l1, l2\n"
"and r1._y__, r1.y, r1.x\n"
"dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.y, l3, r1.w\n"
"dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ieq r2.xy__, r0.wzww, l4\n"
"and r1.___w, r2.y, r2.x\n"
"dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.__z_, r1.w, l5, r0.z\n"
"dcl_literal l6, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r2.xy__, r0.wyww, l6\n"
"dcl_literal l7, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r2.__z_, r0.x, l7\n"
"dcl_literal l8, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.xy__, r0.wyww, l8\n"
"dcl_literal l9, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r2.___w, r0.z, l9\n"
"ior r2.___w, r3.x, r2.w\n"
"dcl_literal l10, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r2.___w, r2.w, l10\n"
"dcl_literal l11, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.x___, r0.z, l11\n"
"dcl_literal l12, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000\n"
"ior r3.__zw, r2.xxxy, l12\n"
"dcl_literal l13, 0x00000000, 0x00000000, 0xBF800000, 0xBF800000\n"
"add r3.__zw, r3.zzzw, l13\n"
"dcl_literal l14, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"and r3.__zw, r3.zzzw, l14\n"
"dcl_literal l15, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000\n"
"iadd r3.__zw, l15, r3.zzzw_neg(xyzw)\n"
"dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000\n"
"and r3.__zw, r3.zzzw, l16\n"
"dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.__zw, r3.zzzw, l17\n"
"dcl_literal l18, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.__zw, r3.zzzw, l18\n"
"dcl_literal l19, 0x00000017, 0x00000017, 0x00000000, 0x00000000\n"
"cmov_logical r2.xy__, r2.xyxx, r3.zwzz, l19\n"
"dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.__z_, r2.w, l20\n"
"dcl_literal l21, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.__z_, r3.z, l21\n"
"dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l22\n"
"dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.__z_, l23, r3.z_neg(xyzw)\n"
"dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l24\n"
"dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.__z_, r3.z, l25\n"
"dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.__z_, r3.z, l26\n"
"dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r2.___w, r2.w, r3.z, l27\n"
"dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.__z_, r3.x, l28\n"
"dcl_literal l29, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.__z_, r3.z, l29\n"
"dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l30\n"
"dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.__z_, l31, r3.z_neg(xyzw)\n"
"dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.__z_, r3.z, l32\n"
"dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.__z_, r3.z, l33\n"
"dcl_literal l34, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.__z_, r3.z, l34\n"
"dcl_literal l35, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.x___, r3.x, r3.z, l35\n"
"dcl_literal l36, 0x00000000, 0x00000000, 0x00000017, 0x00000017\n"
"ieq r3.__zw, r2.xxxy, l36\n"
"iadd r2.___w, r2.x, r2.w\n"
"cmov_logical r2.x___, r3.z, r2.w, r2.x\n"
"dcl_literal l37, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.__z_, r2.w, l37\n"
"iadd r2.___w, r2.w, r3.x\n"
"cmov_logical r2.x___, r3.z, r2.w, r2.x\n"
"dcl_literal l38, 0x00000030, 0x00000030, 0x00000030, 0x00000030\n"
"ige r2.___w, r2.x, l38\n"
"dcl_literal l39, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"iadd r3.x___, r2.x, l39\n"
"dcl_literal l40, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F\n"
"cmov_logical r2.___w, r2.w, r3.x, l40\n"
"ult r3.x___, r0.x, r0.z\n"
"and r3.x___, r1.x, r3.x\n"
"ior r1.__z_, r1.z, r3.x\n"
"dcl_literal l41, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r1.__z_, r1.z, l41, l42\n"
"ieq r3.x___, r0.x, r0.z\n"
"and r1.x___, r1.x, r3.x\n"
"dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1.x___, r1.x, l43, r1.z\n"
"ior r1.__z_, r2.z, r3.y\n"
"dcl_literal l44, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r1.__z_, r1.z, l44\n"
"dcl_literal l45, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r2.__z_, r0.x, l45\n"
"dcl_literal l46, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.x___, r1.z, l46\n"
"dcl_literal l47, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.x___, r3.x, l47\n"
"dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.x___, r3.x, l48\n"
"dcl_literal l49, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.x___, l49, r3.x_neg(xyzw)\n"
"dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.x___, r3.x, l50\n"
"dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.x___, r3.x, l51\n"
"dcl_literal l52, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.x___, r3.x, l52\n"
"dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r1.__z_, r1.z, r3.x, l53\n"
"dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.x___, r2.z, l54\n"
"dcl_literal l55, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.x___, r3.x, l55\n"
"dcl_literal l56, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.x___, r3.x, l56\n"
"dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.x___, l57, r3.x_neg(xyzw)\n"
"dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.x___, r3.x, l58\n"
"dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.x___, r3.x, l59\n"
"dcl_literal l60, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.x___, r3.x, l60\n"
"dcl_literal l61, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r2.__z_, r2.z, r3.x, l61\n"
"iadd r1.__z_, r2.y, r1.z\n"
"cmov_logical r2._y__, r3.w, r1.z, r2.y\n"
"dcl_literal l62, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.x___, r1.z, l62\n"
"iadd r1.__z_, r1.z, r2.z\n"
"cmov_logical r1.__z_, r3.x, r1.z, r2.y\n"
"ilt r2._y__, r1.z, r2.x\n"
"ieq r2.__z_, r2.x, r1.z\n"
"dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r1.x___, r1.x, l63\n"
"and r1.x___, r2.z, r1.x\n"
"ior r1.x___, r2.y, r1.x\n"
"iadd r2._y__, r2.x, r1.z_neg(xyzw)\n"
"dcl_literal l64, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r1.x___, r1.x, r2.y, l64\n"
"dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2._y__, r1.x, l65\n"
"if_logicalnz r2.y\n"
"    ilt r2.__z_, r2.w, r1.x\n"
"    iadd r3.x___, r1.x, r2.w_neg(xyzw)\n"
"    and r2.__z_, r2.z, r3.x\n"
"   \n"
"    dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r1.x___, r1.x, l66\n"
"   \n"
"    dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r1.x___, r1.x, l67, r2.z\n"
"   \n"
"    dcl_literal l68, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2.__z_, r1.x, l68\n"
"   \n"
"    dcl_literal l69, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.x___, r1.x, l69\n"
"    cmov_logical r3.x___, r2.z, r3.x, r1.x\n"
"   \n"
"    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3._y__, r1.x, l70\n"
"   \n"
"    dcl_literal l71, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.__z_, l71, r3.x_neg(xyzw)\n"
"    ushr r3.__z_, r0.z, r3.z\n"
"    ishl r3.x___, r0.z, r3.x\n"
"    ishl r3._y__, r0.w, r3.y\n"
"    ior r3._y__, r3.z, r3.y\n"
"    cmov_logical r3._y__, r2.z, r0.z, r3.y\n"
"   \n"
"    dcl_literal l72, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.__z_, r2.z, l72, r3.x\n"
"    cmov_logical r3.x___, r1.x, r3.y, r0.w\n"
"    cmov_logical r1.x___, r1.x, r2.z, r0.z\n"
"   \n"
"    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2.__z_, r1.z, l73\n"
"   \n"
"    dcl_literal l74, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3._y__, r1.z, l74\n"
"    cmov_logical r3._y__, r2.z, r3.y, r1.z\n"
"   \n"
"    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.__z_, r1.z, l75\n"
"   \n"
"    dcl_literal l76, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3._y__, l76, r3.y_neg(xyzw)\n"
"    ushr r3.___w, r0.x, r3.y\n"
"    ishl r4.x___, r0.y, r3.z\n"
"    ior r3.___w, r3.w, r4.x\n"
"    cmov_logical r3.___w, r2.z, r0.x, r3.w\n"
"    cmov_logical r3.___w, r1.z, r3.w, r0.y\n"
"    ushr r3._y__, r1.x, r3.y\n"
"    ishl r3.__z_, r3.x, r3.z\n"
"    ior r3._y__, r3.y, r3.z\n"
"    cmov_logical r2.__z_, r2.z, r1.x, r3.y\n"
"    cmov_logical r1.__z_, r1.z, r2.z, r3.x\n"
"    udiv r2.__z_, r3.w, r1.z\n"
"    umul r3._y__, r2.z, r1.z\n"
"    ilt r3.__z_, r3.w, r3.y\n"
"    iadd r4.x___, r3.y, r3.w_neg(xyzw)\n"
"    iadd r4.x___, r4.x, r1.z\n"
"   \n"
"    dcl_literal l77, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.x___, r4.x, l77\n"
"    iadd r3._y__, r3.w, r3.y_neg(xyzw)\n"
"    cmov_logical r3._y__, r3.z, r4.x, r3.y\n"
"    udiv r1.__z_, r3.y, r1.z\n"
"    iadd r3._y__, r2.z, r1.z_neg(xyzw)\n"
"    iadd r1.__z_, r2.z, r1.z\n"
"    cmov_logical r1.__z_, r3.z, r3.y, r1.z\n"
"   \n"
"    dcl_literal l78, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.__z_, r1.x, l78\n"
"   \n"
"    dcl_literal l79, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3._y__, r1.x, l79\n"
"   \n"
"    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.__z_, r1.z, l80\n"
"   \n"
"    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r1.__z_, r1.z, l81\n"
"    umul r3.___w, r3.y, r1.z\n"
"    umul r3._y__, r3.y, r3.z\n"
"    umul r4.x___, r2.z, r1.z\n"
"    umul r2.__z_, r2.z, r3.z\n"
"   \n"
"    dcl_literal l82, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r2.z, l82\n"
"   \n"
"    dcl_literal l83, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.__z_, r4.x, l83\n"
"    iadd r4._y__, r4.y, r4.z\n"
"    iadd r3._y__, r3.y, r4.y\n"
"   \n"
"    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4._y__, r3.y, l84\n"
"    iadd r3.___w, r3.w, r4.y\n"
"   \n"
"    dcl_literal l85, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r4.x, l85\n"
"    iadd r3.___w, r3.w, r4.x\n"
"   \n"
"    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3._y__, r3.y, l86\n"
"   \n"
"    dcl_literal l87, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.__z_, r2.z, l87\n"
"    ior r2.__z_, r3.y, r2.z\n"
"   \n"
"    dcl_literal l88, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r3.x, l88\n"
"   \n"
"    dcl_literal l89, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r3.x, l89\n"
"    umul r4.x___, r4.x, r3.z\n"
"    umul r1.__z_, r3.y, r1.z\n"
"    umul r3._y__, r3.y, r3.z\n"
"   \n"
"    dcl_literal l90, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.__z_, r3.y, l90\n"
"   \n"
"    dcl_literal l91, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r1.__z_, r1.z, l91\n"
"    iadd r1.__z_, r3.z, r1.z\n"
"    iadd r1.__z_, r4.x, r1.z\n"
"   \n"
"    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r1.__z_, r1.z, l92\n"
"   \n"
"    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r3.y, l93\n"
"    ior r1.__z_, r1.z, r3.y\n"
"    iadd r3._y__, r1.z, r3.w\n"
"    ult r1.__z_, r3.y, r1.z\n"
"    ult r3.__z_, r0.y, r3.y\n"
"    ieq r3.___w, r0.y, r3.y\n"
"    ult r4.x___, r0.x, r2.z\n"
"    and r4.x___, r3.w, r4.x\n"
"    ior r3.__z_, r3.z, r4.x\n"
"   \n"
"    dcl_literal l94, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r3.__z_, r3.z, l94, l95\n"
"    ieq r4.x___, r0.x, r2.z\n"
"    and r3.___w, r3.w, r4.x\n"
"   \n"
"    dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3.__z_, r3.w, l96, r3.z\n"
"   \n"
"    dcl_literal l97, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r3.__z_, r3.z, l97\n"
"    ior r1.__z_, r1.z, r3.z\n"
"    iadd r1.x___, r2.z, r1.x_neg(xyzw)\n"
"    ult r3.__z_, r2.z, r1.x\n"
"    iadd r3.__z_, r3.y, r3.z\n"
"    iadd r3.x___, r3.z, r3.x_neg(xyzw)\n"
"    cmov_logical r3.x___, r1.z, r3.x, r3.y\n"
"    cmov_logical r1.x___, r1.z, r1.x, r2.z\n"
"    iadd r1.__z_, r0.x, r1.x_neg(xyzw)\n"
"    ult r2.__z_, r0.x, r1.z\n"
"    iadd r2.__z_, r0.y, r2.z\n"
"    iadd r1.x___, r2.z, r3.x_neg(xyzw)\n"
"else\n"
"    mov r1.x_z_, r0.yyxy\n"
"endif\n"
"ult r2.__z_, r1.x, r0.w\n"
"ieq r3.x___, r1.x, r0.w\n"
"ult r3._y__, r1.z, r0.z\n"
"and r3._y__, r3.x, r3.y\n"
"ior r2.__z_, r2.z, r3.y\n"
"dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l99, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2.__z_, r2.z, l98, l99\n"
"ieq r3._y__, r1.z, r0.z\n"
"and r3.x___, r3.x, r3.y\n"
"dcl_literal l100, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2.__z_, r3.x, l100, r2.z\n"
"dcl_literal l101, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.x___, r1.x, l101\n"
"dcl_literal l102, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3._y__, r1.x, l102\n"
"dcl_literal l103, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.__z_, r1.z, l103\n"
"ior r3.x___, r3.x, r3.z\n"
"dcl_literal l104, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3.x___, r3.x, l104\n"
"dcl_literal l105, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.__z_, r1.z, l105\n"
"dcl_literal l106, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.y, l106\n"
"dcl_literal l107, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l107\n"
"dcl_literal l108, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l108\n"
"dcl_literal l109, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l109, r3.w_neg(xyzw)\n"
"dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l110\n"
"dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l111\n"
"dcl_literal l112, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l112\n"
"dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r3.w, l113\n"
"dcl_literal l114, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.x, l114\n"
"dcl_literal l115, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l115\n"
"dcl_literal l116, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l116\n"
"dcl_literal l117, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l117, r3.w_neg(xyzw)\n"
"dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l118\n"
"dcl_literal l119, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l119\n"
"dcl_literal l120, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l120\n"
"dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.x___, r3.x, r3.w, l121\n"
"dcl_literal l122, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.z, l122\n"
"dcl_literal l123, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l123\n"
"dcl_literal l124, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l124\n"
"dcl_literal l125, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l125, r3.w_neg(xyzw)\n"
"dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l126\n"
"dcl_literal l127, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l127\n"
"dcl_literal l128, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.___w, r3.w, l128\n"
"dcl_literal l129, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.__z_, r3.z, r3.w, l129\n"
"dcl_literal l130, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r3.___w, r3.y, l130\n"
"iadd r3.x___, r3.y, r3.x\n"
"cmov_logical r3._y__, r3.w, r3.x, r3.y\n"
"dcl_literal l131, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.___w, r3.x, l131\n"
"iadd r3.x___, r3.x, r3.z\n"
"cmov_logical r3.x___, r3.w, r3.x, r3.y\n"
"ilt r3._y__, r3.x, r2.x\n"
"ieq r3.__z_, r2.x, r3.x\n"
"dcl_literal l132, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r2.z, l132\n"
"and r2.__z_, r3.z, r2.z\n"
"ior r2.__z_, r3.y, r2.z\n"
"and r2._y__, r2.y, r2.z\n"
"iadd r2.__z_, r2.x, r3.x_neg(xyzw)\n"
"dcl_literal l133, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r2._y__, r2.y, r2.z, l133\n"
"dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r2.y, l134\n"
"if_logicalnz r2.z\n"
"    ilt r3._y__, r2.w, r2.y\n"
"    iadd r3.__z_, r2.y, r2.w_neg(xyzw)\n"
"    and r3._y__, r3.y, r3.z\n"
"   \n"
"    dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, r2.y, l135\n"
"   \n"
"    dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2._y__, r2.y, l136, r3.y\n"
"   \n"
"    dcl_literal l137, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3._y__, r2.y, l137\n"
"   \n"
"    dcl_literal l138, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.__z_, r2.y, l138\n"
"    cmov_logical r3.__z_, r3.y, r3.z, r2.y\n"
"   \n"
"    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.___w, r2.y, l139\n"
"   \n"
"    dcl_literal l140, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.x___, l140, r3.z_neg(xyzw)\n"
"    ushr r4.x___, r0.z, r4.x\n"
"    ishl r3.__z_, r0.z, r3.z\n"
"    ishl r3.___w, r0.w, r3.w\n"
"    ior r3.___w, r4.x, r3.w\n"
"    cmov_logical r3.___w, r3.y, r0.z, r3.w\n"
"   \n"
"    dcl_literal l141, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3._y__, r3.y, l141, r3.z\n"
"    cmov_logical r3.__z_, r2.y, r3.w, r0.w\n"
"    cmov_logical r2._y__, r2.y, r3.y, r0.z\n"
"   \n"
"    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3._y__, r3.x, l142\n"
"   \n"
"    dcl_literal l143, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.___w, r3.x, l143\n"
"    cmov_logical r3.___w, r3.y, r3.w, r3.x\n"
"   \n"
"    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.x___, r3.x, l144\n"
"   \n"
"    dcl_literal l145, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.___w, l145, r3.w_neg(xyzw)\n"
"    ushr r4._y__, r1.z, r3.w\n"
"    ishl r4.__z_, r1.x, r4.x\n"
"    ior r4._y__, r4.y, r4.z\n"
"    cmov_logical r4._y__, r3.y, r1.z, r4.y\n"
"    cmov_logical r4._y__, r3.x, r4.y, r1.x\n"
"    ushr r3.___w, r2.y, r3.w\n"
"    ishl r4.x___, r3.z, r4.x\n"
"    ior r3.___w, r3.w, r4.x\n"
"    cmov_logical r3._y__, r3.y, r2.y, r3.w\n"
"    cmov_logical r3.x___, r3.x, r3.y, r3.z\n"
"    udiv r3._y__, r4.y, r3.x\n"
"    umul r3.___w, r3.y, r3.x\n"
"    ilt r4.x___, r4.y, r3.w\n"
"    iadd r4.__z_, r3.w, r4.y_neg(xyzw)\n"
"    iadd r4.__z_, r4.z, r3.x\n"
"   \n"
"    dcl_literal l146, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.__z_, r4.z, l146\n"
"    iadd r3.___w, r4.y, r3.w_neg(xyzw)\n"
"    cmov_logical r3.___w, r4.x, r4.z, r3.w\n"
"    udiv r3.x___, r3.w, r3.x\n"
"    iadd r3.___w, r3.y, r3.x_neg(xyzw)\n"
"    iadd r3.x___, r3.y, r3.x\n"
"    cmov_logical r3.x___, r4.x, r3.w, r3.x\n"
"   \n"
"    dcl_literal l147, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r2.y, l147\n"
"   \n"
"    dcl_literal l148, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.___w, r2.y, l148\n"
"   \n"
"    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r3.x, l149\n"
"   \n"
"    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.x___, r3.x, l150\n"
"    umul r4._y__, r3.w, r3.x\n"
"    umul r3.___w, r3.w, r4.x\n"
"    umul r4.__z_, r3.y, r3.x\n"
"    umul r3._y__, r3.y, r4.x\n"
"   \n"
"    dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.y, l151\n"
"   \n"
"    dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r4.z, l152\n"
"    iadd r4.___w, r4.w, r5.x\n"
"    iadd r3.___w, r3.w, r4.w\n"
"   \n"
"    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.w, l153\n"
"    iadd r4._y__, r4.y, r4.w\n"
"   \n"
"    dcl_literal l154, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r4.z, l154\n"
"    iadd r4._y__, r4.y, r4.z\n"
"   \n"
"    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3.___w, r3.w, l155\n"
"   \n"
"    dcl_literal l156, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r3.y, l156\n"
"    ior r3._y__, r3.w, r3.y\n"
"   \n"
"    dcl_literal l157, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.z, l157\n"
"   \n"
"    dcl_literal l158, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r3.z, l158\n"
"    umul r4.__z_, r4.z, r4.x\n"
"    umul r3.x___, r3.w, r3.x\n"
"    umul r3.___w, r3.w, r4.x\n"
"   \n"
"    dcl_literal l159, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r3.w, l159\n"
"   \n"
"    dcl_literal l160, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.x___, r3.x, l160\n"
"    iadd r3.x___, r4.x, r3.x\n"
"    iadd r3.x___, r4.z, r3.x\n"
"   \n"
"    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3.x___, r3.x, l161\n"
"   \n"
"    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.w, l162\n"
"    ior r3.x___, r3.x, r3.w\n"
"    iadd r3.___w, r3.x, r4.y\n"
"    ult r3.x___, r3.w, r3.x\n"
"    ult r4.x___, r1.x, r3.w\n"
"    ieq r4._y__, r1.x, r3.w\n"
"    ult r4.__z_, r1.z, r3.y\n"
"    and r4.__z_, r4.y, r4.z\n"
"    ior r4.x___, r4.x, r4.z\n"
"   \n"
"    dcl_literal l163, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l164, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4.x___, r4.x, l163, l164\n"
"    ieq r4.__z_, r1.z, r3.y\n"
"    and r4._y__, r4.y, r4.z\n"
"   \n"
"    dcl_literal l165, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.x___, r4.y, l165, r4.x\n"
"   \n"
"    dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.x___, r4.x, l166\n"
"    ior r3.x___, r3.x, r4.x\n"
"    iadd r2._y__, r3.y, r2.y_neg(xyzw)\n"
"    ult r4.x___, r3.y, r2.y\n"
"    iadd r4.x___, r3.w, r4.x\n"
"    iadd r3.__z_, r4.x, r3.z_neg(xyzw)\n"
"    cmov_logical r3.__z_, r3.x, r3.z, r3.w\n"
"    cmov_logical r2._y__, r3.x, r2.y, r3.y\n"
"    iadd r2._y__, r1.z, r2.y_neg(xyzw)\n"
"    ult r3.x___, r1.z, r2.y\n"
"    iadd r3.x___, r1.x, r3.x\n"
"    iadd r1.x___, r3.x, r3.z_neg(xyzw)\n"
"    mov r1.__z_, r2.y\n"
"endif\n"
"ult r2._y__, r1.x, r0.w\n"
"ieq r3.x___, r1.x, r0.w\n"
"ult r3._y__, r1.z, r0.z\n"
"and r3._y__, r3.x, r3.y\n"
"ior r2._y__, r2.y, r3.y\n"
"dcl_literal l167, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l168, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2._y__, r2.y, l167, l168\n"
"ieq r3._y__, r1.z, r0.z\n"
"and r3.x___, r3.x, r3.y\n"
"dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2._y__, r3.x, l169, r2.y\n"
"dcl_literal l170, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.x___, r1.x, l170\n"
"dcl_literal l171, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3._y__, r1.x, l171\n"
"dcl_literal l172, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.__z_, r1.z, l172\n"
"ior r3.x___, r3.x, r3.z\n"
"dcl_literal l173, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3.x___, r3.x, l173\n"
"dcl_literal l174, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.__z_, r1.z, l174\n"
"dcl_literal l175, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.y, l175\n"
"dcl_literal l176, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l176\n"
"dcl_literal l177, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l177\n"
"dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l178, r3.w_neg(xyzw)\n"
"dcl_literal l179, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l179\n"
"dcl_literal l180, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l180\n"
"dcl_literal l181, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l181\n"
"dcl_literal l182, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r3.w, l182\n"
"dcl_literal l183, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.x, l183\n"
"dcl_literal l184, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l184\n"
"dcl_literal l185, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l185\n"
"dcl_literal l186, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l186, r3.w_neg(xyzw)\n"
"dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l187\n"
"dcl_literal l188, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l188\n"
"dcl_literal l189, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l189\n"
"dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.x___, r3.x, r3.w, l190\n"
"dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.z, l191\n"
"dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l192\n"
"dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l193\n"
"dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l194, r3.w_neg(xyzw)\n"
"dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l195\n"
"dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l196\n"
"dcl_literal l197, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.___w, r3.w, l197\n"
"dcl_literal l198, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.__z_, r3.z, r3.w, l198\n"
"dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r3.___w, r3.y, l199\n"
"iadd r3.x___, r3.y, r3.x\n"
"cmov_logical r3._y__, r3.w, r3.x, r3.y\n"
"dcl_literal l200, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.___w, r3.x, l200\n"
"iadd r3.x___, r3.x, r3.z\n"
"cmov_logical r3.x___, r3.w, r3.x, r3.y\n"
"ilt r3._y__, r3.x, r2.x\n"
"ieq r3.__z_, r2.x, r3.x\n"
"dcl_literal l201, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2._y__, r2.y, l201\n"
"and r2._y__, r3.z, r2.y\n"
"ior r2._y__, r3.y, r2.y\n"
"and r2._y__, r2.z, r2.y\n"
"iadd r2.__z_, r2.x, r3.x_neg(xyzw)\n"
"dcl_literal l202, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r2._y__, r2.y, r2.z, l202\n"
"dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2.__z_, r2.y, l203\n"
"if_logicalnz r2.z\n"
"    ilt r3._y__, r2.w, r2.y\n"
"    iadd r3.__z_, r2.y, r2.w_neg(xyzw)\n"
"    and r3._y__, r3.y, r3.z\n"
"   \n"
"    dcl_literal l204, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2._y__, r2.y, l204\n"
"   \n"
"    dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2._y__, r2.y, l205, r3.y\n"
"   \n"
"    dcl_literal l206, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3._y__, r2.y, l206\n"
"   \n"
"    dcl_literal l207, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.__z_, r2.y, l207\n"
"    cmov_logical r3.__z_, r3.y, r3.z, r2.y\n"
"   \n"
"    dcl_literal l208, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r3.___w, r2.y, l208\n"
"   \n"
"    dcl_literal l209, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r4.x___, l209, r3.z_neg(xyzw)\n"
"    ushr r4.x___, r0.z, r4.x\n"
"    ishl r3.__z_, r0.z, r3.z\n"
"    ishl r3.___w, r0.w, r3.w\n"
"    ior r3.___w, r4.x, r3.w\n"
"    cmov_logical r3.___w, r3.y, r0.z, r3.w\n"
"   \n"
"    dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r3._y__, r3.y, l210, r3.z\n"
"    cmov_logical r3.__z_, r2.y, r3.w, r0.w\n"
"    cmov_logical r2._y__, r2.y, r3.y, r0.z\n"
"   \n"
"    dcl_literal l211, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r3._y__, r3.x, l211\n"
"   \n"
"    dcl_literal l212, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r3.___w, r3.x, l212\n"
"    cmov_logical r3.___w, r3.y, r3.w, r3.x\n"
"   \n"
"    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r4.x___, r3.x, l213\n"
"   \n"
"    dcl_literal l214, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3.___w, l214, r3.w_neg(xyzw)\n"
"    ushr r4._y__, r1.z, r3.w\n"
"    ishl r4.__z_, r1.x, r4.x\n"
"    ior r4._y__, r4.y, r4.z\n"
"    cmov_logical r4._y__, r3.y, r1.z, r4.y\n"
"    cmov_logical r4._y__, r3.x, r4.y, r1.x\n"
"    ushr r3.___w, r2.y, r3.w\n"
"    ishl r4.x___, r3.z, r4.x\n"
"    ior r3.___w, r3.w, r4.x\n"
"    cmov_logical r3._y__, r3.y, r2.y, r3.w\n"
"    cmov_logical r3.x___, r3.x, r3.y, r3.z\n"
"    udiv r3._y__, r4.y, r3.x\n"
"    umul r3.___w, r3.y, r3.x\n"
"    ilt r4.x___, r4.y, r3.w\n"
"    iadd r4.__z_, r3.w, r4.y_neg(xyzw)\n"
"    iadd r4.__z_, r4.z, r3.x\n"
"   \n"
"    dcl_literal l215, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r4.__z_, r4.z, l215\n"
"    iadd r3.___w, r4.y, r3.w_neg(xyzw)\n"
"    cmov_logical r3.___w, r4.x, r4.z, r3.w\n"
"    udiv r3.x___, r3.w, r3.x\n"
"    iadd r3.___w, r3.y, r3.x_neg(xyzw)\n"
"    iadd r3.x___, r3.y, r3.x\n"
"    cmov_logical r3.x___, r4.x, r3.w, r3.x\n"
"   \n"
"    dcl_literal l216, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r2.y, l216\n"
"   \n"
"    dcl_literal l217, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.___w, r2.y, l217\n"
"   \n"
"    dcl_literal l218, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r4.x___, r3.x, l218\n"
"   \n"
"    dcl_literal l219, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.x___, r3.x, l219\n"
"    umul r4._y__, r3.w, r3.x\n"
"    umul r3.___w, r3.w, r4.x\n"
"    umul r4.__z_, r3.y, r3.x\n"
"    umul r3._y__, r3.y, r4.x\n"
"   \n"
"    dcl_literal l220, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.y, l220\n"
"   \n"
"    dcl_literal l221, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r5.x___, r4.z, l221\n"
"    iadd r4.___w, r4.w, r5.x\n"
"    iadd r3.___w, r3.w, r4.w\n"
"   \n"
"    dcl_literal l222, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.___w, r3.w, l222\n"
"    iadd r4._y__, r4.y, r4.w\n"
"   \n"
"    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r4.z, l223\n"
"    iadd r4._y__, r4.y, r4.z\n"
"   \n"
"    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3.___w, r3.w, l224\n"
"   \n"
"    dcl_literal l225, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3._y__, r3.y, l225\n"
"    ior r3._y__, r3.w, r3.y\n"
"   \n"
"    dcl_literal l226, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.z, l226\n"
"   \n"
"    dcl_literal l227, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.__z_, r3.z, l227\n"
"    umul r4.__z_, r4.z, r4.x\n"
"    umul r3.x___, r3.w, r3.x\n"
"    umul r3.___w, r3.w, r4.x\n"
"   \n"
"    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r4.x___, r3.w, l228\n"
"   \n"
"    dcl_literal l229, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.x___, r3.x, l229\n"
"    iadd r3.x___, r4.x, r3.x\n"
"    iadd r3.x___, r4.z, r3.x\n"
"   \n"
"    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r3.x___, r3.x, l230\n"
"   \n"
"    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.w, l231\n"
"    ior r3.x___, r3.x, r3.w\n"
"    iadd r3.___w, r3.x, r4.y\n"
"    ult r3.x___, r3.w, r3.x\n"
"    ult r4.x___, r1.x, r3.w\n"
"    ieq r4._y__, r1.x, r3.w\n"
"    ult r4.__z_, r1.z, r3.y\n"
"    and r4.__z_, r4.y, r4.z\n"
"    ior r4.x___, r4.x, r4.z\n"
"   \n"
"    dcl_literal l232, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l233, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r4.x___, r4.x, l232, l233\n"
"    ieq r4.__z_, r1.z, r3.y\n"
"    and r4._y__, r4.y, r4.z\n"
"   \n"
"    dcl_literal l234, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r4.x___, r4.y, l234, r4.x\n"
"   \n"
"    dcl_literal l235, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r4.x___, r4.x, l235\n"
"    ior r3.x___, r3.x, r4.x\n"
"    iadd r2._y__, r3.y, r2.y_neg(xyzw)\n"
"    ult r4.x___, r3.y, r2.y\n"
"    iadd r4.x___, r3.w, r4.x\n"
"    iadd r3.__z_, r4.x, r3.z_neg(xyzw)\n"
"    cmov_logical r3.__z_, r3.x, r3.z, r3.w\n"
"    cmov_logical r2._y__, r3.x, r2.y, r3.y\n"
"    iadd r2._y__, r1.z, r2.y_neg(xyzw)\n"
"    ult r3.x___, r1.z, r2.y\n"
"    iadd r3.x___, r1.x, r3.x\n"
"    iadd r1.x___, r3.x, r3.z_neg(xyzw)\n"
"    mov r1.__z_, r2.y\n"
"endif\n"
"ult r2._y__, r1.x, r0.w\n"
"ieq r3.x___, r1.x, r0.w\n"
"ult r3._y__, r1.z, r0.z\n"
"and r3._y__, r3.x, r3.y\n"
"ior r2._y__, r2.y, r3.y\n"
"dcl_literal l236, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"dcl_literal l237, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r2._y__, r2.y, l236, l237\n"
"ieq r3._y__, r1.z, r0.z\n"
"and r3.x___, r3.x, r3.y\n"
"dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r2._y__, r3.x, l238, r2.y\n"
"dcl_literal l239, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E\n"
"ishl r3.x___, r1.x, l239\n"
"dcl_literal l240, 0x00000009, 0x00000009, 0x00000009, 0x00000009\n"
"ushr r3._y__, r1.x, l240\n"
"dcl_literal l241, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"ushr r3.__z_, r1.z, l241\n"
"ior r3.x___, r3.x, r3.z\n"
"dcl_literal l242, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF\n"
"and r3.x___, r3.x, l242\n"
"dcl_literal l243, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF\n"
"and r3.__z_, r1.z, l243\n"
"dcl_literal l244, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.y, l244\n"
"dcl_literal l245, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l245\n"
"dcl_literal l246, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l246\n"
"dcl_literal l247, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l247, r3.w_neg(xyzw)\n"
"dcl_literal l248, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l248\n"
"dcl_literal l249, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l249\n"
"dcl_literal l250, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l250\n"
"dcl_literal l251, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3._y__, r3.y, r3.w, l251\n"
"dcl_literal l252, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.x, l252\n"
"dcl_literal l253, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l253\n"
"dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l254\n"
"dcl_literal l255, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l255, r3.w_neg(xyzw)\n"
"dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l256\n"
"dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l257\n"
"dcl_literal l258, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"iadd r3.___w, r3.w, l258\n"
"dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"cmov_logical r3.x___, r3.x, r3.w, l259\n"
"dcl_literal l260, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"ior r3.___w, r3.z, l260\n"
"dcl_literal l261, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000\n"
"add r3.___w, r3.w, l261\n"
"dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l262\n"
"dcl_literal l263, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000\n"
"iadd r3.___w, l263, r3.w_neg(xyzw)\n"
"dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000\n"
"and r3.___w, r3.w, l264\n"
"dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ushr r3.___w, r3.w, l265\n"
"dcl_literal l266, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA\n"
"iadd r3.___w, r3.w, l266\n"
"dcl_literal l267, 0x00000012, 0x00000012, 0x00000012, 0x00000012\n"
"cmov_logical r3.__z_, r3.z, r3.w, l267\n"
"dcl_literal l268, 0x00000017, 0x00000017, 0x00000017, 0x00000017\n"
"ieq r3.___w, r3.y, l268\n"
"iadd r3.x___, r3.y, r3.x\n"
"cmov_logical r3._y__, r3.w, r3.x, r3.y\n"
"dcl_literal l269, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E\n"
"ieq r3.___w, r3.x, l269\n"
"iadd r3.x___, r3.x, r3.z\n"
"cmov_logical r3.x___, r3.w, r3.x, r3.y\n"
"ilt r3._y__, r3.x, r2.x\n"
"ieq r3.__z_, r2.x, r3.x\n"
"dcl_literal l270, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2._y__, r2.y, l270\n"
"and r2._y__, r3.z, r2.y\n"
"ior r2._y__, r3.y, r2.y\n"
"and r2._y__, r2.z, r2.y\n"
"iadd r2.x___, r2.x, r3.x_neg(xyzw)\n"
"dcl_literal l271, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"cmov_logical r2.x___, r2.y, r2.x, l271\n"
"dcl_literal l272, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ige r2._y__, r2.x, l272\n"
"if_logicalnz r2.y\n"
"    ilt r2._y__, r2.w, r2.x\n"
"    iadd r2.__z_, r2.x, r2.w_neg(xyzw)\n"
"    and r2._y__, r2.y, r2.z\n"
"   \n"
"    dcl_literal l273, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.x___, r2.x, l273\n"
"   \n"
"    dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.x___, r2.x, l274, r2.y\n"
"   \n"
"    dcl_literal l275, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2._y__, r2.x, l275\n"
"   \n"
"    dcl_literal l276, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r2.__z_, r2.x, l276\n"
"    cmov_logical r2.__z_, r2.y, r2.z, r2.x\n"
"   \n"
"    dcl_literal l277, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r2.___w, r2.x, l277\n"
"   \n"
"    dcl_literal l278, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r3._y__, l278, r2.z_neg(xyzw)\n"
"    ushr r3._y__, r0.z, r3.y\n"
"    ishl r2.__z_, r0.z, r2.z\n"
"    ishl r2.___w, r0.w, r2.w\n"
"    ior r2.___w, r3.y, r2.w\n"
"    cmov_logical r2.___w, r2.y, r0.z, r2.w\n"
"   \n"
"    dcl_literal l279, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2._y__, r2.y, l279, r2.z\n"
"    cmov_logical r0.__zw, r2.x, r2.yyyw, r0.zzzw\n"
"   \n"
"    dcl_literal l280, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    ige r2.x___, r3.x, l280\n"
"   \n"
"    dcl_literal l281, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0\n"
"    iadd r2._y__, r3.x, l281\n"
"    cmov_logical r2._y__, r2.x, r2.y, r3.x\n"
"   \n"
"    dcl_literal l282, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    imin r2.__z_, r3.x, l282\n"
"   \n"
"    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"    iadd r2._y__, l283, r2.y_neg(xyzw)\n"
"    ushr r2.___w, r1.z, r2.y\n"
"    ishl r3._y__, r1.x, r2.z\n"
"    ior r2.___w, r2.w, r3.y\n"
"    cmov_logical r2.___w, r2.x, r1.z, r2.w\n"
"    cmov_logical r2.___w, r3.x, r2.w, r1.x\n"
"    ushr r2._y__, r0.z, r2.y\n"
"    ishl r2.__z_, r0.w, r2.z\n"
"    ior r2._y__, r2.y, r2.z\n"
"    cmov_logical r2.x___, r2.x, r0.z, r2.y\n"
"    cmov_logical r2.x___, r3.x, r2.x, r0.w\n"
"    udiv r2._y__, r2.w, r2.x\n"
"    umul r2.__z_, r2.y, r2.x\n"
"    ilt r3.x___, r2.w, r2.z\n"
"    iadd r3._y__, r2.z, r2.w_neg(xyzw)\n"
"    iadd r3._y__, r3.y, r2.x\n"
"   \n"
"    dcl_literal l284, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"    iadd r3._y__, r3.y, l284\n"
"    iadd r2.__z_, r2.w, r2.z_neg(xyzw)\n"
"    cmov_logical r2.__z_, r3.x, r3.y, r2.z\n"
"    udiv r2.x___, r2.z, r2.x\n"
"    iadd r2.__z_, r2.y, r2.x_neg(xyzw)\n"
"    iadd r2.x___, r2.y, r2.x\n"
"    cmov_logical r2.x___, r3.x, r2.z, r2.x\n"
"   \n"
"    dcl_literal l285, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2._y__, r0.z, l285\n"
"   \n"
"    dcl_literal l286, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r2.__z_, r0.z, l286\n"
"   \n"
"    dcl_literal l287, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.___w, r2.x, l287\n"
"   \n"
"    dcl_literal l288, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r2.x___, r2.x, l288\n"
"    umul r3.x___, r2.z, r2.x\n"
"    umul r2.__z_, r2.z, r2.w\n"
"    umul r3._y__, r2.y, r2.x\n"
"    umul r2._y__, r2.y, r2.w\n"
"   \n"
"    dcl_literal l289, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.__z_, r2.y, l289\n"
"   \n"
"    dcl_literal l290, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r3.___w, r3.y, l290\n"
"    iadd r3.__z_, r3.z, r3.w\n"
"    iadd r2.__z_, r2.z, r3.z\n"
"   \n"
"    dcl_literal l291, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3.__z_, r2.z, l291\n"
"    iadd r3.x___, r3.x, r3.z\n"
"   \n"
"    dcl_literal l292, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3._y__, r3.y, l292\n"
"    iadd r3.x___, r3.x, r3.y\n"
"   \n"
"    dcl_literal l293, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r2.__z_, r2.z, l293\n"
"   \n"
"    dcl_literal l294, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2._y__, r2.y, l294\n"
"    ior r2._y__, r2.z, r2.y\n"
"   \n"
"    dcl_literal l295, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.__z_, r0.w, l295\n"
"   \n"
"    dcl_literal l296, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r3._y__, r0.w, l296\n"
"    umul r3._y__, r3.y, r2.w\n"
"    umul r2.x_z_, r2.z, r2.xxwx\n"
"   \n"
"    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ushr r2.___w, r2.z, l297\n"
"   \n"
"    dcl_literal l298, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.x___, r2.x, l298\n"
"    iadd r2.x___, r2.w, r2.x\n"
"    iadd r2.x___, r3.y, r2.x\n"
"   \n"
"    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"    ishl r2.x___, r2.x, l299\n"
"   \n"
"    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"    and r2.__z_, r2.z, l300\n"
"    ior r2.x___, r2.x, r2.z\n"
"    iadd r2.__z_, r2.x, r3.x\n"
"    ult r2.x___, r2.z, r2.x\n"
"    ult r2.___w, r1.x, r2.z\n"
"    ieq r3.x___, r1.x, r2.z\n"
"    ult r3._y__, r1.z, r2.y\n"
"    and r3._y__, r3.x, r3.y\n"
"    ior r2.___w, r2.w, r3.y\n"
"   \n"
"    dcl_literal l301, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF\n"
"   \n"
"    dcl_literal l302, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"    cmov_logical r2.___w, r2.w, l301, l302\n"
"    ieq r3._y__, r1.z, r2.y\n"
"    and r3.x___, r3.x, r3.y\n"
"   \n"
"    dcl_literal l303, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    cmov_logical r2.___w, r3.x, l303, r2.w\n"
"   \n"
"    dcl_literal l304, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"    ilt r2.___w, r2.w, l304\n"
"    ior r2.x___, r2.x, r2.w\n"
"    iadd r0.__z_, r2.y, r0.z_neg(xyzw)\n"
"    ult r2.___w, r2.y, r0.z\n"
"    iadd r2.___w, r2.z, r2.w\n"
"    iadd r0.___w, r2.w, r0.w_neg(xyzw)\n"
"    cmov_logical r0.__zw, r2.x, r0.zzzw, r2.yyyz\n"
"    iadd r0.__z_, r1.z, r0.z_neg(xyzw)\n"
"    ult r2.x___, r1.z, r0.z\n"
"    iadd r2.x___, r1.x, r2.x\n"
"    iadd r1.x___, r2.x, r0.w_neg(xyzw)\n"
"    mov r1.__z_, r0.z\n"
"endif\n"
"dcl_literal l305, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"ilt r0.__z_, r1.y, l305\n"
"cmov_logical r0.xy__, r0.z, r0.xyxx, r1.zxzz\n"
"dcl_literal l306, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r1.y, r0.xyxx, l306\n"
"dcl_literal l307, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.xy__, r1.w, l307, r0.xyxx\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umod_i8",
"mdef(500)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"mov r0._y__, r1.x\n"
"dcl_literal l9, 0x000000FF, 0x000000FF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l9\n"
"dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"cmov_logical r0.___w, r1.y, r1.y, l10\n"
"udiv r1.__z_, r1.x, r0.w\n"
"dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r1._y__, r1.y, r1.z, l11\n"
"umul r0.___w, r0.w, r1.y\n"
"iadd r0.___w, r1.x, r0.w_neg(xyzw)\n"
"dcl_literal l12, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.__z_, r0.w, l12\n"
"mov r0.x___, r0.z\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umul24_u32",
"mdef(501)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"\n"
"dcl_literal l2, 0x00FFFFFF, 0x00FFFFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l2\n"
"umul r1.x___, r1.x, r1.y\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umul_hi_u16",
"mdef(502)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"\n"
"mov r0._y_, r1.x\n"
"umul r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l3, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r0.x___, r0.w, l3\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umul_hi_u32",
"mdef(503)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y_, r1.x\n"
"\n"
"dcl_literal l14, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.xyxx, l14\n"
"\n"
"dcl_literal l15, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.__zw, r0.xxxy, l15\n"
"umul r0.___w, r1.z, r1.w\n"
"umul r1.x_zw, r1.xxzx, r1.yyyw\n"
"\n"
"dcl_literal l16, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.x___, r1.x, l16\n"
"\n"
"dcl_literal l17, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r1._y__, r1.w, l17\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r1.x___, r1.z, r1.x\n"
"\n"
"dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.x___, r1.x, l18\n"
"iadd r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l19, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"ushr r1.x___, r1.w, l19\n"
"iadd r0.x___, r0.w, r1.x\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__umul_hi_u8",
"mdef(504)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y_, r1.x\n"
"umul r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"ushr r0.x___, r0.w, l1\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__urhadd_u16",
"mdef(505)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r0.___w, r0.x, r0.y\n"
"\n"
"dcl_literal l6, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r0.___w, r0.w, l6\n"
"\n"
"dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ushr r0.x___, r0.w, l7\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__urhadd_u32",
"mdef(506)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"ior r0.___w, r0.y, r0.x\n"
"\n"
"dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"and r0.___w, r0.w, l10\n"
"\n"
"dcl_literal l11, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ushr r1.xy__, r0.xyxx, l11\n"
"iadd r1.x___, r1.x, r1.y\n"
"iadd r0.x___, r1.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__urhadd_u8",
"mdef(507)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"iadd r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"iadd r0.___w, r1.x, l2\n"
"\n"
"dcl_literal l3, 0x00000001, 0x00000001, 0x00000001, 0x00000001\n"
"ushr r0.x___, r0.w, l3\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__urotate_u16",
"mdef(508)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"\n"
"dcl_literal l13, 0x0000000F, 0x0000FFFF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.yxyy, l13\n"
"ishl r0.___w, r1.y, r1.x\n"
"\n"
"dcl_literal l14, 0x00000010, 0x00000010, 0x00000010, 0x00000010\n"
"iadd r1.x___, l14, r1.x_neg(xyzw)\n"
"ushr r1.x___, r1.y, r1.x\n"
"ior r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l15, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"and r0.x___, r0.w, l15\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__urotate_u32",
"mdef(509)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"\n"
"dcl_literal l16, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F\n"
"and r0.___w, r0.y, l16\n"
"ishl r1.x___, r0.x, r0.w\n"
"\n"
"dcl_literal l17, 0x00000020, 0x00000020, 0x00000020, 0x00000020\n"
"iadd r0.___w, l17, r0.w_neg(xyzw)\n"
"ushr r0.___w, r0.x, r0.w\n"
"ior r0.x___, r1.x, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__urotate_u8",
"mdef(510)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__,r1.x\n"
"\n"
"dcl_literal l5, 0x00000007, 0x000000FF, 0x00000000, 0x00000000\n"
"and r1.xy__, r0.yxyy, l5\n"
"ishl r0.___w, r1.y, r1.x\n"
"\n"
"dcl_literal l6, 0x00000008, 0x00000008, 0x00000008, 0x00000008\n"
"iadd r1.x___, l6, r1.x_neg(xyzw)\n"
"ushr r1.x___, r1.y, r1.x\n"
"ior r0.___w, r0.w, r1.x\n"
"\n"
"dcl_literal l7, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"and r0.x___, r0.w, l7\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__usub_sat_u16",
"mdef(511)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l5, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF\n"
"umin r0.x___, r0.w, l5\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__usub_sat_u32",
"mdef(512)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"ult r1.x___, r0.x, r0.y\n"
"\n"
"dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000\n"
"cmov_logical r0.__z_, r1.x, l10, r0.w\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "__usub_sat_u8",
"mdef(513)_out(1)_in(2)\n"
"mov r0, in0\n"
"mov r1, in1\n"
"\n"
"mov r0._y__, r1.x\n"
"iadd r0.___w, r0.x, r0.y_neg(xyzw)\n"
"\n"
"dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF\n"
"umin r0.x___, r0.w, l2\n"
"mov out0, r0\n"
"mend\n"
,2,1
},
{ "", NULL }};
#endif // _macrodb_gen_HPP_
